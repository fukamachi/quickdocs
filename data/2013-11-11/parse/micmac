
(:TYPE :SYSTEM :NAME "micmac" :AUTHOR "Gabor Melis" :MAINTAINER NIL :VERSION
 "0.0.2" :LICENCE "MIT" :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "MICMAC" :FULL-NAME "MICMAC" :DOCUMENTATION NIL
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS NIL)
  (:TYPE :PACKAGE :NAME ".METROPOLIS-HASTINGS" :FULL-NAME
   "MICMAC.METROPOLIS-HASTINGS" :DOCUMENTATION "Metroplis-Hastings MCMC."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "MC-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A simple markov chain for Metropolis Hastings. With
temperature it is suitable for MC3."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TEMPERATURE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T)
       :ACCESSORS
       ((:NAME "TEMPERATURE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
         :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The PROBABILITY-RATIO of samples is raised to the
power of 1 / TEMPERATURE before calculating the acceptance
probability. This effectively flattens the peaks if TEMPERATURE > 1
which makes it easier for the chain to traverse deep valleys.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         T))
       :WRITERS NIL :DOCUMENTATION
       "This is the current sample where the chain is.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
         :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "JUMP-DISTRIBUTION-PREPARED-P" :PACKAGE-NAME
        "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "JUMP-DISTRIBUTION-PREPARED-P" :PACKAGE-NAME
         "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SET-STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JUMP-TO-SAMPLE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-SAMPLE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP NIL)
       ((:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
        (:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL))))
     :DOCUMENTATION "From the current state of CHAIN make JUMP (from the current
distribution of CHAIN) and return the sample where we landed. Reuse
RESULT-SAMPLE when possible. ")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "JUMP-TO-SAMPLE*" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "RESULT-SAMPLE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
       :EXTERNALP NIL))
     :DOCUMENTATION "This function is called by JUMP-TO-SAMPLE. It is
where JUMP-TO-SAMPLE behaviour shall be customized.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PREPARE-JUMP-DISTRIBUTION" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Prepare for sampling from the F(X) = Q(SAMPLE->X)
distribution. Called by RANDOM-JUMP. The around method ensures that
nothing is done unless there was a state change.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREPARE-JUMP-DISTRIBUTION" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREPARE-JUMP-DISTRIBUTION" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RANDOM-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Sample a jump from the current distribution of
jumps that was computed by PREPARE-JUMP-DISTRIBUTION.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANDOM-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANDOM-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOG-PROBABILITY-RATIO" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "SAMPLE1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "SAMPLE2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Return P(SAMPLE1)/P(SAMPLE2). It's in the log
domain to avoid overflows and the ratio part is because that it may
allow computational shortcuts as opposed to calculating unnormalized
probabilities separately.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOG-PROBABILITY-RATIO-TO-JUMP-TARGET" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "TARGET" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Return P(TARGET)/P(STATE) where JUMP is from the
current state of CHAIN to TARGET sample. This can be specialized for
speed. The default implementation just falls back on
LOG-PROBABILITY-RATIO.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOG-PROBABILITY-RATIO-TO-JUMP-TARGET" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "TARGET" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOG-PROBABILITY-RATIO-TO-JUMP-TARGET" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "TARGET" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOG-JUMP-PROBABILITY-RATIO" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "TARGET" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Return Q(TARGET->STATE) / Q(STATE->TARGET) where Q
is the jump distribution and JUMP is from the current STATE of CHAIN
to TARGET sample.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOG->ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Calculate the acceptance probability of CANDIDATE
to which JUMP leads from the current STATE of CHAIN.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ACCEPT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Called when CHAIN accepts JUMP to CANDIDATE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REJECT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Called when CHAIN rejects JUMP to CANDIDATE. It
does nothing by default, it's just a convenience for debugging.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAYBE-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION "Randomly accept or reject JUMP to CANDIDATE from
the current state of CHAIN with ACCEPTANCE-PROBABILITY.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Take a step on the markov chain. Return a boolean
indicating whether the proposed jump was accepted.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "MC3-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "MC-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       T))
     :DOCUMENTATION "High probability island separated by low valley
make the chain poorly mixing. MC3-CHAIN has a number of HOT-CHAINS
that have state probabilities similar to that of the main chain but
less jagged. Often it suffices to set the temperatures of the
HOT-CHAINS higher use the very same base probability distribution."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HOT-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HOT-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
         :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ACCEPT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Swap the states of CHAIN1 and CHAIN2 of MC3.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REJECT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION "Called when the swap of states of CHAIN1 and CHAIN2
is rejected. It does nothing by default, it's just a convenience for
debugging.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANDOM-UNTIL-DIFFERENT" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIMIT" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "TABU" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAYBE-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION "Swap of states of CHAIN1 and CHAIN2 of MC3 with
ACCEPTANCE-PROBABILITY.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "JUMP-BETWEEN-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL))
     :DOCUMENTATION "Choose two chains randomly and swap their states
with MC3 acceptance probability.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "JUMP-BETWEEN-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "JUMP-BETWEEN-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MC3" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "MC3-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUM-SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "START" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       0)
      ((:NAME "END" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL))))
     :DOCUMENTATION
     "Return the sum of elements in the [START,END) subsequence of SEQ.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANDOM-ELEMENT" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "START" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       0)
      ((:NAME "END" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL)))
      ((:NAME "SUM" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
       ((:NAME "SUM-SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL)
        (:NAME "SEQ" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
        (:NAME "KEY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "KEY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP NIL)
        (:NAME "START" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "START" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL)
        (:NAME "END" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "END" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL))))
     :DOCUMENTATION
     "Choose an element randomly from the [START,END) subsequence of SEQ
with given probabilities. KEY returns the unormalized probability of
an element, SUM is the sum of these unnormalized probalities contains
unnormalized probabilties. Return the element chosen and its index.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ENUMERATING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "MC-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       T))
     :DOCUMENTATION "A simple abstract chain subclass that
explicitly enumerates the probabilities of the distribution."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "P-JUMPS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "P-JUMPS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "ENUMERATING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "N-JUMPS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANDOM-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "ENUMERATING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
      :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Mix this in with your chain to have it print
trace of acceptances/rejections."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
      (:NAME "CANDIDATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAYBE-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME
       "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REJECT-SWAP-CHAIN-STATES" :PACKAGE-NAME
      "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
        NIL)
       (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
        :EXTERNALP T))
      (:NAME "CHAIN1" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL)
      (:NAME "CHAIN2" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "LOG-PROBABILITY-RATIO-TO-JUMP-TARGET" :PACKAGE-NAME
     "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "ENUMERATING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "MC3-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "JUMP-TO-SAMPLE*" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "ACCEPT-SWAP-CHAIN-STATES" :PACKAGE-NAME
     "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "REJECT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
     T)
    (:NAME "JUMP-TO-SAMPLE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "ACCEPT-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
     T)
    (:NAME "MAYB-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "TEMPERATURE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
     T)
    (:NAME "LOG-JUMP-PROBABILITY-RATIO" :PACKAGE-NAME
     "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "MAYBE-SWAP-CHAIN-STATES" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "REJECT-SWAP-CHAIN-STATES" :PACKAGE-NAME
     "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "LOG-PROBABILITY-RATIO" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "ACCEPTANCE-PROBABILITY" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "PREPARE-JUMP-DISTRIBUTION" :PACKAGE-NAME
     "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "RANDOM-JUMP" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP
     T)
    (:NAME "STATE" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "MC-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS" :EXTERNALP T)
    (:NAME "JUMP-BETWEEN-CHAINS" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)
    (:NAME "TRACING-CHAIN" :PACKAGE-NAME "MICMAC.METROPOLIS-HASTINGS"
     :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".UCT" :FULL-NAME "MICMAC.UCT" :DOCUMENTATION
   "UCT Monte Carlo tree search." :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A node in the UCT tree. Roughly translates to a
state in the search space. Note that the state itself is not stored
explicity, but it can be recovered by `replaying' the actions from the
starting state or by customizing MAKE-UCT-NODE."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEPTH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DEPTH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "N-VISITS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS
       ((:NAME "N-VISITS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION
       "The number of times this node was visited.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS
       ((:NAME "EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION "Outgoing edges.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "AVERAGE-REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "AVERAGE-REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Average reward over random playouts started from
below this node. See UPDATE-UCT-STATISTICS and REWARD.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "PPRINT-POP" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PPRINT-EXIT-IF-LIST-EXHAUSTED" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "UCT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An edge in the UCT tree. Represents an action taken
from a state. The value of an action is the value of its target state
which is not quite as generic as it could be; feel free to specialize
AVERAGE-REWARD for the edges if that's not the case."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ACTION" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "ACTION" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The action represented by the edge.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FROM-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS
       ((:NAME "FROM-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION "The node this edge starts from.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TO-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS
       ((:NAME "TO-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION "The node this edge points to.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "N-VISITS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :ACCESSORS
       ((:NAME "N-VISITS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION
       "The number of times this action was taken from the
parent state.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "PPRINT-POP" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PPRINT-EXIT-IF-LIST-EXHAUSTED" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AVERAGE-REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANDOM-ELEMENT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SEQ" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTREMUM" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "PRED" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VISITED-EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNVISITED-EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EDGE-SCORE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGE-SCORE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGE-SCORE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Choose an action to take from a state, in other
words an edge to follow from NODE in the tree. The default
implementation chooses randomly from the yet unvisited edges or if
there is none moves down the edge with the maximum EDGE-SCORE. If you
are thinking of customizing this, for example to make it choose the
minimum at odd depths, the you may want to consider specializing
REWARD or UPDATE-UCT-STATISTICS instead.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OUTCOME->REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Compute the reward for a node in the tree from
OUTCOME that is the result of a playout. This is called by the default
implementation of UPDATE-UCT-STATISTICS. This is where one typically
negates depending on the parity of DEPTH in two player games.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OUTCOME->REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "OUTCOME->REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UPDATE-UCT-STATISTICS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ROOT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Increment the number of visits and update the
average reward in nodes and edges of PATH. By default, edges simply
get their visit counter incremented while nodes also get an update to
AVERAGE-REWARD based on what OUTCOME->REWARD returns.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-UCT-STATISTICS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "PATH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-UCT-STATISTICS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "PATH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "OUTCOME" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARENT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "PARENT-STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Create a node representing the state of that EDGE
leads to from PARENT. Specialize this if you want to keep track of the
state which is not done by default as it can be expensive, especially
in light of TAKE-ACTION mutating it. The default implementation simply
creates an instance of the class of PARENT so that one can start from
a subclass of UCT-NODE and be sure that that class is going to be used
for nodes below it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PARENT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PARENT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
       (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "PARENT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "PARENT-STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Return the state that corresponds to NODE. This is
not a straightforward accessor unless NODE is customized to store it.
The rest of the parameters are provided so that one can reconstruct
the state by taking the action of EDGE in the PARENT-STATE of PARENT.
It's okay to destroy PARENT-STATE in the process as long as it's not
stored elsewhere. This function must be customized.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LIST-EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T))
     :DOCUMENTATION "Return a list of edges representing the possible
actions from NODE with STATE. This function must be customized.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PLAY-OUT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
      (:NAME "REVERSE-PATH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION "Play a random game from NODE with STATE and return
the outcome that's fed into UPDATE-UCT-STATISTICS. The way the random
game is played is referred to as `default policy' and that's what
makes or breaks UCT search. This function must be customized.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UCT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ROOT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "FRESH-ROOT-STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "EXPLORATION-BIAS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL)
      (:NAME "MAX-N-PLAYOUTS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Starting from the ROOT node search the tree expanding it one node
for each playout. Finally return the mutated ROOT. ROOT may be the
root node of any tree, need not be a single node with no edges.
FRESH-ROOT-STATE is a function that returns a fresh state
corresponding to ROOT. This state will be destroyed unless special
care is taken in STATE."))
   :EXTERNAL-SYMBOLS
   ((:NAME "DEPTH" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "AVERAGE-REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "STATE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "N-VISITS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "UCT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "UNVISITED-EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "EDGE-SCORE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "TO-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "VISITED-EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "SELECT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "FROM-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "UCT-EDGE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "PLAY-OUT" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "ACTION" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "OUTCOME->REWARD" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "LIST-ACTIONS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "UPDATE-UCT-STATISTICS" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "MAKE-UCT-NODE" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)
    (:NAME "EDGES" :PACKAGE-NAME "MICMAC.UCT" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".GAME-THEORY" :FULL-NAME "MICMAC.GAME-THEORY"
   :DOCUMENTATION "Game theory." :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTREMUM" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PRED" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Find the first extreme value of the [START,END) subsequence of
VECTOR and return it along with its index. The extremum is what would
be the first element of VECTOR sorted by SORT with PRED.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-TO-2D-MATRIX" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-NASH-EQUILIBRIUM" :PACKAGE-NAME "MICMAC.GAME-THEORY"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PAYOFF" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "N-ITERATIONS" :PACKAGE-NAME "MICMAC.GAME-THEORY" :EXTERNALP NIL)
       100))
     :DOCUMENTATION
     "Find a Nash equilibrium and for a zero-sum game represented by
PAYOFF matrix (a 2d matrix or a nested list). PAYOFF is from the point
of view of the row player: the player who choses column wants to
minimize, the row player wants to maximize. The first value returned
is a vector of unnormalized probabilities assigned to each action of
the row player, the second value is the same for the column player and
the third is the expected payoff of the row player in the nash
equilibrium represented by the oddment vectors."))
   :EXTERNAL-SYMBOLS
   ((:NAME "FIND-NASH-EQUILIBRIUM" :PACKAGE-NAME "MICMAC.GAME-THEORY"
     :EXTERNALP T)))))
