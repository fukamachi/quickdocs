
(:TYPE :SYSTEM :NAME "stp-query" :AUTHOR "Eric Sessoms <eric@nubgames.com>"
 :MAINTAINER NIL :VERSION "0.2" :LICENCE "LGPL" :DESCRIPTION
 "A jQuery-like API for manipulating and traversing STP documents."
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ALEXANDRIA" "ANAPHORA" "ARNESI" "CL-INTERPOL" "CL-PPCRE" "CXML-STP"
  "ITERATE" "SPLIT-SEQUENCE" "SYMBOL-MUNGER" "YACC")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "STP-QUERY" :FULL-NAME "STP-QUERY" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "+COMMON-WHITE-SPACE-TRIMBAG+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(#\\  #\\Newline #\\Return #\\Tab #\\NO-BREAK_SPACE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM-WHITESPACE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM-AND-NULLIFY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "trims the whitespace from a string returning nil
   if trimming produces an empty string or the string 'nil' ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-ALL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PART" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "REPLACEMENT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "CHAR=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a new string in which all the occurences of the part 
is replaced with replacement. [FROM http://cl-cookbook.sourceforge.net/strings.html#manip]")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOS-SAFE-READ-LINE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EOF-ERROR-P" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "EOF-VALUE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "RECURSIVE-P" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "readline that can read unix or dos lines")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+OPTION+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "\"%option\\\\s\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+OPTION-CASE-INSENSITIVE+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"%option\\\\scase-insensitive\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+END-OF-DEFS+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"^%%\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RETURN-VALUE+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "\"\\\\s*{\\\\s*return\\\\s*([^;]*)\\\\s*;\\\\s*}\\\\s*\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-EXPANSIONS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DEFS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "NEW-REGEX" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HANDLE-QUOTED-RULES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PRODUCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "quotes in flex productions should be direct string matches")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYMBOLIZE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "KEYWORDIZE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-GROUP-MATCHES-AS-STRING" :PACKAGE-NAME "STP-QUERY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "TARGET" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Expects a single matching group")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-UPCASE?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-RETURN-VALUE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RTN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-FLEX-FILE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FILE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CI?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      ((:NAME "DEFS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       ((:NAME "MAKE-HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TEST" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQUALP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "DONE-WITH-DEFS?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+CSS3-LEX-PRODUCTIONS+" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(STP-QUERY::READ-FLEX-FILE
 (ASDF/SYSTEM:SYSTEM-RELATIVE-PATHNAME :STP-QUERY #P\"src/css3.lex\"))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CSS3-LEXER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "INP" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LEX-RESULTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INP" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       "#foo, .foo #bar, .foo > bar[src~=blech]"))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUT-QUOTES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUT-LAST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUT-FIRST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IS-SPECIAL?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARG-LIST-VAR-NAMES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIQUIFY-AND-REINTERN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PACKAGE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*PACKAGE*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LAM" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%RULE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "BODY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RULE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%RULE-SET" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "RULES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RULE-SET" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RULES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CSS3-SELECTOR-PARSER*" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "'#S(YACC::PARSER
    :STATES 64
    :GOTO #(((STP-QUERY::SELECTOR . 1) (STP-QUERY::OR-SEL . 2)
             (STP-QUERY::COMB-SEL . 3) (STP-QUERY::AND-SEL . 7)
             (STP-QUERY::SIMPLE-SELECTOR . 10) (STP-QUERY::ATTRIB . 15)
             (STP-QUERY::PSEUDO . 16))
            NIL NIL NIL ((STP-QUERY::SPACES . 5))
            ((STP-QUERY::OR-SEL . 6) (STP-QUERY::COMB-SEL . 3)
             (STP-QUERY::AND-SEL . 7) (STP-QUERY::SIMPLE-SELECTOR . 10)
             (STP-QUERY::ATTRIB . 15) (STP-QUERY::PSEUDO . 16))
            NIL
            ((STP-QUERY::COMBINATOR . 8) (STP-QUERY::SPACES . 55)
             (STP-QUERY::SIMPLE-SELECTOR . 62) (STP-QUERY::ATTRIB . 15)
             (STP-QUERY::PSEUDO . 16))
            ((STP-QUERY::COMB-SEL . 9) (STP-QUERY::AND-SEL . 7)
             (STP-QUERY::SIMPLE-SELECTOR . 10) (STP-QUERY::ATTRIB . 15)
             (STP-QUERY::PSEUDO . 16))
            NIL NIL NIL NIL NIL NIL NIL NIL ((STP-QUERY::SPACES . 18)) NIL
            ((STP-QUERY::SPACES . 20))
            ((STP-QUERY::ATTRIB-VALUE-DEF . 22)
             (STP-QUERY::ATTRIB-MATCH-TYPE . 26))
            NIL ((STP-QUERY::SPACES . 23)) NIL NIL NIL
            ((STP-QUERY::ATTRIB-VALUE . 27)) NIL NIL NIL NIL NIL NIL NIL NIL
            NIL NIL NIL ((STP-QUERY::SPACES . 39))
            ((STP-QUERY::SELECTOR . 40) (STP-QUERY::OR-SEL . 2)
             (STP-QUERY::COMB-SEL . 3) (STP-QUERY::AND-SEL . 7)
             (STP-QUERY::SIMPLE-SELECTOR . 10) (STP-QUERY::ATTRIB . 15)
             (STP-QUERY::PSEUDO . 16))
            NIL NIL ((STP-QUERY::SPACES . 43))
            ((STP-QUERY::NTH-EXPR . 44) (STP-QUERY::NTH-SIGN . 48))
            ((STP-QUERY::SPACES . 45)) NIL NIL NIL NIL NIL
            ((STP-QUERY::NTH-SIGN . 51)) NIL NIL NIL NIL NIL
            ((STP-QUERY::SPACES . 57)) NIL ((STP-QUERY::SPACES . 59)) NIL
            ((STP-QUERY::SPACES . 61)) NIL NIL NIL)
    :ACTION #(((:|:| . #<YACC::SHIFT-ACTION 36>)
               (:* . #<YACC::SHIFT-ACTION 14>)
               (:HASH . #<YACC::SHIFT-ACTION 11>)
               (:CLASS . #<YACC::SHIFT-ACTION 12>)
               (:IDENT . #<YACC::SHIFT-ACTION 13>)
               (:[ . #<YACC::SHIFT-ACTION 17>))
              ((YACC::YACC-EOF-SYMBOL . #<YACC::ACCEPT-ACTION >))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::OR-SEL (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::OR-SEL (1)>)
               (:|,| . #<YACC::SHIFT-ACTION 4>))
              ((:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:[ . #<YACC::SHIFT-ACTION 17>)
               (:IDENT . #<YACC::SHIFT-ACTION 13>)
               (:CLASS . #<YACC::SHIFT-ACTION 12>)
               (:HASH . #<YACC::SHIFT-ACTION 11>)
               (:* . #<YACC::SHIFT-ACTION 14>)
               (:|:| . #<YACC::SHIFT-ACTION 36>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::OR-SEL (4)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::OR-SEL (4)>))
              ((:|:| . #<YACC::SHIFT-ACTION 36>)
               (:* . #<YACC::SHIFT-ACTION 14>)
               (:HASH . #<YACC::SHIFT-ACTION 11>)
               (:CLASS . #<YACC::SHIFT-ACTION 12>)
               (:IDENT . #<YACC::SHIFT-ACTION 13>)
               (:[ . #<YACC::SHIFT-ACTION 17>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 63>))
              ((:|:| . #<YACC::SHIFT-ACTION 36>)
               (:* . #<YACC::SHIFT-ACTION 14>)
               (:HASH . #<YACC::SHIFT-ACTION 11>)
               (:CLASS . #<YACC::SHIFT-ACTION 12>)
               (:IDENT . #<YACC::SHIFT-ACTION 13>)
               (:[ . #<YACC::SHIFT-ACTION 17>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (3)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (3)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (3)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SIMPLE-SELECTOR (1)>))
              ((:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:IDENT . #<YACC::SHIFT-ACTION 19>))
              ((:SUBSTRING . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:BEGINS-WITH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:INCLUDES . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:= . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:DASHMATCH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:ENDS-WITH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:] . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:ENDS-WITH . #<YACC::SHIFT-ACTION 34>)
               (:DASHMATCH . #<YACC::SHIFT-ACTION 32>)
               (:INCLUDES . #<YACC::SHIFT-ACTION 31>)
               (:= . #<YACC::SHIFT-ACTION 30>)
               (:BEGINS-WITH . #<YACC::SHIFT-ACTION 33>)
               (:SUBSTRING . #<YACC::SHIFT-ACTION 35>)
               (:] . #<YACC::SHIFT-ACTION 21>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (5)>))
              ((:] . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:] . #<YACC::SHIFT-ACTION 24>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB (7)>))
              ((:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:SUBSTRING . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:BEGINS-WITH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:INCLUDES . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:= . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:DASHMATCH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:ENDS-WITH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:] . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:- . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>))
              ((:IDENT . #<YACC::SHIFT-ACTION 28>)
               (:STRING . #<YACC::SHIFT-ACTION 29>))
              ((:] . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE-DEF (2)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE-DEF (2)>))
              ((:] . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE (1)>))
              ((:] . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE (1)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-VALUE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:IDENT
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>)
               (:STRING
                . #<YACC::REDUCE-ACTION STP-QUERY::ATTRIB-MATCH-TYPE (1)>))
              ((:NTH-FUNCTION . #<YACC::SHIFT-ACTION 42>)
               (:FUNCTION . #<YACC::SHIFT-ACTION 38>)
               (:IDENT . #<YACC::SHIFT-ACTION 37>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (2)>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:|:| . #<YACC::SHIFT-ACTION 36>)
               (:* . #<YACC::SHIFT-ACTION 14>)
               (:HASH . #<YACC::SHIFT-ACTION 11>)
               (:CLASS . #<YACC::SHIFT-ACTION 12>)
               (:IDENT . #<YACC::SHIFT-ACTION 13>)
               (:[ . #<YACC::SHIFT-ACTION 17>))
              ((:|)| . #<YACC::SHIFT-ACTION 41>))
              ((YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (5)>))
              ((:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:- . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::NTH-SIGN (0)>)
               (:- . #<YACC::SHIFT-ACTION 54>) (:+ . #<YACC::SHIFT-ACTION 53>)
               (:IDENT . #<YACC::SHIFT-ACTION 47>))
              ((:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:|)| . #<YACC::SHIFT-ACTION 46>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::PSEUDO (6)>))
              ((:S . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (1)>))
              ((:INTEGER . #<YACC::SHIFT-ACTION 49>))
              ((:IDENT . #<YACC::SHIFT-ACTION 50>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (2)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (2)>))
              ((:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::NTH-SIGN (0)>)
               (:- . #<YACC::SHIFT-ACTION 54>) (:+ . #<YACC::SHIFT-ACTION 53>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (3)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (3)>))
              ((:INTEGER . #<YACC::SHIFT-ACTION 52>))
              ((:S . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (5)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::NTH-EXPR (5)>))
              ((:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::NTH-SIGN (1)>))
              ((:INTEGER . #<YACC::REDUCE-ACTION STP-QUERY::NTH-SIGN (1)>))
              ((:+ . #<YACC::SHIFT-ACTION 60>) (:~ . #<YACC::SHIFT-ACTION 58>)
               (:> . #<YACC::SHIFT-ACTION 56>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (2)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::COMB-SEL (2)>))
              ((:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:|:| . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (0)>)
               (:S . #<YACC::SHIFT-ACTION 25>))
              ((:[ . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (3)>))
              ((:|:| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:S . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:|,| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::AND-SEL (2)>))
              ((:|,| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:+ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:> . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:~ . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:|)| . #<YACC::REDUCE-ACTION STP-QUERY::SPACES (1)>)
               (:|:| . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>)
               (:* . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>)
               (:CLASS . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>)
               (:HASH . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>)
               (:IDENT . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>)
               (:[ . #<YACC::REDUCE-ACTION STP-QUERY::COMBINATOR (1)>))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-RESULTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INP" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       "#foo, .foo #bar .bast,   .foo > bar[src~=blech],  .foo:hover"))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOT" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IS" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HAS" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROOT" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NTH-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "MUL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "ADD" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NTH-LAST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "MUL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "ADD" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ONLY-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB-SEL-FUNCTION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "FOREACH" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EACH" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "FN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Iterate over a set of elements, executing a function for each matched element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "FN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Pass each element in the current matched set through a function, producing
   a new object containing the return values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     "Reduce the set of matched elements to the first in the set.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-STRING" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE-NAME" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the value of an attribute for the first element in the set of matched elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JOIN-WORDS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "WORDS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-WORDS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLASS-NAMES" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Adds the specified class(es) to each of the set of matched elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHILDREN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get the children of each element in the set of matched
   elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE-OVER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "FN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANCESTORS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSEST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the first element that matches the selector, beginning at
   the current element and progressing up through the DOM tree.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTENTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     "Get the children of each element in the set of matched
   elements, including text and comment nodes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-XML" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEXT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILTER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Reduce the set of matched elements to those that match the
   selector or pass the function's test.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get the descendants of each element in the current set of
   matched elements, filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HAS-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Determine whether any of the matched elements are assigned the given class.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HTML" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-ELEMENT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NEXT-SIBLING" :PACKAGE-NAME "CXML-STP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT" :PACKAGE-NAME "ITERATE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the immediately following sibling of each element in the
   set of matched elements.  If a selector is provided, it retrieves the next
   sibling only if it matches that selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-ALL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get all preceding siblings of each element in the set of
   matched elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Reduce the set of matched elements to those that match the
   selector or pass the function's test.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the parent of each element in the current set of matched
   elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get the ancestors of each element in the current set of
   matched elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREV-ELEMENT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREV" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the immediately preceding sibling of each element in the
   set of matched elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREV-ALL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get all preceding siblings of each element in the set of
   matched elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-ATTR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE-NAME" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Remove an attribute from each element in the set of matched elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Remove a single class, multiple classes, or all classes from each element
   in the set of matched elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIBLINGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "Get the siblings of each element in the set of matched
   elements, optionally filtered by a selector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLICE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "END" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reduce the set of matched elements to a subset specified by a range of indices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEXT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOGGLE-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SWITCH" :PACKAGE-NAME "ALEXANDRIA.0.DEV" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SWITCH-P" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Add or remove one or more classes from each element in the set of matched
   elements, depending on either the class's presence or the value of the switch
   argument.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VAL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)) :DOCUMENTATION
     "Get the current value of the first element in the set of matched elements.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ELEMENT*" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL (:NAME "EL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TAG" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-KEYWORDS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DOCUMENT*" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*IGNORE-NAMESPACES*" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :DOCUMENTATION "ignore tag name spaces when matching, for now the parser
   doesnt support parsing namespaced tags, so lets ignore tag namespaces"
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-OR-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "FORMS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-AND-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "FORMS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CLASS-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HASH-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ID" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ELT-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TAG" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ATTRIB-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIB" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "MATCH-TYPE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "MATCH-TO" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION "attrib-matcher")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-IMMEDIATE-CHILD-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PARENT-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CHILD-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CHILD-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARENT-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "CHILD-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-IMMEDIATLY-PRECEDED-BY-MATCHER" :PACKAGE-NAME "STP-QUERY"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "THIS-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SIBLING-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PRECEDED-BY-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "THIS-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SIBLING-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PSEUDO-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PSEUDO" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SUBMATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NTH-PSEUDO-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PSEUDO" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "MUL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "ADD" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MATCHER-AUX" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TREE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NODE-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXPRESSION" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-CSS-NODE-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%NODE-MATCHES?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-MATCHES?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUERY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SELECTOR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ELTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)
       (:NAME "*DOCUMENT*" :PACKAGE-NAME "STP-QUERY" :EXTERNALP NIL)))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "SLICE" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "CLOSEST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "SIBLINGS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "ESCAPE-XML" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "QUERY" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "ATTR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "PARENTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "PREV" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "FILTER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "NOT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "ANCESTORS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "REMOVE-ATTR" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "FIRST" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "VAL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "PARSE-RESULTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "CONTENTS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "FOREACH" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "CHILDREN" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "ADD-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "PREV-ALL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "NODE-MATCHES?" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "EACH" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "HTML" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "FIND" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "REMOVE-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "TEXT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "NEXT-ALL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "PARENT" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "HAS-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "NEXT" :PACKAGE-NAME "ITERATE" :EXTERNALP T)
    (:NAME "MAP" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "TOGGLE-CLASS" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "COMPILE-CSS-NODE-MATCHER" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)
    (:NAME "EL" :PACKAGE-NAME "STP-QUERY" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".PSEUDO" :FULL-NAME "STP-QUERY.PSEUDO" :DOCUMENTATION
   NIL :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "NTH-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "NTH-LAST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "LAST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "NOT" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "ROOT" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "HAS" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "FIRST-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "ONLY-CHILD" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)
    (:NAME "IS" :PACKAGE-NAME "STP-QUERY.PSEUDO" :EXTERNALP T)))))
