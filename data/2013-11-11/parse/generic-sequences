
(:TYPE :SYSTEM :NAME "generic-sequences" :AUTHOR "David Sorokin" :MAINTAINER
 NIL :VERSION "0.1.1" :LICENCE "MIT" :DESCRIPTION
 "Generic sequences for Common Lisp." :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "GENERIC-SEQ" :FULL-NAME "GENERIC-SEQ" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :GENERIC :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Test whether this is a sequence.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Returns either NIL or an enumerator.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENUM-CONS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Construct a new enumerator.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENUM-CAR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the CAR part.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENUM-CDR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the CDR part.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENUM-APPEND-2" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENUM-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "DELAYED-ENUM-2" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Append two enumerators.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENUM-APPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENUMS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Append the specified enumerators.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "BASIC-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Represents the basic sequence that is defined only by its enumerator."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DELAYED-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BASIC-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "DELAYED-ENUM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM56" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "BASIC-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "BASIC-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAKE-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Create a sequence by specifying its enumerator.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DELAYED-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "The delayed sequence." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DELAYED-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DELAYED-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "DELAYED-SEQ" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM118" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "DELAYED-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "DELAYED-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DELAY-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Delay the sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ->LIST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Convert the sequence to a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ->VECTOR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Convert the sequence to a vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-CONS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "Construct a new sequence that begins with the specified item and ends with the sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-APPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Append the specified sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REMOVE-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Like the REMOVE-IF-NOT function but applied to the generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REMOVE-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Like the REMOVE-IF function but applied to the generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REMOVE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Like the REMOVE function but applied to the generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MAP-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "Like the MAPCAR function but applied to a single generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MAP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like the MAPCAR function but applied to generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MAPPEND-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "Like SEQ-MAP-1 but the specified function must return a sequence. 
In other words, this is a monadic bind function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MAPPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like SEQ-MAP but the specified function must return a sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-ZIP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a sequence that returns lists of items from the provided sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-FOREACH-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Apply the specified function to the sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-FOREACH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Apply the specified function to the sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-LENGTH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Return the length of the specified sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-ELT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Access the element of the sequence specified by index.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-EQUAL" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ-2" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Test two sequences for equality.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-COMPARE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQ-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ-2" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Compare two sequences where the test function for items must return <0, >0 or 0.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-TAKE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Take the first N elements of the sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-TAKE-WHILE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-TAKE-WHILE takes a predicate function taking a single argument 
and a sequence. It returns a sequence of all items in the original sequence, up until 
the first item for which the predicate function returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-TAKE-WHILE-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-TAKE-WHILE-NOT takes two arguments, a predicate function taking a single argument 
and a sequence. It returns a sequence of all items in the original sequence, up until 
the first item for which the predicate function returns T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-TAKE-NTH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "TAKE-NTH takes two arguments, a number and a sequence. It returns a sequence of 
items from the supplied sequence, taking the first item and every Nth item, where 
N is the supplied number.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-DROP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "Drop the first N elements of the sequence and return the rest.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-DROP-WHILE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-DROP-WHILE takes a predicate function taking a single argument 
and a sequence. It returns a sequence of all items in the original sequence, starting 
from the first item for which the predicate function returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-DROP-WHILE-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-DROP-WHILE-NOT takes a predicate function taking a single argument 
and a sequence. It returns a sequence of all items in the original sequence, starting 
from the first item for which the predicate function returns T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-SPLIT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "Split the sequence at the N-th element and return the both parts as a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-SPLIT-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-SPLIT-IF-NOT takes a predicate function taking a single argument 
and a sequence. It splits the sequence at the first item for which the predicate
function returns NIL and then SEQ-SPLIT-IF-NOT returns the both parts as a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-SPLIT-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "SEQ-SPLIT-IF takes a predicate function taking a single argument 
and a sequence. It splits the sequence at the first item for which the predicate
function returns T and and then SEQ-SPLIT-IF returns the both parts as a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-NULL" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Test whether the sequence is empty.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-CAR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Return the head of sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-CDR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "Return the tail of sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REPEATEDLY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return an infinite lazy sequence obtained by calling the function repeatedly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-ITERATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "It returns an infinite lazy sequence obtained by starting with the supplied value, 
and then by calling the supplied function passing the previous item in the sequence as 
its argument.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REPEAT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "It returns an infinite lazy sequence consisting of the argument value repeated endlessly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-RANGE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "END-P" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
      ((:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 1))
     :DOCUMENTATION
     "SEQ-RANGE returns a lazy sequence of numbers from the start (inclusive, 0 by default) 
to the end (exclusive, nil by default) incremented by the step (1 by default).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-CYCLE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)) :DOCUMENTATION
     "It returns a lazy infinite sequence obtained by successively repeating 
the values in the supplied sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-INTERPOSE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION
     "SEQ-INTERPOSE takes two arguments, a value and a sequence. It returns 
a lazy sequence obtained by inserting the supplied value between the values 
in the sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MEMBER" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an item and return the tail of the sequence beginning with this element; 
otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MEMBER-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for a top-level item for which the predicate returns T and
return the tail of the sequence beginning with this element; otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-MEMBER-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for a top-level item for which the predicate returns NIL and
return the tail of the sequence beginning with this element; otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENUM-REDUCE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Like REDUCE but applied to the enumerators.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REDUCE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "INITIAL-VALUE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-VALUE-P" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)))
     :DOCUMENTATION "Like REDUCE but applied to the generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-POSITION" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an element and return the index within the sequence; 
otherwise, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-POSITION-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an element for which the predicate returns T and
return the index within the sequence; otherwise, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-POSITION-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an element for which the predicate returns NIL and
return the index within the sequence; otherwise, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-FIND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an item and return this element; otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-FIND-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an item for which the predicate returns T and 
return this element; otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-FIND-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Search a sequence for an item for which the predicate returns NIL and 
return this element; otherwise NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-EVERY-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Like EVERY but applied to one generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-SOME-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Like SOME but applied to one generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-NOTANY-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Like NOTANY but applied to one generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-NOTEVERY-1" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T))
     :DOCUMENTATION "Like NOTEVERY but applied to one generic sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-EVERY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like the EVERY function but applied to generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-SOME" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION "Like the SOME function but applied to generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-NOTANY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like the NOTANY function but applied to generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-NOTEVERY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like the NOTEVERY function but applied to generic sequences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-COUNT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Count and return the number of elements in the sequence that satisfy the test.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-COUNT-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Count and return the number of elements in the sequence that satisfy the test.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-COUNT-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Count and return the number of elements in the sequence that satisfy the test.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "SEQ-SOME" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-EVERY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-DROP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-POSITION-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-ELT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-MEMBER-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-MEMBER-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-FIND-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REMOVE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-TAKE-NTH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-FIND-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "ENUM-CDR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REPEATEDLY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-COUNT-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-DROP-WHILE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-SPLIT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "MAKE-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-NOTEVERY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-MEMBER" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-ITERATE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-POSITION" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-COMPARE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-ZIP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-APPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-FOREACH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-SPLIT-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-COUNT-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-POSITION-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-FIND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ->LIST" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-NULL" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-RANGE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "ENUM-CONS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-MAPPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ->VECTOR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-COUNT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-DROP-WHILE-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-EQUAL" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-SPLIT-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-TAKE-WHILE-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "ENUM-APPEND" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-CAR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REMOVE-IF-NOT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REDUCE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-TAKE-WHILE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REMOVE-IF" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "DELAY-SEQ" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-INTERPOSE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-CDR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-LENGTH" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-CONS" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-TAKE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-CYCLE" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-REPEAT" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "ENUM-CAR" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-MAP" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-NOTANY" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)
    (:NAME "SEQ-ENUM" :PACKAGE-NAME "GENERIC-SEQ" :EXTERNALP T)))))
