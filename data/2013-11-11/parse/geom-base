
(:TYPE :SYSTEM :NAME "geom-base" :AUTHOR "John McCarthy" :MAINTAINER NIL
 :VERSION "20130723" :LICENCE
 "Affero Gnu Public License (http://www.gnu.org/licenses/)" :DESCRIPTION
 "The Gendlâ„¢ Wireframe Geometry" :LONG-DESCRIPTION NIL :DEPENDS-ON ("GLISP")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "MATRIX" :FULL-NAME "MATRIX" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIXP" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)) :DOCUMENTATION
     "Test whether the argument is a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUM-ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the number of rows of a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUM-COLS" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the number of rows of a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SQUARE-MATRIX?" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)) :DOCUMENTATION
     "Is the matrix a square matrix?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COLS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
       (:NAME "ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Create a matrix filled with zeros.  If only one parameter is
  specified the matrix will be square.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-IDENTITY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SIZE" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Make an identity matrix of the specified size.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)) :DOCUMENTATION
     "Return a copy of the matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DESTINATION" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "CONTROL-STRING" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL) "~20S"))
     :DOCUMENTATION
     "Print a matrix.  The optional control string indicates how each
  entry should be printed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Transpose a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRICES" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Multiply matrices")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRICES" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Add matrices")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBTRACT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRICES" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Subtract matrices")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INVERT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DESTRUCTIVE" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Find the inverse of a matrix.  By default this operation is
  destructive.  If you want to preserve the original matrix, call this
  function with an argument of NIL to destructive.

  changed default to NIL so it is not destructive -- DJC.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXCHANGE-ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "ROW-I" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "ROW-J" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Exchange row-i and row-j of a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELIMINATE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "COLS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Gaussian elimination with partial pivoting.  ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBSTITUTE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "COLS" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOLVE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DESTRUCTIVE" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "PRINT-SOLN" :PACKAGE-NAME "MATRIX" :EXTERNALP NIL))
     :DOCUMENTATION "Solve a matrix using Gaussian elimination
   Matrix must be N by N+1
   Assume solution is stored as the N+1st column of the matrix"))
   :EXTERNAL-SYMBOLS
   ((:NAME "SQUARE-MATRIX?" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "INVERT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "MATRIXP" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "NUM-COLS" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "MAKE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "NUM-ROWS" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "ADD-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "SOLVE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "TRANSPOSE-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "MAKE-IDENTITY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "COPY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "PRINT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "SUBTRACT-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)
    (:NAME "MULTIPLY-MATRIX" :PACKAGE-NAME "MATRIX" :EXTERNALP T)))))
