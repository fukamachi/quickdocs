
(:TYPE :SYSTEM :NAME "clache" :AUTHOR "Tomohiro Matsuyama" :MAINTAINER NIL
 :VERSION "0.2" :LICENCE "LLGPL" :DESCRIPTION NIL :LONG-DESCRIPTION NIL
 :DEPENDS-ON
 ("ALEXANDRIA" "TRIVIAL-GARBAGE" "BABEL" "IRONCLAD" "CL-FAD" "CL-STORE"
  "CL-ANNOT" "CL-SYNTAX" "CL-SYNTAX-ANNOT")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CLACHE" :FULL-NAME "CLACHE" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "SYMBOL-FQN" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Return a fully qualified name of SYMBOL in string. For
example, (symbol-fqn 'if) will return \"COMMON-LISP:IF\".")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OBJECT-TO-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Convert OBJECT into string by using PRINC-TO-STRING if OBJECT is
not a symbol, or by using SYMBOL-FQN if OBJECT is a symbol.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MD5-HEX-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return a MD5 digest of STRING in hex string.")
    (:TYPE :CLASS :SYMBOL (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An abstract class of stores. All stores must
inherit from this class."
     :SLOT-LIST NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOAD-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION "Try to retrieve a cache indicated by KEY from STORE
and return values of the cache value and a boolean whether the cache
exists in STORE. The cache value should be NIL if such the cache
doesn't exist or has been expired.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STORE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
      (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION "Store a cache VALUE with KEY into STORE. EXPIRE is
a keep time in seconds. If EXPIRE is NIL, the cache will never
expired. This function should return the value that has been
stored.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DELETE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION "Remove a cache indicated by KEY from STORE. If the
cache has been successfully removed, this function should return T,
otherwise should return NIL.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLEAR-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)) :DOCUMENTATION
     "Remove all caches from STORE. Any object can be
returned.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CACHE-KEY-TO-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION "This function converts any type of KEY into
string. This should be an injective function, meaning this should not
lose the information about key.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CACHE-KEY-TO-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CACHE-KEY-TO-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEVER-EXPIRE-P" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)) :DOCUMENTATION
     "Return T if EXPIRE represents caches will never be expired.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "HASH-TABLE-OF" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOAD-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STORE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
      (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DELETE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLEAR-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)) :DOCUMENTATION NIL
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIRECTORY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "DIRECTORY-OF" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CACHE-PATH" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOAD-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STORE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
      (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DELETE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLEAR-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION
     "Retrieve a cache value from STORE indicated by KEY and return
values of the cache value and a boolean whether the cache exists in
STORE. The cache value will be NIL if such the cache doesn't
exist. For example, (getcache \"not-existed-cache\") will return NIL,
NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SETCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Store a cache VALUE into STORE with KEY and EXPIRE. EXPIRE is an
expiration time in seconds. If EXPIRE is NIL, the cache will never be
expired. The return value is VALUE that has been stored.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GETCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
      (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T))
     :DOCUMENTATION
     "Remove a cache from STORE indicated by KEY. If the cache has been
successfully removed, this function returns T, otherwise returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLRCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)) :DOCUMENTATION
     "Remove all caches from STORE. The return value is undefined.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION
     "If a cache indicated by KEY exists, this just returns the cache
value without evaluating BODY. Otherwise, this evaluates BODY and
stores the evaluated value into STORE with KEY and EXPIRE. KEY is a
form that an evaluated value indicates the cache key.

Example:

    (defun f (x)
      (with-cache (x *store*)
        (very-complex-computation x)))")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-INLINE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "KEY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
       ((:NAME "TEST" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQUAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
       (:NAME "WEAKNESS" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Same as WITH-CACHE, except that an inline memory store will be used
as a cache store. TEST is a function to test hash table keys of the
memory store. WEAKNESS specifies the hash table is weak-hash-table or
not.")
    (:TYPE :MACRO :SYMBOL (:NAME "CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "KEYARGS" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
       (:NAME "EXPIRE" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
      (:NAME "FUNCTION-DEFINITION-FORM" :PACKAGE-NAME "CLACHE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Annotation for caching functions with their arguments. This should
be used with CL-ANNOT. KEYARGS is a form or a list of form for making
a cache key.  To make cache keys distinct as to the function, you may
add a keyword or a symbol into KEYARGS. See also WITH-CACHE.

Example:

    @cache ((:f x y z))
    (defun f (x y z)
      ...)
    
    ;; Remove a cache of F
    (remcache '(:f 1 2 3))"))
   :EXTERNAL-SYMBOLS
   ((:NAME "CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "REMCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "DELETE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "FILE-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "CACHE-KEY-TO-STRING" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "LOAD-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "SETCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "CLRCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "CLEAR-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "MEMORY-STORE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "GETCACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "WITH-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "STORE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "WITH-INLINE-CACHE" :PACKAGE-NAME "CLACHE" :EXTERNALP T)
    (:NAME "NEVER-EXPIRE-P" :PACKAGE-NAME "CLACHE" :EXTERNALP T)))))
