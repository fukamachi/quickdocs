
(:TYPE :SYSTEM :NAME "fare-csv" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE "MIT" :DESCRIPTION "Robust CSV parser and printer" :LONG-DESCRIPTION
 "Robust CSV (Comma-separated values) parser and printer,
tries to follow the fine print of de facto standards,
can be configured to choose which standard exactly."
 :DEPENDS-ON NIL :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "FARE-CSV" :FULL-NAME "FARE-CSV" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "+CR+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "String containing a CR (Carriage Return)" :INITIAL-VALUE "\"\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+LF+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "String containing a LF (Linefeed)" :INITIAL-VALUE "\"
\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+CRLF+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "String containing a CRLF line termination" :INITIAL-VALUE "\"
\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CSV-VARIABLES*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "'NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SEPARATOR*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "Separator between CSV fields" :INITIAL-VALUE "#\\,")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*QUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "delimiter of string data; pascal-like quoted as double itself in a string."
     :INITIAL-VALUE "#\\\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNQUOTED-QUOTEQUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "does a pair of quotes represent a quote outside of quotes?
M$, RFC says NIL, csv.3tcl says T"
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LOOSE-QUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "can quotes appear anywhere in a field?" :INITIAL-VALUE
     "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALLOW-BINARY*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "do we accept non-ascii data?" :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*KEEP-META-INFO*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "when parsing, include meta information?" :INITIAL-VALUE
     "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EOL*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :DOCUMENTATION
     "line ending when exporting CSV" :INITIAL-VALUE "FARE-CSV:+CRLF+")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LINE-ENDINGS*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "acceptable line endings when importing CSV" :INITIAL-VALUE
     "(LIST FARE-CSV:+CR+ FARE-CSV:+LF+ FARE-CSV:+CRLF+)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SKIP-WHITESPACE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :DOCUMENTATION "shall we skip unquoted whitespace around separators?"
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-ASCII-TEXT-P" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CREATIVYST-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION
     "bind CSV syntax parameters to the CREATIVYST standard around evaluation of BODY")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-WITH-CREATIVYST-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNK" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION
     "bind CSV syntax parameters to the RFC 4180 standard around evaluation of BODY")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-WITH-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "THUNK" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-STRICT-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION
     "bind CSV syntax parameters to the strict RFC 4180 standard around evaluation of BODY,
forcing CRLF as line ending and disallowing binary data amongst values")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-WITH-STRICT-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNK" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALID-EOL-P" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALIDATE-CSV-PARAMETERS" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCEPT-CR*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :DOCUMENTATION "internal: do we accept cr?" :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCEPT-LF*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :DOCUMENTATION "internal: do we accept lf?" :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCEPT-CRLF*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :DOCUMENTATION "internal: do we accept crlf?" :INITIAL-VALUE "T")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFSUBST" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "ARGLIST" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION "Declare an inline defun.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-SPACE-P" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION "Is character C some kind of white space?
NB: this only handles a tiny subset of whitespace characters,
even if restricted to ASCII. However, it's rather portable,
and is what the creativyst document specifies.
Be careful to not skip a separator, as it could be e.g. a tab!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-P" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-EOF" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-EOL" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-SPACE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-SPACES" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-QUOTE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCEPT-SEPARATOR" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-CSV-LINE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Read one line from STREAM in CSV format, using the current syntax parameters.
  Return a list of strings, one for each field in the line.
  Entries are read as strings;
  it is up to you to interpret the strings as whatever you want.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-CSV-STREAM" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Read lines from STREAM in CSV format, using the current syntax parameters.
  Return a list of list of strings, one entry for each line,
  that contains one entry for each field.
  Entries are read as strings;
  it is up to you to interpret the strings as whatever you want.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-CSV-FILE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Open the file designated by PATHNAME, using the provided keys if any,
  and call READ-CSV-STREAM on it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-NEEDS-QUOTING" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-NEEDS-QUOTING" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-CSV-LINES" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LINES" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Given a list of LINES, each of them a list of fields, and a STREAM,
  format those lines as CSV according to the current syntax parameters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-CSV-LINE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FIELDS" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Format one line of FIELDS to STREAM in CSV format,
  using the current syntax parameters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-CSV-FIELD" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FIELD" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-CSV-STRING-SAFELY" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-QUOTED-STRING" :PACKAGE-NAME "FARE-CSV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "WRITE-CSV-LINES" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "WRITE-CSV-LINE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*KEEP-META-INFO*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*LINE-ENDINGS*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "WITH-STRICT-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP
     T)
    (:NAME "+LF+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*EOL*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "+CRLF+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "WITH-CREATIVYST-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "WITH-RFC4180-CSV-SYNTAX" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*UNQUOTED-QUOTEQUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "READ-CSV-LINE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*SEPARATOR*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "READ-CSV-STREAM" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "+CR+" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "READ-CSV-FILE" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*LOOSE-QUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*ALLOW-BINARY*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*SKIP-WHITESPACE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)
    (:NAME "*QUOTE*" :PACKAGE-NAME "FARE-CSV" :EXTERNALP T)))))
