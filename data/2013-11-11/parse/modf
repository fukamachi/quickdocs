
(:TYPE :SYSTEM :NAME "modf" :AUTHOR "Zachary Smith <zachkostsmith@gmail.com>"
 :MAINTAINER NIL :VERSION NIL :LICENCE "Modified BSD" :DESCRIPTION
 "This library simplifies functional programming by making it easier to make
new data structures with specified changes in place."
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("ALEXANDRIA" "CLOSER-MOP" "ITERATE")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "MODF" :FULL-NAME "MODF" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "MKSTR" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION "MaKe STRing")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MODF-EXPANSIONS*" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :DOCUMENTATION "Holds expansion functions" :INITIAL-VALUE
     "(MAKE-HASH-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MODF-NTH-ARG*" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :DOCUMENTATION "Holds what argument to try to invert next." :INITIAL-VALUE
     "(MAKE-HASH-TABLE)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-EXPANDER" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NTH-ARG" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
       (:NAME "VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
       (:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define a new expander which inverts forms starting with NAME.  Your function
should return an expansion from EXPR to a form that will build a new object that
has NEW-VAL in the place specified by expr.  NTH-ARG marks which argument is
considered the actual data which will be inverted next.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MODF-REWRITES*" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-REWRITE" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define a new rewrite rule.  If a form starting with NAME is encountered, call
the defined function to return a form that we can deal with (i.e. one defined
via DEFINE-MODF-EXPANDER, DEFINE-MODF-FUNCTION, and DEFINE-MODF-METHOD).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODF-NAME" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Make a symbol name that depends on symbol name and package, but is very
unlikely to be chosen by anyone.  This is for avoiding collisions for my
benefit, not the users, as these symbols belong to the MODF package.")
    (:TYPE :MACRO :SYMBOL (:NAME "MODF-FN" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Expand to the defined Modf function.  Basically, (MODF-FN SYM) is the
functional analog of #'(SETF SYM).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-FUNCTION" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NTH-ARG" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define a new modf function.  It inverts NAME forms by modifying the NTH-ARG
term of the arguments of the place form in the MODF macro.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-METHOD" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NTH-ARG" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define a new modf method.  It inverts NAME forms by modifying the NTH-ARG
term of the arguments of the place form in the MODF macro.  This method can
specialize on any of ARGS.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTAINER-ARG-N" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODF-FN-DEFINED?" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPANSIONS-DEFINED?" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ACCESSOR-IN" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "APPLY-EXPRESSION?" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUNCALL-EXPRESSION?" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPANDABLE?" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCESSOR-HEURISTICS*" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :DOCUMENTATION
     "This controls whether we should make educated guesses regarding inverting
structure slot readers.  For strictly correct behavior, set this to nil."
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LATE-INVERT" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is a generic catch as much as you can function.  It attempts to identify
class accessor functions, structure accessor functions, and provides late MODF
defined functions (i.e. you used MODF before using DEFINE-MODF-FUNCTION).

All of this functionality is less than ideal efficiency wise, but working over
efficiency any day, right?  If you want better performance, define all of you
functions ahead of time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LATE-CLASS-READER-INVERTER" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SPECIAL-MODF-FORMS*" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODF-EXPAND" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "EXPR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "ENCLOSED-OBJ-SYM" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "MODF" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MORE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a new object (which may use some of the old object) such that PLACE
evaluates to VALUE.

MORE should have the form...

MORE : NIL
     | (TEMPORARY-BINDING ANOTHER-MODF-PLACE ANOTHER-VALUE . MORE)

Use it to specify a temporary binding for the new object created which will be
used in the subsequence MODF-PLACE NEW-VALUE pairs until the end of the MODF
form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CONTAINER" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "FSETF" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MORE" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "MODF-EVAL" :PACKAGE-NAME "MODF" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-INSTANCE" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:PATHNAME-DIRECTORY" :PACKAGE-NAME "MODF"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:PATHNAME-NAME" :PACKAGE-NAME "MODF" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:PATHNAME-TYPE" :PACKAGE-NAME "MODF" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-NTH" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:NTH" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-NTHCDR" :PACKAGE-NAME "MODF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:NTHCDR" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "NTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:LAST" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:SUBSEQ" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SEQ" :PACKAGE-NAME "MODF" :EXTERNALP NIL))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:AREF" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IDX" :PACKAGE-NAME "MODF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BUILDER:COMMON-LISP:GETHASH" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-VAL" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "MODF" :EXTERNALP NIL)
      (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "MODF-FN" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "DEFINE-MODF-FUNCTION" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "DEFINE-MODF-METHOD" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "MODF" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "FSETF" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "MODF-EVAL" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "DEFINE-MODF-EXPANDER" :PACKAGE-NAME "MODF" :EXTERNALP T)
    (:NAME "DEFINE-MODF-REWRITE" :PACKAGE-NAME "MODF" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-DEF" :FULL-NAME "MODF-DEF" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "DEFSTRUCT" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME-AND-OPTIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SLOT-DESCRIPTIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL))
     :DOCUMENTATION "Define a new structure with Modf expansions for slots.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODF-FOR-STRUCT-SLOTS-EXPANDER" :PACKAGE-NAME "MODF-DEF"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DEFSTRUCT" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T)
      (:NAME "NAME-AND-OPTIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SLOT-DESCRIPTIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-FOR-STRUCT-SLOTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "STRUCTURE-DEFINITION-FORM" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "This macro defines Modf expanders for structure slots when given a structure
definition form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GROUP" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GROUP-BY" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COUNTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCLASS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "DIRECT-SUPERCLASSES" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "DIRECT-SLOTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OPTIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define Modf expansions for class slot accessor and reader methods.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-MODF-READER-DEFINITIONS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEFINED-READERS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODF-FOR-CLASS-SLOTS-EXPANDER" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-MODF-FOR-CLASS-SLOTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CLASS-NAME-OR-DEFINITION" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "This macro defines Modf expanders for a class.  We can do this given the
definition form for the class (much like with DEFINE-MODF-FOR-STRUCT-SLOTS) or
the a name of a finalized class."))
   :EXTERNAL-SYMBOLS
   ((:NAME "DEFINE-MODF-FOR-STRUCT-SLOTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP
     T)
    (:NAME "DEFINE-MODF-FOR-CLASS-SLOTS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T)
    (:NAME "DEFSTRUCT" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T)
    (:NAME "DEFCLASS" :PACKAGE-NAME "MODF-DEF" :EXTERNALP T)))))
