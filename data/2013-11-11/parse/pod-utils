
(:TYPE :SYSTEM :NAME "pod-utils" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "POD-UTILS" :FULL-NAME "POD-UTILS" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINATIONS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SETS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLATTEN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ACCUMULATOR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Return a flat list of the atoms in the input.
   Ex: (flatten '((a (b (c) d))) => (a b c d))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "KINTERN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Apply FORMAT to STRING and ARGS, upcase the resulting string and
 intern it into the KEYWORD package.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINTERN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Apply FORMAT to STRING and ARGS, upcase the resulting string and
 intern it into the current (*PACKAGE*) package.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPAPPEND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPNCONC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAIRS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Return a memo-function of fn.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEBUG-MEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Like memo but prints *hit* on every hit.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN-NAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "DEBUG" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Replace fn-name's global definition with a memoized version.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "FN-NAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Clear the hash table from a memo function.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFUN-MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFMEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FNAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-CLEAR-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-CLEAR-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-ADD-MEMOIZED-FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "FNAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-LIST-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-FORGET-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP
      T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "VARS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VARIABLES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "MAC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MACRO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "MAC2" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MACRO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MEA-HOOKS*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQ)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MACROEXPAND-ALL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Macroexpand FORM recursively until none of its subforms can be further expanded.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOAD-HT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "KEY-VALUE-PAIRS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Load the argument hash table with the argument values
   provided in a flat list of <key> <value>. ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WHEN-BIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       (:NAME "EXPR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Paul Graham ON LISP pg 145. when+let")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IF-BIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       (:NAME "EXPR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
      (:NAME "THEN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "ELSE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WHEN-BIND*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "BINDS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Paul Graham ON LISP pg 145. when+let*")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-GENSYMS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Paul Graham ON LISP pg 145. Used in macros to avoid variable capture.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBSTRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STR1" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "STR2" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the place in str1 where str2 begins or nil if str2 is not in str1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-EXTRA-SPACES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Leave only one space between non-space characters of argument string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BREAK-LINE-AT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BREAK-BAG" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return the argument STRING with linefeeds inserted at some position past POSITION
   where a character in the break-bag is encountered.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-STRING-TO-LIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "C" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MIN-SIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like the perl split, split the string using the character. Return
   a list of substrings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAME2INITIALS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "For 'abc' return 'a'. For 'product_definition_formation' return 'pdf', etc.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "C-NAME2LISP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "C-STRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "aNameLikeThis --> a-name-like-this")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LISP-NAME2C" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "IN-STRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LISP-STRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "STRING-DOWNCASE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IN-STRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))))
     :DOCUMENTATION "a-name-like-this --> aNameLikeThis")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGLE-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     "List contains just one thing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAST1" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MKLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     "Make the argument a list if it isn't already.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LONGER" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Return true if x longer than y -- only for lists.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GROUP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRUNE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     " (prune #'oddp '(1 2 (3 4) (5 6 (7 8 (9 10 (11)) 12) 13))) ==> (2 (4) (6 (8 (10 NIL) 12)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND2" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Like find but returns value from function too.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BEFORE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Returns like member when x before y.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AFTER" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Returns like member when x after y. x must be in y.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUPLICATE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Returns like member when a second copy of obj is in lst.
   > (duplicate 'a '(a b c a d) ==> (A D)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-IF" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "LST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Splits a list into two where fn returns true.
   (split-if #'(lambda (x) (> x 4)) '(1 2 3 4 5 6 7) ==> (1 2 3 4) (5 6 7)")
    (:TYPE :MACRO :SYMBOL (:NAME "MVS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DBIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-TIME-INTERVAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "STRCAT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRINGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOW" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TREE-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STATES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "GOAL-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "SUCCESSORS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "COMBINER" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DO-FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Find a state that satisfies GOAL-P. Start with STATES, 
   and search according to successors and combiners.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SEARCH-PATH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SEARCH-PATH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TREE-SEARCH-PATH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BACKOUT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEPTH-SEARCH-TRACKING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GOAL-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "SUCCESSORS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "DO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Search depth-first, return path when successful.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEPTH-FIRST-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "START" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "GOAL-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "SUCCESSORS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRACKING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "START-STATE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Search new states first until goal is reached.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREPEND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Prepend y to start of x")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BREADTH-FIRST-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "START" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "GOAL-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "SUCCESSORS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Search old states first until goal is reached.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAIL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARG" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     "Useful in tree searches, when you want to navigate the entire tree.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "UPDATE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      ((:NAME "TEST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Argument object may have same key as another in the list. If so, replace it with the argument.
   If not, push it. Only replaces first found. (Keys are assumed to be unique).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-STACK-SIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PPRINT-WITHOUT-STRINGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PPRINT-SYMBOLS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)) :DOCUMENTATION
     "Like perl.")
    (:TYPE :MACRO :SYMBOL (:NAME "SETX" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "VAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "For use at toplevel to avoid annoying stuff from sbcl and cmucl.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POPHASH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "HT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "Remove the value and return it>")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENSURE-GETHASH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "HT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "DEFAULT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Just like GETHASH with the default argument, but DEFAULT is only 
   evaluated when OBJECT is not found and in that case the value of 
   DEFAULT is placed into (GETHASH OBJECT HT).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAP-IN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION "`map-into' the first sequence, evaluating it once.
  (map-in F S) == (map-into S F S)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REUSE-CONS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "X-Y" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return (cons x y), or just x-y if it is equal to (cons x y).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-CONSTANT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RESLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FILLPTR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STOCK-FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARR" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RESLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FILLPTR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1118" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "RESIZE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1119" :PACKAGE-NAME NIL :EXTERNALP NIL))
       2.0)
      (((:NAME "STOCK-FN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1120" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "ARR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1121" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEW-RESLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RESIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) 2.0)
      (:NAME "STOCK-FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESLIST-PUSH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "RESLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESLIST-POP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERSECT-PREDICATES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Paul Graham's. Return a predicate which is the AND of the arguments.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRCDEPTH*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COUNT*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COUNTING*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DBG*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STOP*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTILS-KT-RESET" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "COUNT-IT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TGT-FORM" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "WRAPPER" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
       ((:NAME "IF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "MACRO-FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "WITHOUT-C-DEPENDENCY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP
           NIL)))
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "WITHOUT-C-DEPENDENCY" :PACKAGE-NAME "POD-UTILS" :EXTERNALP
          NIL))
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PROGN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-TRC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "S" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-COUNT-IT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "DEPTH-FIRST-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DUPLICATE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "VARS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "KINTERN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "NAME2INITIALS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "COMBINATIONS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "PPRINT-WITHOUT-STRINGS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SPLIT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MAC" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MKLIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "BREAK-LINE-AT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "INTERSECT-PREDICATES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "REUSE-CONS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SPLIT-IF" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DEFUN-MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "LOAD-HT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SYSTEM-FORGET-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SETX" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DBIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "TREE-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "BEFORE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "GROUP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "WITH-STACK-SIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "UPDATE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "READ-STRING-TO-LIST" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "CHOP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DECODE-TIME-INTERVAL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SYSTEM-LIST-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "PAIRS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "IF-BIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "CLEAR-MEMOIZE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MAC2" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "WHEN-BIND*" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SINTERN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "STRCAT" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "REMOVE-EXTRA-SPACES" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "FAIL" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "FIND2" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SUBSTRING" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MVS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DEBUG-MEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SYSTEM-ADD-MEMOIZED-FN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "BREADTH-FIRST-SEARCH" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SINGLE-P" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "DEFMEMO" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "FLATTEN" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "PRUNE" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "SYSTEM-CLEAR-MEMOIZED-FNS" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "PREPEND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "C-NAME2LISP" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "LISP-NAME2C" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "MAPAPPEND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "WHEN-BIND" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)
    (:NAME "LONGER" :PACKAGE-NAME "POD-UTILS" :EXTERNALP T)))))
