
(:TYPE :SYSTEM :NAME "anaphora" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.9.4"
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "ANAPHORA" :FULL-NAME "ANAPHORA" :DOCUMENTATION
   "ANAPHORA provides a full complement of anaphoric macros. Subsets of the
functionality provided by this package are exported from ANAPHORA-BASIC and
ANAPHORA-SYMBOL."
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "WITH-UNIQUE-NAMES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "BINDINGS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "IGNORE-FIRST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "INTERNAL-SYMBOL-MACROLET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WHATEVER" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SYMBOLIC" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OPERATION" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-ARGS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SYMBOLIC" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OPERATION" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-ARGS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ANAPHORIC" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "ALET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION "Binds the FORM to IT (via LET) in the scope of the BODY.")
    (:TYPE :MACRO :SYMBOL (:NAME "SLET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Binds the FORM to IT (via SYMBOL-MACROLET) in the scope of the BODY. IT can
be set with SETF.")
    (:TYPE :MACRO :SYMBOL (:NAME "AAND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Like AND, except binds the first argument to IT (via LET) for the
scope of the rest of the arguments.")
    (:TYPE :MACRO :SYMBOL (:NAME "SOR" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Like OR, except binds the first argument to IT (via SYMBOL-MACROLET) for
the scope of the rest of the arguments. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL (:NAME "AIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "THEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELSE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like IF, except binds the result of the test to IT (via LET) for
the scope of the then and else expressions.")
    (:TYPE :MACRO :SYMBOL (:NAME "SIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "THEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELSE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like IF, except binds the test form to IT (via SYMBOL-MACROLET) for
the scope of the then and else expressions. IT can be set with SETF")
    (:TYPE :MACRO :SYMBOL (:NAME "ASIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "THEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELSE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like IF, except binds the result of the test to IT (via LET) for
the the scope of the then-expression, and the test form to IT (via
SYMBOL-MACROLET) for the scope of the else-expression. Within scope of
the else-expression, IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "APROG1" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Binds IT to the first form so that it can be used in the rest of the
forms. The whole thing returns IT.")
    (:TYPE :MACRO :SYMBOL (:NAME "AWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like WHEN, except binds the result of the test to IT (via LET) for the scope
of the body.")
    (:TYPE :MACRO :SYMBOL (:NAME "SWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like WHEN, except binds the test form to IT (via SYMBOL-MACROLET) for the
scope of the body. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUNLESS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like UNLESS, except binds the test form to IT (via SYMBOL-MACROLET) for the
scope of the body. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL (:NAME "ACASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CASE, except binds the result of the keyform to IT (via LET) for the
scope of the cases.")
    (:TYPE :MACRO :SYMBOL (:NAME "SCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CASE, except binds the keyform to IT (via SYMBOL-MACROLET) for the
scope of the body. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "AECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like ECASE, except binds the result of the keyform to IT (via LET) for the
scope of the cases.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like ECASE, except binds the keyform to IT (via SYMBOL-MACROLET) for the
scope of the cases. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ACCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CCASE, except binds the result of the keyform to IT (via LET) for the
scope of the cases. Unlike CCASE, the keyform/place doesn't receive new values
possibly stored with STORE-VALUE restart; the new value is received by IT.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SCCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CCASE, except binds the keyform to IT (via SYMBOL-MACROLET) for the
scope of the cases. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ATYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like TYPECASE, except binds the result of the keyform to IT (via LET) for
the scope of the cases.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "STYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like TYPECASE, except binds the keyform to IT (via SYMBOL-MACROLET) for the
scope of the cases. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "AETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like ETYPECASE, except binds the result of the keyform to IT (via LET) for
the scope of the cases.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like ETYPECASE, except binds the keyform to IT (via SYMBOL-MACROLET) for
the scope of the cases. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ACTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CTYPECASE, except binds the result of the keyform to IT (via LET) for
the scope of the cases. Unlike CTYPECASE, new values possible stored by the
STORE-VALUE restart are not received by the keyform/place, but by IT.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SCTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYFORM" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like CTYPECASE, except binds the keyform to IT (via SYMBOL-MACROLET) for
the scope of the cases. IT can be set with SETF.")
    (:TYPE :MACRO :SYMBOL (:NAME "ACOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like COND, except result of each test-form is bound to IT (via LET) for the
scope of the corresponding clause.")
    (:TYPE :MACRO :SYMBOL (:NAME "SCOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "ANAPHORA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like COND, except each test-form is bound to IT (via SYMBOL-MACROLET) for the
scope of the corresponsing clause. IT can be set with SETF."))
   :EXTERNAL-SYMBOLS
   ((:NAME "STYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ATYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SUNLESS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ALET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "IT" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ASIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SLET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "APROG1" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SOR" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AAND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-BASIC" :FULL-NAME "ANAPHORA-BASIC" :DOCUMENTATION
   "ANAPHORA-BASIC provides all normal anaphoric constructs, which bind
primary values to IT."
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "ACTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AAND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ATYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "APROG1" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "AETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ALET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "IT" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ACASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-SYMBOL" :FULL-NAME "ANAPHORA-SYMBOL" :DOCUMENTATION
   "ANAPHORA-SYMBOL provides ``symbolic anaphoric macros'', which bind forms
to IT via SYMBOL-MACROLET. 

Examples:

  (sor (gethash key table) (setf it default))

  (asif (gethash key table)
        (foo it)            ; IT is a value bound by LET here
        (setf it default))  ; IT is the GETHASH form bound by SYMBOL-MACROLET here
"
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "SCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "ASIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCOND" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SOR" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SWHEN" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SUNLESS" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCCASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SCTYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SIF" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "IT" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SETYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "STYPECASE" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)
    (:NAME "SLET" :PACKAGE-NAME "ANAPHORA" :EXTERNALP T)))))
