
(:TYPE :SYSTEM :NAME "parse-float" :AUTHOR "Sumant Oemrawsingh" :MAINTAINER NIL
 :VERSION NIL :LICENCE "Public Domain" :DESCRIPTION
 "Parse floating point values in strings." :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ALEXANDRIA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "PARSE-FLOAT" :FULL-NAME "PARSE-FLOAT" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*WHITESPACE-CHARACTERS*" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP
      NIL)
     :DOCUMENTATION "List of whitespace characters" :INITIAL-VALUE
     "'(#\\  #\\Tab #\\Return #\\Newline #\\Newline #\\Page)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGN-CHAR-P" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Predicate for testing if CHARACTER is a sign character (i.e. #+ or #-).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WHITESPACE-CHAR-P" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Predicate for testing if CHARACTER is a whitespace character.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-WHITESPACES" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FROM-END" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
      ((:NAME "START" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL) 0)
      (:NAME "END" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL))
     :DOCUMENTATION
     "For the substring in STRING delimited by START and END, skip all
  the whitespace at the beginning and return the index of the first
  non-whitespace character, or END if no non-whitespace characters
  were found. If FROM-END is T, then the search is reversed, skipping
  all the whitespace at the end and returning the index of the last
  whitespace character from END, or START if no non-whitespace
  characters were found.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-INTEGER-ONLY" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RADIX" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL) 10)
      ((:NAME "ALLOW-SIGN" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Parse an integer from a string, without skipping whitespaces.
Returns three values: the integer, the position in the string that
ended the parsing, and a boolean which is T if the parsing ended due
to a whitespace or end of the string, and NIL otherwise.  If
allow-sign is NIL (T by default), also signs are not allowed in the
string (i.e. cannot start with #+ or #-).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-FLOAT" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RADIX" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL) 10)
      ((:NAME "JUNK-ALLOWED" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "DECIMAL-CHARACTER" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       #\.)
      ((:NAME "EXPONENT-CHARACTER" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP NIL)
       #\e)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*READ-DEFAULT-FLOAT-FORMAT*" :PACKAGE-NAME "COMMON-LISP"
        :EXTERNALP T)))
     :DOCUMENTATION
     "Similar to PARSE-INTEGER, but parses a floating point value and
  returns the value as the specified TYPE (by default
  *READ-DEFAULT-FLOAT-FORMAT*). The DECIMAL-CHARACTER (by default #.)
  specifies the separator between the integer and decimal parts, and
  the EXPONENT-CHARACTER (by default #e, case insensitive) specifies
  the character before the exponent. Note that the exponent is only
  parsed if RADIX is 10."))
   :EXTERNAL-SYMBOLS
   ((:NAME "PARSE-FLOAT" :PACKAGE-NAME "PARSE-FLOAT" :EXTERNALP T)))))
