
(:TYPE :SYSTEM :NAME "clack-handler-hunchentoot" :AUTHOR "Eitarow Fukamachi"
 :MAINTAINER NIL :VERSION "12.3" :LICENCE "LLGPL" :DESCRIPTION
 "Clack handler for Hunchentoot." :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("CLACK" "CL-SYNTAX" "CL-SYNTAX-ANNOT" "HUNCHENTOOT" "ANAPHORA"
  "SPLIT-SEQUENCE")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CLACK.HANDLER.HUNCHENTOOT" :FULL-NAME
   "CLACK.HANDLER.HUNCHENTOOT" :DOCUMENTATION "# 
Clack.Handler.Hunchentoot - Clack handler for Hunchentoot.


## SYNOPSIS

    (defpackage clack-sample
      (:use :cl
            :clack.handler.hunchentoot))
    (in-package :clack-sample)
    
    ;; Start Server
    (run (lambda (env)
           '(200 nil (\"ok\")))
         :port 5000)

## DESCRIPTION

Clack.Handler.Hunchentoot is a Clack handler for the Lisp web server Hunchentoot. This package exports `run' and `stop'.

## AUTHOR

Eitarow Fukamachi (e.arrows@gmail.com)

"
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "INITIALIZE" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "APP" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEBUG" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PORT" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
       5000))
     :DOCUMENTATION "Start Hunchentoot server.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STOP" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ACCEPTOR" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "Stop Hunchentoot server.
If no acceptor is given, try to stop `*acceptor*' by default.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HANDLE-RESPONSE" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RES" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert Response from Clack application into a string
before passing to Hunchentoot.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COOKIE->PLIST" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COOKIE" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP
       NIL))
     :DOCUMENTATION "Convert Hunchentoot's cookie class into just a plist.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REQUEST->PLIST" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REQ" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert Request from server into a plist
before passing to Clack application.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DEBUGGABLE-ACCEPTOR>" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ACCEPTOR" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "An acceptor that handles errors by invoking the
  debugger."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROCESS-CONNECTION" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "*ACCEPTOR*" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
       (:NAME "<DEBUGGABLE-ACCEPTOR>" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
        :EXTERNALP NIL))
      ((:NAME "SOCKET" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPTOR-REQUEST-DISPATCHER" :PACKAGE-NAME
      "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "*ACCEPTOR*" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
       (:NAME "<DEBUGGABLE-ACCEPTOR>" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPTOR-DISPATCH-REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "THIS" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
       (:NAME "<DEBUGGABLE-ACCEPTOR>" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
        :EXTERNALP NIL))
      (:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION
     "Hunchentoot request dispatcher for Clack. Most of this is the same as
list-request-dispatcher, the default one in Hunchentoot, except for converting
Request instances into a plist before passing to Clack application.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPTOR-STATUS-MESSAGE" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "THIS" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
       (:NAME "<DEBUGGABLE-ACCEPTOR>" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
        :EXTERNALP NIL))
      (:NAME "HTTP-STATUS-CODE" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT"
       :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Disable generating error HTML."))
   :EXTERNAL-SYMBOLS
   ((:NAME "STOP" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP T)
    (:NAME "RUN" :PACKAGE-NAME "CLACK.HANDLER.HUNCHENTOOT" :EXTERNALP T)))))
