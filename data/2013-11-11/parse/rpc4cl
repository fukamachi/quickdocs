
(:TYPE :SYSTEM :NAME "rpc4cl" :AUTHOR
 "Peter Stiernstr√∂m <peter@stiernstrom.se>" :MAINTAINER NIL :VERSION "0.3.2"
 :LICENCE "BSD" :DESCRIPTION
 "A Common Lisp implementation of XML-RPC using best of breed libraries"
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("DRAKMA" "CXML" "CL-PPCRE" "PARSE-NUMBER" "RFC3339-TIMESTAMP" "BABEL"
  "TRIVIAL-TIMEOUT")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "RPC4CL" :FULL-NAME "RPC4CL" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEBUG*" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :DOCUMENTATION
     "Setting this variable to t will result in debug information emitted
  on *standard-output* while calling xml-rpc-call"
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*XML-RPC-INTERFACES*" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EMPTY-ARRAY*" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :DOCUMENTATION "Unique value used to represent an empty array"
     :INITIAL-VALUE "(GENSYM \"empty-array\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-ELEMENT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENTS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-ELEMENT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSERT-METHOD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "METHODNAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Make sure that a method exists by looking it up its name")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-XML-RPC-METHOD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Find a method in *current-api* or :system")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLIST-KEYS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLIST" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the keys of a plist")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLIST-VALUES" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLIST" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the values of a plist")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLIST-P" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "POSSIBLE-PLIST" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Try to determine if possible-plist is a valid plist by making sure
the list contains even pairs and that all keys are keywords.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTF8-LENGTH" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Determine content-length for an UTF-8 string using babel for
portability.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "XML-RPC-METHOD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-XML-RPC-METHOD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "FUNCTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "DOCUMENTATION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM2" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-RPC-EXCHANGE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "URI" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "XML" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "USERNAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "PASSWORD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTENT-LENGTH" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
       ((:NAME "UTF8-LENGTH" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
        (:NAME "XML" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))))
     :DOCUMENTATION
     "Use drakma to perform an HTTP POST request with the supplied xml in
the body and optionally with basic auth if username and password are
non-nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BASE64-P" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "We expect base64 encoded content to be denoted as a two element
lisp with the first element being the keyword :base64 and the second
being the base64 encoded string contents.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-RPC-METHOD-EQUALP" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Method are equal if their functions match")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DE-CAMEL-CRAZE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Convert camelCase string to what we would expect for lisp symbol
name suitable for find-symbol. camelCase becomes CAMEL-CASE. This is
the reverse of camel-crazing something")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CAMEL-CRAZE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Convet a string containing dashes to its camelCased representation.
CAMEL-CASE becomes camelCase.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CAMEL-CRAZE-SYMBOL" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Do camel-crazing on a symbol returning a string")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DE-CAMEL-CRAZE-KEYWORD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Decraze a string returning a keyword symbol")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-VALUE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION
     "Convert lisp values to the closest XML-RPC supported type. For
complex data types we call out to their respective encoding routines.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-STRUCT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLIST" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION
     "Encode a struct (being a plist) and convert the plist keys to their
camelcrazed representation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-ARRAY" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Encode an XML-RPC array from a list if you want to encode an actual
array/vector you should coerce it to list first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-DATE-TIME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIMESTAMP" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "I haven't read up on iso8601 and what it entails but this should at
least be one valid format for encoding it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-STRING" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Escape all & and < characters in a string with their respective
HTML entities.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Encode all arguments as a XML-RPC <params> tag")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-METHOD-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "METHOD-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a complete XML document representing a method call to
method-name with any number of params")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-METHOD-RESPONSE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Encode the method response suitable for decoding by an XML-RPC
client. In case an xml-rpc-fault is raised we encode it and return
it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-METHOD-FAULT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "E" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "A XML-RPC fault is a struct with a faultCode and a faultString
member inside a <fault> tag.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-METHOD-CALL-RESPONSE" :PACKAGE-NAME "RPC4CL" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DOCUMENT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Decode a method call response and throw a xml-rpc-fault error if
there is a fault in the response xml otherwise return the decoded
params as multiple values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DOCUMENT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Decode all the params one by one and return as multiple values")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-VALUE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :DOCUMENTATION
     "Decode the value by looking at the type node name")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-ARRAY" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ARRAY-DOM" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Decode an array to a list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-STRUCT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRUCT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Decode a struct to a plist")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-STRING" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Restore any escaped string values")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-API" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "API-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Bind *current-api* to api-name for future reference.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "API-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      ((:NAME "CALL-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Usage: (define-rpc-call :my-api (plus :int a :int b) (+ a b))

Defines a function, call-name which when called verifies its
parameters and number of parameters and throws appropriate xml-rpc
faults before executing it's body.

For 'sloppy' code the :any type may be used but then you better make
sure yourself that you've got the expected type.
")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-RPC-CALL-HELP" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "API-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      ((:NAME "CALL-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Define documentation that will be returned through system.methodHelp")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HANDLE-RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TIMEOUT" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Handle an incoming xml-rpc call by looking up the methodName and
then calling the function with the multiple values in the decoded
<params></params>. Then encode the result to its string representation
and return it.

Optionally throw an xml-rpc-fault with code 0 if timeout was reached
before the end of the call.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "URI" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "USERNAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "PASSWORD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "METHOD-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Call method-name with params. The encoded call is sent to uri and
the decoded response parameters are returned as multiple values or in
the case of a fault a xml-rpc-fault condition is raised. To make this
function more ergonomic you should propbably wrap it up in your own
which specifies uri, username and password as needed for you.
")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "A stack for multiple calls using system.multicall"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "USERNAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "USERNAME-OF" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PASSWORD" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "PASSWORD-OF" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "URI" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "URI-OF" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CALLS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "CALLS-OF" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
       (:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T))
      (:NAME "METHOD-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION "Add a call to the multicall stack")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PERFORM-CALLS" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
       (:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)))
     :DOCUMENTATION
     "Perform all calls in the multicall stack in the order they were added")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMPTY-ARRAY" :PACKAGE-NAME "RPC4CL" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Return the special *empty-array* value")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM.GET-CAPABILITIES" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SUCH-PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM.METHOD-SIGNATURE" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SUCH-PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM.LIST-METHODS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SUCH-PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM.METHOD-HELP" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "METHOD-NAME" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SUCH-PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM.MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CALLS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SUCH-PARAMETERS" :PACKAGE-NAME "RPC4CL" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "PERFORM-CALLS" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "ADD-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "*DEBUG*" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "DEFINE-RPC-CALL-HELP" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "XML-RPC-FAULT" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "HANDLE-RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "MULTICALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "XML-RPC-PARSE-ERROR" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "DEFINE-RPC-CALL" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "WITH-API" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)
    (:NAME "EMPTY-ARRAY" :PACKAGE-NAME "RPC4CL" :EXTERNALP T)))))
