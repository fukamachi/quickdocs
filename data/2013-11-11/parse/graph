
(:TYPE :SYSTEM :NAME "graph" :AUTHOR
 ("Eric Schulte <schulte.eric@gmail.com>" "Thomas Dye") :MAINTAINER NIL
 :VERSION "0.0.0" :LICENCE "GPL V3" :DESCRIPTION
 "simple library for building and manipulating graphs" :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("ALEXANDRIA" "METABANG-BIND" "CURRY-COMPOSE-READER-MACROS")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "GRAPH" :FULL-NAME "GRAPH" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "EDGE-EQUALP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EDGE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SXHASH-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIR-EDGE-EQUALP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EDGE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EDGE-HASH-TABLE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DIEDGE-HASH-TABLE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A graph consisting of `nodes' connected by `edges'.
Nodes must be numbers symbols or keywords.  Edges may be assigned
arbitrary values, although some functions assume numeric values (e.g.,
`merge-nodes', `merge-edges', `max-flow' and `min-cut')."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NODE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "NODE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EDGE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EDGE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EDGE-EQ" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EDGE-EQ" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "A `graph' with directed edges." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EDGE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EDGE-H" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EDGE-EQ" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EDGE-EQ" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-HASH" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "HASH" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "COMB" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return a copy of HASH.
Optional argument TEST specifies a new equality test to use for the
copy.  Second optional argument COMB specifies a function to use to
combine the values of elements of HASH which collide in the copy due
to a new equality test specified with TEST.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-HASH-EQUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "HASH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "HASH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Test node hashes HASH1 and HASH2 for equality.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EDGE-HASH-EQUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "HASH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "HASH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Test edge hashes HASH1 and HASH2 for equality.")
    (:TYPE :GENERIC :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return a copy of GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIGRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Copy GRAPH into a `digraph' and return.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIGRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Copy DIGRAPH into a `graph' and return.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION
     "Populate the nodes and edges of GRAPH based on keyword arguments.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPH-EQUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Compare GRAPH1 and GRAPH2 for equality.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPH-EQUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      ((:NAME "GRAPH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TO-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-FN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE-FN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Serialize GRAPH as a plist.
Keyword arguments NODE-FN and EDGE-FN will be called on a node or edge
and should return a plist of data to associate with the given node or
edge in the results.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TO-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-FN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE-FN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FROM-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Populate GRAPH with the contents of PLIST.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FROM-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TO-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return the value matrix of GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TO-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FROM-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Populate GRAPH from the value matrix MATRIX.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FROM-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return a list of the edges in GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-578" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Set the edges in GRAPH to NEW.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return an alist of edges of GRAPH with their values.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ALIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Set the edges of graph to edges and values in NEW.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return a list of the nodes in GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-731" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Set the nodes in GRAPH to NEW.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return an alist of nodes of GRAPH with their values.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ALIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HAS-NODE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return `true' if GRAPH has node NODE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HAS-NODE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HAS-EDGE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return `true' if GRAPH has edge EDGE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HAS-EDGE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SUBGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return the subgraph of GRAPH restricted to NODES.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Add NODE to GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Add EDGE to GRAPH with optional VALUE. The nodes of
  EDGE are also added to GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the value of NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "DEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the degree of NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "DEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "The number of edges directed to NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OUTDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "The number of edges directed from NODE in DIGRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OUTDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TRANSMITTERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if node is a transmitter, i.e., has
  indegree of 0 and positive outdegree.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSMITTERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RECEIVERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if node is a receiver, i.e., has
  outdegree of 0 and positive indegree.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RECEIVERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ISOLATEP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if node is an isolate, i.e., both
  indegree and outdegree are 0.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ISOLATEP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CARRIERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if node is a carrier, i.e.,
  both indegree and outdegree are 1.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CARRIERP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ORDINARYP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if node is ordinary, i.e., is not a
  transmitter, receiver, isolate, or carrier.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ORDINARYP" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TRANSMITTERS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return a list of the transmitters in digraph.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSMITTERS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RECEIVERS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return a list of the receivers in digraph.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RECEIVERS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ISOLATES" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return a list of the isolated node in digraph.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ISOLATES" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ORDINARIES" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return a list of the ordinary nodes in digraph.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ORDINARIES" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Set the edges of NODE in GRAPH to NEW.
Delete and return the old edges of NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DELETE-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Delete NODE from GRAPH.
Delete and return the old edges of NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DELETE-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EDGE-VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the value of EDGE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGE-VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGE-VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Set the value of EDGE in GRAPH to NEW.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGE-VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DELETE-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Delete EDGE from GRAPH.
Return the old value of EDGE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DELETE-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REVERSE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return a copy of GRAPH with all edges reversed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REVERSE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MERGE-NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "NODE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Combine NODE1 and NODE2 in GRAPH into the node NEW.
All edges of NODE1 and NODE2 in GRAPH will be combined into a new node
holding VALUE.  Edges between only NODE1 and NODE2 will be removed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MERGE-NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "NODE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NEW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
       (:NAME "NODE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MERGE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Combine EDGE1 and EDGE2 in GRAPH into a new EDGE.
Optionally provide a value for the new edge, the values of EDGE1 and
EDGE2 will be combined.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MERGE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "EDGE2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EDGE-NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return all edges which share a node with EDGE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGE-NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return all nodes which share an edge with NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PRECEDENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return all nodes preceding NODE in an edge of DIGRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRECEDENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECTED-COMPONENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return the connected component of NODE in GRAPH.
The TYPE keyword argument only has an effect for directed graphs in
which it may be set to one of the following with :STRONG being the
default value.

:STRONG ..... connections only traverse edges along the direction of
              the edge

:WEAK ....... connections may traverse edges in any direction
              regardless of the edge direction

:UNILATERAL . two nodes a and b connected iff a is strongly connected
              to b or b is strongly connected to a")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONNECTED-COMPONENT-" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "NEIGHBOR-FN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTED-COMPONENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTED-COMPONENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECTEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return true if the graph is connected.
TYPE keyword argument is passed to `connected-components'.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return a list of the connected components of GRAPH.
Keyword TYPE is passed to `connected-component' and only has effect
for directed graphs. Returns strongly connected components of a
directed graph by default.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TOPOLOGICAL-SORT" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Returns a topologically ordered list of the nodes in DIGRAPH, such
   that, for each edge in DIGRAPH, the start of the edge appears in the
   list before the end of the edge.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOPOLOGICAL-SORT" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "LEVELS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ALIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Assign a positive integer to each node in DIGRAPH,
called its level, where, for each directed edge (a b) the
corresponding integers satisfy a < b. Returns either a hash table
where the nodes are keys and the levels are values, or an association
list of nodes and their levels, along with the number of levels in
DIGRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "LEVELS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ALIST" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STRONGLY-CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION
     "Return the nodes of GRAPH partitioned into strongly connected components.
Uses Tarjan's algorithm.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRONGLY-CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BASIC-CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return all basic cycles in the GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BASIC-CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return all cycles of GRAPH (both basic and compound).")
    (:TYPE :METHOD :SYMBOL (:NAME "CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MINIMUM-SPANNING-TREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return a minimum spanning tree of GRAPH.
Prim's algorithm is used.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MINIMUM-SPANNING-TREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECTED-GROUPS-OF-SIZE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "SIZE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return all connected node groups of SIZE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTED-GROUPS-OF-SIZE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "SIZE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Return true if NODES are fully connected in GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "CLOSEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLUSTERING-COEFFICIENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION "Fraction of connected triples which are closed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLUSTERING-COEFFICIENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLIQUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return the maximal cliques of GRAPH.
The Bron-Kerbosh algorithm is used.")
    (:TYPE :METHOD :SYMBOL (:NAME "CLIQUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLIQUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SHORTEST-PATH" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "A" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the shortest path in GRAPH from A to B.
GRAPH must be a directed graph.  Dijkstra's algorithm is used.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORTEST-PATH" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "A" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEEN" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESIDUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "FLOW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the residual graph of GRAPH with FLOW.
Each edge in the residual has a value equal to the original capacity
minus the current flow, or equal to the negative of the current flow.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESIDUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "FLOW" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-PATHS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "PATH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "PATH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the combination of paths PATH1 and PATH2 through GRAPH.
Each element of PATH has the form (cons edge value).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-PATHS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "PATH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "PATH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-PATHS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "PATH1" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "PATH2" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the combination of paths PATH1 and PATH2 through DIGRAPH.
Each element of path has the form (cons edge value).")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAX-FLOW" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "FROM" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "TO" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return the maximum flow from FROM and TO in GRAPH.
GRAPHS must be a network with numeric values of all edges.
The Ford-Fulkerson algorithm is used.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAX-FLOW" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "FROM" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "TO" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WEIGH-CUT" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "CUT" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MIN-CUT" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return both the global min-cut of GRAPH and the weight of the cut.")
    (:TYPE :METHOD :SYMBOL (:NAME "MIN-CUT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PREFERENTIAL-ATTACHMENT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGE-VALS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Add NODES to GRAPH using preferential attachment, return the new edges.
Optionally assign edge values from those listed in EDGE-VALS.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREFERENTIAL-ATTACHMENT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EDGE-VALS" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ERDOS-RENYI-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "M" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Populate GRAPH with M edges in an Erdős–Rényi random graph model.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ERDOS-RENYI-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "M" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERDOS-RENYI-GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return an Erdős–Rényi graph with N nodes and M edges.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERDOS-RENYI-DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Return an Erdős–Rényi digraph with N nodes and M edges.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EDGAR-GILBERT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "P" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Populate GRAPH including every possible edge with probability P.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGAR-GILBERT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "P" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EDGAR-GILBERT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "P" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EDGAR-GILBERT-GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "P" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EDGAR-GILBERT-DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "P" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FARNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sum of the distance from NODE to every other node in connected GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "FARNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSENESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION "Inverse of the `farness' for NODE in GRAPH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSENESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BETWEENNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Fraction of shortest paths through GRAPH which pass through NODE.
Fraction of node pairs (s,t) s.t. s and t ≠ NODE and the shortest path
between s and t in GRAPH passes through NODE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BETWEENNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "KATZ-CENTRALITY" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTENUATION" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Combined measure of number and nearness of nodes to NODE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "KATZ-CENTRALITY" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T))
      (:NAME "NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ATTENUATION" :PACKAGE-NAME "GRAPH" :EXTERNALP NIL) 0.8))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DEGENERACY" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return the degeneracy and k-cores of GRAPH.
Also return the node ordering with optimal coloring number as an
alist.  The `car' of each element of the alist identifies k-cores and
the `cdr' holds the nodes in the ordering.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEGENERACY" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "K-CORES" :PACKAGE-NAME "GRAPH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)) :DOCUMENTATION
     "Return the k-cores of GRAPH.")
    (:TYPE :METHOD :SYMBOL (:NAME "K-CORES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
       (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "CLIQUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CONNECTEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CONNECTED-COMPONENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "BETWEENNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "HAS-EDGE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "TO-ADJACENCY-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGAR-GILBERT-DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "MERGE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ADD-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DELETE-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "LEVELS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "NODE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "GRAPH-EQUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "FROM-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "REVERSE-EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CONNECTED-GROUPS-OF-SIZE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "HAS-NODE-P" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ADD-NODE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "MINIMUM-SPANNING-TREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "PREFERENTIAL-ATTACHMENT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP
     T)
    (:NAME "EDGAR-GILBERT-GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "PRECEDENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "INDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "GRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ERDOS-RENYI-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "BASIC-CYCLES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "SUBGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "FARNESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DELETE-EDGE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "STRONGLY-CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "MAX-FLOW" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "COPY" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ERDOS-RENYI-GRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ADD-PATHS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGE-NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "MERGE-NODES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CLUSTERING-COEFFICIENT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "K-CORES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CLOSEDP" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CLOSENESS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "ERDOS-RENYI-DIGRAPH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "MIN-CUT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DEGENERACY" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DIGRAPH-OF" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "TO-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "RESIDUAL" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGAR-GILBERT-POPULATE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "TOPOLOGICAL-SORT" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "TO-VALUE-MATRIX" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "OUTDEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "DEGREE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "KATZ-CENTRALITY" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "NODES-W-VALUES" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "FROM-PLIST" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "CONNECTED-COMPONENTS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "EDGE-VALUE" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "SHORTEST-PATH" :PACKAGE-NAME "GRAPH" :EXTERNALP T)
    (:NAME "NEIGHBORS" :PACKAGE-NAME "GRAPH" :EXTERNALP T)))))
