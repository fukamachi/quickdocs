
(:TYPE :SYSTEM :NAME "cl-parallel" :AUTHOR "Tom Hulihan" :MAINTAINER NIL
 :VERSION "0.1.1" :LICENCE "MIT" :DESCRIPTION
 "A fairly simple parallelism library for Common Lisp" :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("BORDEAUX-THREADS") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "PARALLEL" :FULL-NAME "PARALLEL" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "FUTURE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "This macro essentially creates a new future type -- a computation that
  happens seperately from the rest of the program, and may or may not be
  finished")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUTURE-P" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)) :DOCUMENTATION
     "Test whether or not a value is a future.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUTURE-FINISHED-P" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION "Return true iff the argument is a live thread")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REALIZE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)) :DOCUMENTATION
     "Force a future to be evaluated, or return nil if the value is not a future.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REALIZE-IF-FINISHED" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "If the future is finished, return the value; if the future is still running,
   return the future; if the value is not a future, return it.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-THREAD-QUEUE" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      ((:NAME "IN" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
       (:NAME "OUT" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0)
      (:NAME "DONE" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "DOWN" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "UP" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SEQUENTIAL-THREAD-QUEUE" :PACKAGE-NAME "PARALLEL" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      ((:NAME "TO-DO" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
       (:NAME "RUNNING" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      (:NAME "DONE" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "DOWN" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "UP" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARTITION-IF" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a predicate and a list, will return a list with the first element
   being all of the elements that satisfy the predicate, and the second
   element being all of the elements that do not satisfy the predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-MAP" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "This function computes a function upon a list in parallel.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-SOME" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Given a predicate and a list, return true if at least one element in the
   list satifies the predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-EVERY" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Given a predicate and a list, will determine if every element of the list
   satisfies that predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-FIND-IF" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "KEY" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEY-P" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
      (:NAME "FROM-END" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a predicate and a list, will return the first element in the list that
   satisfies that predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-FIND" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      (:NAME "FROM-END" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given an item and a list, will return that item if it is found, nil
   otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-MAP-REDUCE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MAP-FN" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "REDUCE-FN" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a mapping function, reducing function, and list, will map the values
   accross the list in parallel, then reduce them in the order that the
   computations finish.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAR-MAP-CHUNKED" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "XS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CHUNK-SIZE" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 1)
      ((:NAME "MAX-THREADS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 4)
      ((:NAME "SLEEP-TIME" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Break a list up into `size` chunks, and process those chunks in parallel.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PAR-CALLS" :PACKAGE-NAME "PARALLEL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CALLS" :PACKAGE-NAME "PARALLEL" :EXTERNALP NIL))
     :DOCUMENTATION "Make multiple calls in parallel."))
   :EXTERNAL-SYMBOLS
   ((:NAME "FUTURE-P" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "REALIZE-IF-FINISHED" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "REALIZE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "FUTURE-FINISHED-P" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "FUTURE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-EVERY" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-CALLS" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-FIND-IF" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-MAP-REDUCE" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-FIND" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-MAP-CHUNKED" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-SOME" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)
    (:NAME "PAR-MAP" :PACKAGE-NAME "PARALLEL" :EXTERNALP T)))))
