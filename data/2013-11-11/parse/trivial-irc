
(:TYPE :SYSTEM :NAME "trivial-irc" :AUTHOR
 "Thomas Stenhaug <thomas.stenhaug@gmail.com>" :MAINTAINER
 "Thomas Stenhaug <thomas.stenhaug@gmail.com>" :VERSION "0.0.4" :LICENCE NIL
 :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("CL-PPCRE" "SPLIT-SEQUENCE" "USOCKET") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "TRIVIAL-IRC" :FULL-NAME "TRIVIAL-IRC" :DOCUMENTATION
   "Trivial IRC client library.

See `examples/echobot/' in the distribution directory for a simple
example of how to use it.

Currently, the exposed API is a very thin abstraction of the IRC
protocol, and you probably need the IRC RFC to make use of it.

The current version was slapped together in a few hours, to fill a
specific need I had.  It's not certain that it will evolve with much,
but I'm open to suggestions and requests.

If you have a better fit for trivial-irc and want to claim the
name, just let me know and I'll retire this."
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*REPLY-NUMBER->REPLY-NAME*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LET ((HASH-TABLE (MAKE-HASH-TABLE)))
  (MAPCAR
   #'(LAMBDA (TRIVIAL-IRC::REPLY)
       (DESTRUCTURING-BIND
           (TRIVIAL-IRC::REPLY-NUMBER TRIVIAL-IRC::REPLY-NAME)
           TRIVIAL-IRC::REPLY
         (SETF (GETHASH TRIVIAL-IRC::REPLY-NUMBER HASH-TABLE)
                 TRIVIAL-IRC::REPLY-NAME)))
   '((1 :RPL_WELCOME) (2 :RPL_YOURHOST) (3 :RPL_CREATED) (4 :RPL_MYINFO)
     (5 :RPL_ISUPPORT) (10 :RPL_BOUNCE) (15 :RPL_MAP) (17 :RPL_MAPEND)
     (18 :RPL_MAPSTART) (20 :RPL_HELLO) (42 :RPL_YOURID) (43 :RPL_SAVENICK)
     (200 :RPL_TRACELINK) (201 :RPL_TRACECONNECTING) (202 :RPL_TRACEHANDSHAKE)
     (203 :RPL_TRACEUNKNOWN) (204 :RPL_TRACEOPERATOR) (205 :RPL_TRACEUSER)
     (206 :RPL_TRACESERVER) (207 :RPL_TRACESERVICE) (208 :RPL_TRACENEWTYPE)
     (209 :RPL_TRACECLASS) (210 :RPL_TRACERECONNECT) (211 :RPL_STATSLINKINFO)
     (212 :RPL_STATSCOMMANDS) (213 :RPL_STATSCLINE) (214 :RPL_STATSNLINE)
     (215 :RPL_STATSILINE) (216 :RPL_STATSKLINE) (217 :RPL_STATSQLINE)
     (218 :RPL_STATSYLINE) (219 :RPL_ENDOFSTATS) (221 :RPL_UMODEIS)
     (225 :RPL_STATSDLINE) (227 :RPL_OPTION) (228 :RPL_ENDOPTIONS)
     (231 :RPL_SERVICEINFO) (232 :RPL_ENDOFSERVICES) (233 :RPL_SERVICE)
     (234 :RPL_SERVLIST) (235 :RPL_SERVLISTEND) (240 :RPL_STATSVLINE)
     (241 :RPL_STATSLLINE) (242 :RPL_STATSUPTIME) (243 :RPL_STATSONLINE)
     (244 :RPL_STATSHLINE) (245 :RPL_STATSSLINE) (246 :RPL_STATSPING)
     (247 :RPL_STATSBLINE) (248 :RPL_STATSULINE) (249 :RPL_STATSDEBUG)
     (250 :RPL_STATSDLINE) (251 :RPL_LUSERCLIENT) (252 :RPL_LUSEROP)
     (253 :RPL_LUSERUNKNOWN) (254 :RPL_LUSERCHANNELS) (255 :RPL_LUSERME)
     (256 :RPL_ADMINME) (257 :RPL_ADMINLOC1) (258 :RPL_ADMINLOC2)
     (259 :RPL_ADMINEMAIL) (261 :RPL_TRACELOG) (262 :RPL_TRACEEND)
     (263 :RPL_TRYAGAIN) (265 :RPL_LOCALUSERS) (266 :RPL_GLOBALUSERS)
     (268 :RPL_MODE) (269 :RPL_ENDMODE) (271 :RPL_SITELIST)
     (272 :RPL_ENDSITELIST) (290 :RPL_CLIENTCAPAB) (292 :RPL_NOSERVICEHOST)
     (300 :RPL_NONE) (301 :RPL_AWAY) (302 :RPL_USERHOST) (303 :RPL_ISON)
     (304 :RPL_AWAY) (305 :RPL_UNAWAY) (306 :RPL_NOAWAY) (311 :RPL_WHOISUSER)
     (312 :RPL_WHOISSERVER) (313 :RPL_WHOISOPERATOR) (314 :RPL_WHOWASUSER)
     (315 :RPL_ENDOFWHO) (316 :RPL_WHOISCHANOP) (317 :RPL_WHOISIDLE)
     (318 :RPL_ENDOFWHOIS) (319 :RPL_WHOISCHANNELS) (320 :RPL_WHOISIDENTIFIED)
     (321 :RPL_LISTSTART) (322 :RPL_LIST) (323 :RPL_LISTEND)
     (324 :RPL_CHANNELMODEIS) (325 :RPL_UNIQOPIS) (326 :RPL_WHOISOPERPRIVS)
     (327 :RPL_WHOISREALHOST) (329 :RPL_CREATIONTIME) (331 :RPL_NOTOPIC)
     (332 :RPL_TOPIC) (333 :RPL_TOPICWHOTIME) (341 :RPL_INVITING)
     (342 :RPL_SUMMONING) (346 :RPL_INVITELIST) (347 :RPL_ENDOFINVITELIST)
     (348 :RPL_EXCEPTLIST) (349 :RPL_ENDOFEXCEPTLIST) (351 :RPL_VERSION)
     (352 :RPL_WHOREPLY) (353 :RPL_NAMREPLY) (361 :RPL_KILLDONE)
     (362 :RPL_CLOSING) (363 :RPL_CLOSEEND) (366 :RPL_ENDOFNAMES)
     (364 :RPL_LINKS) (365 :RPL_ENDOFLINKS) (367 :RPL_BANLIST)
     (368 :RPL_ENDOFBANLIST) (369 :RPL_ENDOFWHOWAS) (371 :RPL_INFO)
     (372 :RPL_MOTD) (373 :RPL_INFOSTART) (374 :RPL_ENDOFINFO)
     (375 :RPL_MOTDSTART) (376 :RPL_ENDOFMOTD) (377 :RPL_MAP)
     (378 :RPL_ENDOFMAP) (379 :RPL_FORWARD) (381 :RPL_YOUREOPER)
     (382 :RPL_REHASHING) (383 :RPL_YOURSERVICE) (384 :RPL_MYPORTIS)
     (391 :RPL_TIME) (392 :RPL_USERSSTART) (393 :RPL_USERS)
     (394 :RPL_ENDOFUSERS) (395 :RPL_NOUSERS) (399 :RPL_MESSAGE)
     (401 :ERR_NOSUCHNICK) (402 :ERR_NOSUCHSERVER) (403 :ERR_NOSUCHCHANNEL)
     (404 :ERR_CANNOTSENDTOCHAN) (405 :ERR_TOOMANYCHANNELS)
     (406 :ERR_WASNOSUCHNICK) (407 :ERR_TOOMANYTARGETS)
     (408 :ERR_NOSUCHSERVICE) (409 :ERR_NOORIGIN) (410 :ERR_SERVICES-OFFLINE)
     (411 :ERR_NORECIPIENT) (412 :ERR_NOTEXTTOSEND) (413 :ERR_NOTOPLEVEL)
     (414 :ERR_WILDTOPLEVEL) (415 :ERR_BADMASK) (421 :ERR_UNKNOWNCOMMAND)
     (422 :ERR_NOMOTD) (423 :ERR_NOADMININFO) (424 :ERR_FILEERROR)
     (431 :ERR_NONICKNAMEGIVEN) (432 :ERR_ERRONEUSNICKNAME)
     (433 :ERR_NICKNAMEINUSE) (436 :ERR_NICKCOLLISION)
     (437 :ERR_UNAVAILRESOURCE) (438 :ERR_BANNICKCHANGE)
     (441 :ERR_USERNOTINCHANNEL) (442 :ERR_NOTONCHANNEL)
     (443 :ERR_USERONCHANNEL) (444 :ERR_NOLOGIN) (445 :ERR_SUMMONDISABLED)
     (446 :ERR_USERDISABLED) (447 :ERR_TARGETNINVITE) (448 :ERR_SOURCENINVITE)
     (451 :ERR_NOTREGISTERED) (461 :ERR_NEEDMOREPARAMS)
     (462 :ERR_ALREADYREGISTERED) (463 :ERR_NOPERMFORHOST)
     (464 :ERR_PASSWDMISMATCH) (465 :ERR_YOUREBANNEDCREEP)
     (466 :ERR_YOUWILLBEBANNED) (467 :ERR_KEYSET) (471 :ERR_CHANNELISFULL)
     (472 :ERR_UNKNOWNMODE) (473 :ERR_INVITEONLYCHAN) (474 :ERR_BANNEDFROMCHAN)
     (475 :ERR_BADCHANNELKEY) (476 :ERR_BADCHANMASK) (477 :ERR_NOCHANMODES)
     (478 :ERR_BANLISTFULL) (479 :ERR_BADCHANNAME) (480 :ERR_THROTTLED)
     (481 :ERR_NOPRIVILEGES) (482 :ERR_CHANOPRIVSNEEDED)
     (483 :ERR_CANTKILLSERVER) (484 :ERR_RESTRICTED)
     (485 :ERR_UNIQOPPRIVSNEEDED) (486 :ERR_RESTRICTED) (487 :ERR_NO-OP-SPLIT)
     (488 :ERR_NEED-UMODE) (491 :ERR_NOOPERHOST) (501 :ERR_UMODEUNKNOWNFLAG)
     (502 :ERR_USERSDONTMATCH) (503 :ERR_GHOSTEDCLIENT)
     (505 :ERR_BLOCKING-NOTID) (511 :ERR_SITELISTFULL) (512 :ERR_MAXMAPNODES)
     (513 :ERR_MAXFORWARDING) (514 :ERR_NOFORWARDING) (515 :ERR_NOUNIDENTIFIED)
     (516 :ERR_LAST_ERR_MSG)))
  HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-REPLY-NAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REPLY-NUMBER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*VERSION*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"0.0.4\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-QUIT-MESSAGE*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FORMAT NIL \"trivial-irc-~a\" TRIVIAL-IRC::*VERSION*)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MESSAGE-SCANNER*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(CL-PPCRE:CREATE-SCANNER \"^(:([^ ]+) +)?([^ ]+)( +(.+))?\")")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CLIENT-STREAM" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-HANDLER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "COMMAND" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "CLASS-SPEC" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "PREFIX-VAR" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "ARGUMENTS-VAR" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Define handling for /command/.

This is currently a convenience for specializing on `handle'.  An
example is the handler for PING messages (which by default is the only
handler specialization).

--
;; (define-handler (:ping client prefix arguments)
;;    (send-pong client (first arguments)))
--

If you wanted to use a different variable-name for the client
variable, you could also have written it as

--
;; (define-handler (:ping (client client) prefix arguments)
;;   (send-pong client (first arguments)))
--
")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHANGE-NICK" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "NEW-NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Send NICK message to server, and set the `nickname'
  of /client.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :DOCUMENTATION
     "Connect and register /client/ with an IRC server.

This also sets up some of the slots, and opens the log-stream.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONNECTED-P" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
     :DOCUMENTATION "Return `t' if /client/ is connected, `nil' otherwise.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DISCONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Send QUIT message to server, close the socket and close the log-stream.

Always signals `connection-closed'.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HANDLE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "COMMAND" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Called by `receive-message' after parsing the raw message.

Specialize this with the macro `define-handler' for customizing the
behaviour.

There is a default method that spits out the unhandled message
to `*standard-output*'.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :DOCUMENTATION
     "Return current nickname of /client/.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEND-JOIN" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "CHANNEL" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSWORD" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Send JOIN message.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEND-PONG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Send PONG command to server.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEND-PRIVMSG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "VICTIM" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Send /message/ to /victim/.

/victim/ can be either a channel-name or a nickname.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SOCKET" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :DOCUMENTATION
     "Return the /client/'s socket.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RECEIVE-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
     :DOCUMENTATION "Read a message from /connnection/, parse it,
  `handle', and return the parsed bits.

The return value is a list with (/raw-prefix/ /command/ /parsed-parameters/), where

- /raw-prefix/ is the raw prefix string, or `nil' if prefix wasn't present,
- /command/ is a keyword with a name corresponding to the command from the RFC and
- /parsed-parameters/ is a list of strings representing the arguments in the message.

If an error occurs during the reading, the client will be
disconnected, and the `connection-closed' will be signalled.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "A client connection to an IRC server.

Valid initargs are:

- `:nickname' -- the nickname  use when connecting (required)
- `:server' -- the hostname of the server to connect to as a string (required)
- `:port' -- the port to connect to as an integer (optional)
- `:username' -- the username to register with (optional)
- `:realname' -- the realname to register with (optional)
- `:password' -- the password to regiseter with (optional)
- `:log-pathname' -- pathname for packet-log pathname (optional)

Please note that you call `connect' on an instance of `client', instead of
having `connect' return a an instance instance."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LOG-PATHNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LOG-STREAM" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PASSWORD" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PORT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REALNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SERVER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOCKET" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "SOCKET" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "USERNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHANGE-NICK" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "NEW-NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONNECTED-P" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "*DEFAULT-QUIT-MESSAGE*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HANDLE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "COMMAND" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RECEIVE-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-JOIN" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "CHANNEL" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSWORD" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-PRIVMSG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "VICTIM" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-PONG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HANDLE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "g-command-var353" :PACKAGE-NAME NIL :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PING" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
       (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
      (:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RECEIVE-RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
     :DOCUMENTATION "Receive and return a single, raw message from /client/.

If any errors occur during the reading, the connection is silently
shut down.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEND-RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Send /raw-message/ and CRLF to the socket associated with /client/.

Outside of the few send-* functions, this is what you have to use to
send messages to the server.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Return a list on the form (prefix command arguments).

/prefix/ can be `nil', or servername / ( nickname [ [ \"!\" user ] \"@\" host ]
See also the `parse-prefix' function.

/command/ is a keyword either made from the alpha-characters, or a
keyword looked up with `find-reply-name'.

/arguments/ is a list of the command arguments.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ARGUMENT-STRING" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ARGUMENT-STRING" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ".NICK" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :DOCUMENTATION
     "Send /client/'s nickname to server.

Called by `connect' during registration.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ".PASSWORD" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T))
     :DOCUMENTATION
     "Send /client/'s password if a password is associated with /client/.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ".USER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)) :DOCUMENTATION
     "Send /client/'s username and realname to server.

Called by `connect' during registration.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ".QUIT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "*DEFAULT-QUIT-MESSAGE*" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREFIX-NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Return the nickname in extracted from /prefix/.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREFIX-SERVERNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Return the servername extracted from /prefix/.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SERVERNAME-OR-NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Return the servername or nickname from /prefix-string/.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL))
     :DOCUMENTATION "Return a list of the components in prefix.

It is a list on the form ( /server-or-nickname/ /username/ /host/) where

- /servername-or-nickname/ is a servername or a nickname,
- /username/ is a username, or `nil'
- /host/ is a hostname, or `nil'

This can potentially be used to build other abstractions later.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RECORD" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIVERSAL-TIME->ISO-8601-STRING" :PACKAGE-NAME "TRIVIAL-IRC"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIVERSAL-TIME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DETAIL" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP NIL)
       (:NAME "SECOND" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "RECEIVE-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "SEND-JOIN" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "SEND-PONG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CONNECTION-LOST" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "PREFIX-SERVERNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "SERVER-OR-NICK" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "SEND-RAW-MESSAGE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CONNECTION-FAILED" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "PREFIX-NICKNAME" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "PARSE-PREFIX" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "HANDLE" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "SEND-PRIVMSG" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CONNECTED-P" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CLIENT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "USER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "DISCONNECT" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "DEFINE-HANDLER" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)
    (:NAME "CONNECTION-CLOSED" :PACKAGE-NAME "TRIVIAL-IRC" :EXTERNALP T)))))
