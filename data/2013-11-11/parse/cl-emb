
(:TYPE :SYSTEM :NAME "cl-emb" :AUTHOR "Stefan Scholl <stesch@no-spoon.de>"
 :MAINTAINER NIL :VERSION "0.4.3" :LICENCE "Lesser Lisp General Public License"
 :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON ("CL-PPCRE") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-EMB" :FULL-NAME "CL-EMB" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*FUNCTION-PACKAGE*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :DOCUMENTATION "Package the emb function body gets interned to."
     :INITIAL-VALUE "(FIND-PACKAGE :CL-EMB-INTERN)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEBUG*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :DOCUMENTATION
     "Debugging for CL-EMB." :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LOCKING-FUNCTION*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :DOCUMENTATION
     "Function to call to lock access to an internal hash table. Must accept
a function designator which must be called with the lock hold."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-LOCK" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION "Locking all accesses to *functions*")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EXECUTE-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "GENERATOR-MAKER" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION
     "Execute named emb code. Returns a string. Keyword parameter ENV
to pass objects to the code. ENV must be a plist.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXECUTE-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "GENERATOR-MAKER" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXECUTE-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "GENERATOR-MAKER" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FUNCTIONS*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :DOCUMENTATION
     "Table mapping names to emb-function instances." :INITIAL-VALUE
     "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :CLASS :SYMBOL
     (:NAME "EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PATH" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EMB-FUNCTION-PATH" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "EMB-FUNCTION-TIME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "EMB-FUNCTION-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EMB-FUNCTION-FORM" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATH" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION "Constructor for class EMB-FUNCTION.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PPRINT-EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION
     "DEBUG function. Pretty prints function form, if *DEBUG* was t
when the function was registered.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-EMB-ALL" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Remove all registered emb code.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)) :DOCUMENTATION
     "Remove named emb code.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-EMB-ALL-FILES" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Remove all registered file emb code (registered/executed by a pathname).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the named function implementing a registered emb code.
Rebuilds it when text template was a file which has been modified.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REGISTER-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION "Register given CODE as NAME.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REGISTER-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      ((:NAME "CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REGISTER-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      ((:NAME "CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EMB-START-MARKER*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :DOCUMENTATION
     "Start of scriptlet or expression. Remember that a following #=
indicates an expression."
     :INITIAL-VALUE "\"<%\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EMB-END-MARKER*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :DOCUMENTATION "End of scriptlet or expression." :INITIAL-VALUE "\"%>\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SET-SPECIAL-LIST*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'((\"escape\" . \"cl-emb:*escape-type*\")
  (\"case-sensitivity\" . \"cl-emb:*case-sensitivity*\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SET-PARAMETER-LIST*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'((\"xml\" . \":xml\") (\"html\" . \":html\") (\"url\" . \":url\") (\"uri\" . \":uri\")
  (\"url-encode\" . \":url-encode\") (\"raw\" . \":raw\") (\"latex\" . \":latex\")
  (\"t\" . \"t\") (\"nil\" . \"nil\"))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SPECIALS" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MATCH" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REGISTERS" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION "Parse parameter(s) of @set and set special variables
like e. g. *ESCAPE-TYPE*.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-TAG-EXPAND*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :DOCUMENTATION
     "List of conses. FIRST is regex, REST replacement (STRING or FUNCTION).
Functions get called with two parameters: match and list of registers."
     :INITIAL-VALUE
     "`((\"\\\\s+@if\\\\s+(\\\\S+)\\\\s*\" . \" (cond ((cl-emb::getf-emb \\\"\\\\1\\\") \")
  (\"\\\\s+@ifnotempty\\\\s+(\\\\S+)\\\\s*\"
   . \" (cond ((> (length (cl-emb::getf-emb \\\"\\\\1\\\")) 0) \")
  (\"\\\\s+@ifequal\\\\s+(\\\\S+)\\\\s+(\\\\S+)\\\\s*\"
   . \"  (cond ((equal (format nil \\\"~a\\\" (cl-emb::getf-emb \\\"\\\\1\\\")) (format nil \\\"~a\\\" (cl-emb::getf-emb \\\"\\\\2\\\"))) \")
  (\"\\\\s+@else\\\\s*\" . \" ) (t \") (\"\\\\s+@endif\\\\s*\" . \" )) \")
  (\"\\\\s+@unless\\\\s+(\\\\S+)\\\\s*\" . \" (cond ((not (cl-emb::getf-emb \\\"\\\\1\\\")) \")
  (\"\\\\s+@endunless\\\\s*\" . \" )) \")
  (\"=?\\\\s+@var\\\\s+(\\\\S+)\\\\s+-(\\\\S+)\\\\s+(\\\\S+)\\\\s*\"
   . \"= (cl-emb::echo (cl-emb::getf-emb \\\"\\\\1\\\") :\\\\2 :\\\\3) \")
  (\"=?\\\\s+@var\\\\s+(\\\\S+)\\\\s*\" . \"= (cl-emb::echo (cl-emb::getf-emb \\\"\\\\1\\\")) \")
  (\"\\\\s+@repeat\\\\s+(\\\\d+)\\\\s*\" . \" (dotimes (i \\\\1) \")
  (\"\\\\s+@repeat\\\\s+(\\\\S+)\\\\s*\"
   . \" (dotimes (i (or (cl-emb::getf-emb \\\"\\\\1\\\") 0)) \")
  (\"\\\\s+@endrepeat\\\\s*\" . \" ) \")
  (\"\\\\s+@loop\\\\s+(\\\\S+)\\\\s*\" . \" (dolist (env (cl-emb::getf-emb \\\"\\\\1\\\")) \")
  (\"\\\\s+@endloop\\\\s*\" . \" ) \")
  (\"\\\\s+@genloop\\\\s+(\\\\S+)\\\\s*\" . \" (let ((env) 
                                            (%gen (funcall generator-maker :\\\\1 
                                                           (cl-emb::getf-emb \\\"\\\\1\\\"))))
                                           (loop
                                            (when (funcall %gen :test) (return))
                                            (setq env (funcall %gen :next))
                                            (progn \")
  (\"\\\\s+@endgenloop\\\\s*\" . \" ))) \")
  (\"\\\\s+@with\\\\s+(\\\\S+)\\\\s*\" . \" (let ((env (cl-emb::getf-emb \\\"\\\\1\\\"))) \")
  (\"\\\\s+@endwith\\\\s*\" . \" ) \")
  (\"\\\\s+@include\\\\s+(\\\\S+)\\\\s*\"
   . \"= (let ((cl-emb:*escape-type* cl-emb:*escape-type*))
                                            (cl-emb:execute-emb (merge-pathnames \\\"\\\\1\\\" template-path-default) :env env :generator-maker generator-maker)) \")
  (\"\\\\s+@includevar\\\\s+(\\\\S+)\\\\s*\"
   . \"= (let ((cl-emb:*escape-type* cl-emb:*escape-type*))
						(cl-emb:execute-emb (merge-pathnames (cl-emb::getf-emb \\\"\\\\1\\\") template-path-default) :env env :generator-maker generator-maker)) \")
  (\"\\\\s+@call\\\\s+(\\\\S+)\\\\s*\"
   . \"= (let ((cl-emb:*escape-type* cl-emb:*escape-type*))
                                            (cl-emb:execute-emb \\\"\\\\1\\\" :env env :generator-maker generator-maker)) \")
  (\"\\\\s+@insert\\\\s+(\\\\S+)\\\\s*\"
   . \"= (cl-emb::contents-of-file (merge-pathnames (cl-emb::getf-emb \\\"\\\\1\\\") template-path-default)) \")
  (,\"\\\\s+@set\\\\s+(.*?)\\\\s*\" ,@#'CL-EMB::SET-SPECIALS))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-FOR-XML" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-BY-TABLE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REPLACEMENTS" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LATEX-REPLACEMENTS*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-FOR-LATEX" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-ENCODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "URL-encode a string.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CASE-SENSITIVITY*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
     :DOCUMENTATION
     "Whether use case-sensitive mode (the default) or case-insensitive mode. If this is set NIL, the case of keys in ENV will be ignored."
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-TO-KEYWORD" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Interns a given STRING uppercased in the keyword package.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETF*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLIST" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "GETF-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)) :DOCUMENTATION
     "Search either plist TOPENV or ENV according to the search path in KEY. KEY
is a string.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ESCAPE-TYPE*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T) :DOCUMENTATION
     "Default value for escaping @var output." :INITIAL-VALUE ":RAW")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ECHO" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ESCAPE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
       (:NAME "*ESCAPE-TYPE*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)))
     :DOCUMENTATION
     "Emit given STRING. Escape if wanted (global or via ESCAPE keyword).
STRING can be NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-FILE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FILENAME" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)) :DOCUMENTATION
     "Get given file FILENAME.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCANNER-FOR-EXPAND-TEMPLATE-TAG" :PACKAGE-NAME "CL-EMB" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TAG" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a CL-PPCRE scanner which matches a template tag expanded by EXPAND-TEMPLATE-TAGS.
Scanners are memoized in SCANNER-HASH once they are created.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCANNER-FOR-EXPAND-TEMPLATE-TAG" :PACKAGE-NAME "CL-EMB" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TAG" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a CL-PPCRE scanner which matches a template tag expanded by EXPAND-TEMPLATE-TAGS.
Scanners are memoized in SCANNER-HASH once they are created.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-EXPAND-TEMPLATE-TAG-HASH" :PACKAGE-NAME "CL-EMB" :EXTERNALP
      T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Removes all scanners for template tags from cache.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-TEMPLATE-TAGS" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Expand template-tags (@if, @else, ...) to Common Lisp.
Replacement and regex in *TEMPLATE-TAG-EXPAND*")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EMB-STREAM-REDIRECTION*" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "\"with-output-to-string (*standard-output*)\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRUCT-EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION "Builds and compiles the emb-function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTENTS-OF-FILE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a string with the entire contents of the specified file.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRUCT-EMB-BODY-STRING" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Takes a string containing an emb code and returns a string
containing the lisp code that implements that emb code.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-CODE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TAG-TEMPLATE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TAG-TYPE" :PACKAGE-NAME "CL-EMB" :EXTERNALP NIL)) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "EXECUTE-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "PPRINT-EMB-FUNCTION" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*DEBUG*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*CASE-SENSITIVITY*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "REGISTER-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "CLEAR-EMB" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "CLEAR-EMB-ALL-FILES" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "CLEAR-EXPAND-TEMPLATE-TAG-HASH" :PACKAGE-NAME "CL-EMB" :EXTERNALP
     T)
    (:NAME "*EMB-START-MARKER*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*EMB-END-MARKER*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*FUNCTION-PACKAGE*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "CLEAR-EMB-ALL" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*LOCKING-FUNCTION*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)
    (:NAME "*ESCAPE-TYPE*" :PACKAGE-NAME "CL-EMB" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-INTERN" :FULL-NAME "CL-EMB-INTERN" :DOCUMENTATION NIL
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS NIL)))
