
(:TYPE :SYSTEM :NAME "doplus" :AUTHOR
 "Alessio Stalla <alessiostalla@gmail.com>" :MAINTAINER NIL :VERSION NIL
 :LICENCE "GPLv3" :DESCRIPTION
 "DO+ (doplus) is a high-level, extensible iteration construct for Common Lisp with a reasonably simple implementation, which in particular does not use a code walker."
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("PARSE-DECLARATIONS-1.0") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "DOPLUS" :FULL-NAME "DOPLUS" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-VARIABLES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LAMBDA-LIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DESTRUCTURING-FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LAMBDA-LIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "EXPRESSION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "GENERATOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLAUSES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-GENERATOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "CLAUSES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "TERMINATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TERMINATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "CONDITION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM38" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RESULT" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RESULT" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM74" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "BINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEFAULT" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEFAULT-PROVIDED?" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-BINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "VAR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM110" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "DEFAULT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM111" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "DEFAULT-PROVIDED?" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM112" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DECLARATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DECLARATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM150" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "INITIALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INITIALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM186" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL (:NAME "STEP" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STEP" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM222" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "FINALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FINALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM258" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "ACCUMULATOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ACCUMULATOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "VAR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM294" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "FUNCTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM295" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "PROLOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PROLOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM332" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "EPILOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EPILOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM368" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "WRAPPER" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-WRAPPER" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FUNCTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM404" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "OPTIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-OPTIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "MAP" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM440" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEFAULT" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DEFAULT-PROVIDED?" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ITERATION-VARIABLE*" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BINDINGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "INITIALIZATIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "STEPS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "PRECONDITIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "POSTCONDITIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION "General iteration clause generator.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SIMPLE-ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       (:NAME "*ITERATION-VARIABLE*" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
      (:NAME "INIT" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      ((:NAME "STEP" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STEP-P" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
      (:NAME "PRECONDITION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "POSTCONDITION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Specialized iteration clause generator, where the iteration clause refers to a single variable, possibly with an initial value, step form, precondition, or postcondition.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CLAUSES*" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :DOCUMENTATION
     "A list of known symbols that name clause macros, useful for introspection and documentation purposes."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCLAUSE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ARGLIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Same as cl:defmacro, but additionally records <name> in *clauses* as a known clause macro.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DECLARING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)) :DOCUMENTATION
     "Causes the emission of a (declare <thing>) form in the declaration section of the loop.")
    (:TYPE :MACRO :SYMBOL (:NAME "FOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR-OR-VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "General iteration clause. Its actual behaviour is controlled by ITERATION, a macro form that FOR expands with *ITERATION-VARIABLE* bound to VAR. Example: in (for x (in '(1 2 3))), IN is a macro that expands into clauses that make use of *ITERATION-VARIABLE*, which is bound to the symbol X in the example. For certain iteration macros, VAR can be a lambda-list as well, in which case destructuring is applied. Example: (for (x &optional y) (in-list '((1 2) (3)))).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "GENERATING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Lazy version of FOR. The user must call UPDATE or TRY-UPDATE in the body of the DO+ form in order to compute new values for the variable(s). Initialization, instead, is *always* performed eagerly.")
    (:TYPE :MACRO :SYMBOL (:NAME "FINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Same as FOR, but perhaps nicer to read when used in conjunction with macros like MAXIMIZING.")
    (:TYPE :MACRO :SYMBOL (:NAME "BEING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THEN" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Assigns to the iteration variable a value computed by evaluating FORM on each iteration, including the first. Optionally, the variable can be updated evaluating a differen form (the value of the `then' parameter). Examples: (for x (being (random))), (for y (being 'quiet :then (if (> x 0.5) 'angry 'quiet))).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-LIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)) :DOCUMENTATION
     "(if (listp obj) obj (list obj))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-WITH-SIMPLE-DESTRUCTURING" :PACKAGE-NAME "DOPLUS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Expand `form' in `env' as an iteration form that assigns to `*iteration-variable*' destructuring as by `destructuring-bind'.")
    (:TYPE :MACRO :SYMBOL (:NAME "IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&WHOLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "SEQ" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Iterates over a sequence. IN must be used in combination with FOR, GENERATING and similar macros (those that bind *ITERATION-VARIABLE*). In implementations with extensible sequences (currently ABCL and SBCL), native sequence iterators are used, and all sequence types are supported, not just lists and vectors. In other implementations, an iterator specialized for lists or vectors is used depending on the type of sequence. All `args` are passed down to make-sequence-iterator (see the extensible sequences API paper for details [Rhodes2007]). IN can perform destructuring.")
    (:TYPE :MACRO :SYMBOL (:NAME "IN-LIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&WHOLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "CDR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      ((:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "REST"))
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like IN, but specialized for lists. Successive lists are obtained by calling the function BY (which by default is #'CDR) on the previous list. REST, if specified, is the variable holding the remaining elements to be processed; REST initially is bound to the entire list, then to successive lists obtained by funcalling BY.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "LIST-TAILS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&WHOLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "CDR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Loops over the successive tails of a list, checking for the end of the list as if by ATOM. Can perform destructuring.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IN-VECTOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDEX" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "INDEX"))
      ((:NAME "START" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) 0)
      (:NAME "END" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      ((:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) 1))
     :DOCUMENTATION
     "Loops across a vector. INDEX is bound to the index of the current element in the vector. The vector is traversed starting from index START (0 by default) to index END (the end of the vector if not specified); the index is incremented by BY (1 by default) on each iteration.")
    (:TYPE :MACRO :SYMBOL (:NAME "ACROSS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION "Synonym for in-vector.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "HASH-ENTRIES-OF" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Iterates over the entries of a hash table. The iteration variables must be specified as (key value), for example: (for (lemma definitions) (hash-entries-of the-english-vocabulary)).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SYMBOLS-IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PACKAGE-OR-PACKAGES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYMBOL-TYPES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Iterates over the symbols in one or more packages. Symbol-types follows the specification of cl:with-package-iterator.")
    (:TYPE :MACRO :SYMBOL (:NAME "FROM" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INITIAL-VALUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "WHILE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      ((:NAME "USING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "+" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Iterates from a given initial value to an optional maximum. Every iteration increments/decrements the value applying the <using> function (by default +) to the previous value and <by> (by default 1 or -1, depending on whether to >= from or not). Similarly, the <while> function is used to determine if <to> has been reached or surpassed. <while> is a function of two arguments, the current value and the value of <to>, and as soon as it returns false, the loop is terminated. <while> defaults to a function that returns true only if <to> has been specified and, letting cur be the current value, (<= (min to from) cur (max to from)).")
    (:TYPE :MACRO :SYMBOL (:NAME "TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FINAL-VALUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FROM" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) 0)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "WHILE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "USING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION "Variation over from.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PREVIOUS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)) :DOCUMENTATION
     "On every iteration, the for-variable is set to the value <expr> had at the end of the previous iteration (initially NIL).")
    (:TYPE :MACRO :SYMBOL (:NAME "WITH" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BINDINGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Establishes bindings which are in effect for the whole loop.")
    (:TYPE :MACRO :SYMBOL (:NAME "UNTIL" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Specifies a termination clause for the loop. When, at the beginning of an iteration, the clause evaluates to true, the loop stops.")
    (:TYPE :MACRO :SYMBOL (:NAME "WHILE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Same as (until (not <condition>)).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "STOP-WHEN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Synonym for until.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns each form in <forms> as the value of the do+ form when the loop ends. If multiple forms are specified, by one or more RETURNING clauses, multiple values are returned, in the order the corresponding forms appear lexically. If one of the <forms> is (cl:values ...), then each value will be returned as if the values were spelled as direct arguments of the RETURNING form.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION "Evaluates <form> before the first iteration.")
    (:TYPE :MACRO :SYMBOL (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates <form> after the last iteration, before returning a value.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ACCUMULATING-TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION
     "Specifies an accumulation clause. Refer to the manual for details.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "COLLECTING-INTO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION "Synonym for accumulating-to.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUMMING-TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RESULT-PROCESSOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Specifies an accumulation strategy with 0 as the default value and + as the accumulator function.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "COLLECTING-INTO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION
     "Same as collecting-into, but also returns the value of each <vars> at the end of the loop.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ACCUMULATING-TO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
      (:NAME "BY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION
     "Same as accumulating-into, but also returns the value of each <vars> at the end of the loop.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUMMING-TO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RESULT-PROCESSOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Same as summing-to, but also returns the value of each <vars> at the end of the loop.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "COUNTING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)) :DOCUMENTATION
     "Counts the number of iterations, starting from 0.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAXIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME ">" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "SAVING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION "Synonym for optimizing.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MINIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "<" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "SAVING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION "Same as optimizing but with < as the default test.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "OPTIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME ">" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "SAVING" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T))
     :DOCUMENTATION
     "Finds the optimum value of an expression across the iteration. Refer to the manual for details.")
    (:TYPE :MACRO :SYMBOL (:NAME "OPTIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ATOMIC-UPDATES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-ATOMIC-UPDATES*" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VARIABLES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
      (:NAME "BINDING-FORM" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-ATOMIC-UPDATES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VARIABLES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITHOUT-ATOMIC-UPDATES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VARIABLES" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DOPLUS-ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LOOP-NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SKIP-LABEL" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TERMINATE-LABEL" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEFAULT-COLLECT-VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ACCUMULATORS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GENERATORS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARENT" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DOPLUS-ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "LOOP-NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1702" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "SKIP-LABEL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1703" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "TERMINATE-LABEL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1704" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "DEFAULT-COLLECT-VAR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1705" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "ACCUMULATORS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1706" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "GENERATORS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1707" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "PARENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1708" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-LOOP-IN-ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-GENERATOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-DOPLUS-BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "DO+" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ITER-FORMS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "High-level, extensible iteration construct. Refer to the manual for syntax and semantics.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO+/INTERNAL" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DOPLUS-ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "ITER-FORMS" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "SUM" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
       ((:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        "sum requires a target accumulator (:to key)")))
     :DOCUMENTATION
     "Syntactic sugar for collect, intended to be used when the accumulator computes a sum.")
    (:TYPE :MACRO :SYMBOL (:NAME "COLLECT" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INTO" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Collects a value into an accumulator. If no accumulator is provided, the default one for the current do+ loop is used.")
    (:TYPE :MACRO :SYMBOL (:NAME "SKIP" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LOOP-NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Skips the current iteration. Refers to the current loop or, if loop-name is specified, to the closest surrounding loop with that name.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "TERMINATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LOOP-NAME" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "RETURN-VALUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Immediately terminates the loop. Refers to the current loop or, if loop-name is specified and non-NIL, to the closest surrounding loop with that name. Can optionally specify a return value for the loop, which, if provided, will override the loop's ordinary return value.")
    (:TYPE :MACRO :SYMBOL (:NAME "UPDATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Updates the generator named <var>, calculating new value(s) for its variable(s) and evaluating its pre and post conditions, terminating the loop if they fail.
If successful, the update returns the value of <var>.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRY-UPDATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ON-ERROR" :PACKAGE-NAME "DOPLUS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Tries to update the generator named <var> as by UPDATE. If the loop would be terminated as a result of the update operation, it is not terminated.

Any errors occurring during the update are ignored by default; however, it is possible to provide a function to be invoked in case of error to determine what to do. This is the value of the <on-error> parameter, which, if provided, must be a function of two arguments: the first is the value to be returned as the result of the try-update form if the error is suppressed; the second is the condition object itself, which can be resignaled.
Calling TERMINATE inside the function, if it is defined lexically inside the DO+ body, will regularly terminate the loop."))
   :EXTERNAL-SYMBOLS
   ((:NAME "MAKE-INITIALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "IN-VECTOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "DO+" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-PROLOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "COUNTING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "DEFCLAUSE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "OPTIONS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-RESULT" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "SUM" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-FINALIZATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "SUMMING-TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "TRY-UPDATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-TERMINATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "FINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-EPILOGUE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "ACCUMULATING-TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "FINALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-ACCUMULATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "INITIALLY" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "OPTIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "ACROSS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "TERMINATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "TO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "ACCUMULATING-TO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "SYMBOLS-IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-STEP" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "WITH" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAXIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "IN-LIST" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "COLLECTING-INTO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "FOR" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "LIST-TAILS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "BEING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-BINDING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "*ITERATION-VARIABLE*" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "UPDATE" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "IN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "SKIP" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "SUMMING-TO-AND-RETURNING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "HASH-ENTRIES-OF" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "STOP-WHEN" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "PREVIOUS" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "COLLECT" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "FROM" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MINIMIZING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "MAKE-SIMPLE-ITERATION" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "COLLECTING-INTO" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)
    (:NAME "GENERATING" :PACKAGE-NAME "DOPLUS" :EXTERNALP T)))))
