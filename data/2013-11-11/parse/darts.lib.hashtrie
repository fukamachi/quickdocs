
(:TYPE :SYSTEM :NAME "darts.lib.hashtrie" :AUTHOR "Dirk Esser" :MAINTAINER
 "Dirk Esser" :VERSION "0.1" :LICENCE "MIT" :DESCRIPTION
 "Hash-based trie structure" :LONG-DESCRIPTION "" :DEPENDS-ON NIL :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "DARTS.LIB.HASHTRIE" :FULL-NAME "DARTS.LIB.HASHTRIE"
   :DOCUMENTATION "Purely functional hash-based map structure 

This package provides a purely functional data structure for mapping keys 
to values. The underlying algorithms are hash-based, and modelled after 
the paper ``Ideal Hash Trees´´ by Phil Bagwell. A few differences to Common 
Lisp's standard hash tables:

  - all objects are immutable after construction
  - you can specify any equality test predicate you need
  - works with any user supplied hash function

By being immutable, these structures are automatically thread-safe and
can be shared across any number of concurrently running threads safely.
That fact was actually the main motivation for the development of this
package.

Note, that hash trees as implemented here are not necessarily a simple
drop-in replacement for Common Lisp's standard hash tables. In particular,
hash trees work best with equal based equality (as opposed to eq). Also,
many Lisp implementations provide weak hash tables, which is not supported
by hash trees at all."
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "RECURR" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TAG" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PAYLOAD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TAG" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "PAYLOAD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OB" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-LEAF-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-DISPATCH-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "NODE-TYPE-CASE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE-FORM" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIEP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Tests, whether VALUE is a hash trie of any flavour. Yields
true, if that's the case, and false otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Tests, whether the hash trie VALUE is empty. Yields true,
if that's the case, and false otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-FOLD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INITIAL-VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Invokes FUNC for each key/value pair in hash trie NODE, 
in order to produce a summary value. The function is called
with three arguments: 

- the current summary value, i.e., the value returned by
  the function on the previous invocation, or INITIAL-VALUE,
  if this is the first invocation
- the key of the key/value pair
- the associated value of the key/value pair

This function returns the final summary value of FUNC, i.e.,
the value returned by FUNC on the last invocation made, or
INITIAL-VALUE, if the trie is empty.

Note, that the order of key/value pairs in the traversal
is unspecified but consistent, i.e., two consecutive calls
of this function with the same has trie will visit the pairs
in the same order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-COUNT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Counts the key/value pairs in hash trie NODE. Returns a 
single integer value, which represents the number of pairs
present.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-MAP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Applies FUNC to each key/value pair in the trie NODE. For
each key/value pair present in NODE, FUNC is called with the
key as first, and the value as second argument. The return 
value of FUNC is ignored.

The return value of this function is unspecified.

Note, that the order of key/value pairs in the traversal
is unspecified but consistent, i.e., two consecutive calls
of this function with the same has trie will visit the pairs
in the same order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-KEYS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-VALUES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "TRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "%HASHTRIE-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Returns four values: HASH TEST MAKE-NODE EMPTY
where HASH is the hash function of TREE, TEST is the equality
predicate of TREE, MAKE-NODE is the node construction function
of TREE and EMPTY is the canonical empty node.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Inspects the hash trie TREE and returns two values. The 
primary value is the hash function used for TREE, and the
secondary value is the equality predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-GET*" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Looks up the value associated with KEY in TREE. If a matching
value is found, it is returned as primary return value; otherwise
DEFAULT is returned. The secondary return value is a boolean value
indicating, whether a matching key/value pair was actually found 
or not.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-UPDATE*" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAKE-NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Updates TREE, adding a new key/value binding for KEY or 
replacing the value associated with a present binding with
VALUE. Returns the modified tree as primary result value,
the old value of the pair (if any) as secondary value, and
a keyword describing what has been done as third value:

:added    a new key/value pair has been added
:replaced the value of a present pair has been replaced")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-REMOVE*" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EMPTY-NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAKE-NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTRIE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Removes the assocation of KEY from TREE. Returns the 
modified tree as primary result, the value formerly associated
with KEY as secondary result, and a boolean flag, which indicates
whether the KEY was found (and thus, the tree was modified) as
third value.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "SIMPLE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "Standard hash trie implementation, which uses
sxhash as hash function and eql as equality predicate."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HashTrie-Dont-Use-MAKE-SIMPLE-HASHTRIE" :PACKAGE-NAME
      "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TAG" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "PAYLOAD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HashTrie-Dont-Use-EMPTY-SIMPLE-HASHTRIE*" :PACKAGE-NAME
      "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(DARTS.LIB.HASHTRIE::|HashTrie-Dont-Use-MAKE-SIMPLE-HASHTRIE| 0 NIL)")
    (:TYPE :METHOD :SYMBOL
     (:NAME "%HASHTRIE-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "TRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "SIMPLE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-HASHTRIE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-HASHTRIE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-HASHTRIE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "HASH-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "%EMPTY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-HASH-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HASH-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a new \"hash controller\". A hash controller is basically
a pair of two functions `test` and `hash`. The `test` function is a
predicate `(lambda (a b) ...) => boolean`, which tests two values `a`
and `b` for equality. The default `test` function is `eql`. The `hash`
function has the signature `(lambda (x) ...) => integer`. It is called
in order to compute a hash value for the given value `x`. The default
hash function is `sxhash`.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SXHASH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Creates a new hash tree. The hash tree will use the function supplied
as the value of the :test parameter as its equality test predicate, and
the value passed as :hash as its hash function. If omitted, the default
equality test is eql, and the default hash function is sxhash.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-FOLD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Reduces a hash tree into a single summary value. The function FUNCTION
must have the signature (lambda (key value summary) ...). It is called for
each key/value pair present in MAP. On the first invocation, the summary
value will be INITIAL-VALUE, and on each subsequent invocation it will be 
the primary return value of FUNCTION from the previous invocation. After 
all pairs have been processed, that last return value of FUNCTION is returned.
If MAP is the empty tree, then this function returns INITIAL-VALUE.

Note, that the order, in which this function visits the key/value pairs in
MAP, is undefined.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-MAP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Maps a function across all elements in a hashtree. This function applies
FUNCTION to each element in MAP; FUNCTION must accept two arguments and will
be called with an element's key as first, and its associated value as second
argument. The result of this function is undefined. 

Note, that the order, in which this function visits the key/value pairs in
MAP, is undefined.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-KEYS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes a list of the keys of all key/value pairs in MAP. Note, that 
the order of the values in the resulting list is undefined.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-VALUES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes a list of the values of all key/value pairs in MAP. Note, that 
the order of the values in the resulting list is undefined.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes a list of all key/value pairs in MAP. The result is a list
of conses `(key . value)`. Note, that the order of the values in the 
resulting list is undefined.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
      (:NAME "TREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates the form TREE, which must yield a hash tree instance. 
Visits each key/value pair in that tree, binding the variable named KEY 
to the pair's key, and VALUE to the pair's value, and evaluates the forms
in BODY like progn does. There is an implicit anonymous block surrounding
the expansion of this form, which may be used to stop the iteration before
all elements have been visited. The result value of this form is nil, unless 
an explicit result value is specified in BODY by doing a `return`.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-COUNT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Counts the number of entries in a hash tree. Note, that this function
has a runtime complexity of `O(n)`, with `n` being the number of key/value
pairs in MAP.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OB" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       (:NAME "HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Obtains the test function used by the given hash tree MAP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Obtains the hash function used by the given hash tree MAP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Tests, whether the given hash tree MAP is empty.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Obtains the value associated with a given key KEY in MAP. If 
no matching association exists, returns DEFAULT instead. This function
returns as secondary value a boolean, which indicates, whether a
matching key/value pair was found (T) or not (NIL).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Removes the association of KEY from hash tree MAP. Returns a 
copy of MAP without the key/value pair. No guarantees are made as
to whether this function returns MAP unchanged or a copy of MAP,
if no matching pair is found; the only guarantee made is, that
the resulting value will be equivalent to MAP. 

This function returns as a secondary value a boolean flag, which
indicates, whether KEY was found and subsequently removed (T) or
not (NIL).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "MAP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Updates the hash tree MAP, adding an association of KEY to
VALUE. Any previous association of KEY in MAP is replaced. This 
function returns a copy of MAP with the new association as primary
value. The secondary value is one of 

  :added     there was no previous association of KEY in MAP
  :replaced  a former association of KEY has been replaced.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-HASHTREE-CONSTRUCTOR" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      ((:NAME "HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SXHASH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Defines a factory function for hash trees using a dedicated 
pair of equality predicate TEST and hash function HASH. The forms
TEST and HASH are evaluated and must yield funcallable values (i.e.,
symbols or functions).

The primary effect of this macro is the definition of a new 
function NAME, which has the signature (lambda (&rest args) ...).
It must be called with an even number of arguments. The arguments
at indices 2k (for k in 0, 1, ...) are taken to be the keys, and
arguments at indices 2k + 1 are the associated values. The result
of calling NAME is a hash tree containing the key/value pairs 
passed as arguments.

Example:

> (define-hashtree-constructor integer-tree :test #'= :hash #'identity)
INTEGER-TREE

> (integer-tree 1 :one 2 :two 3 :three)
#<HASHTREE ...>

> (hashtree-get 2 *)
:TWO
T
")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SIMPLE-HASHTREE-CONTROLLER*" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(DARTS.LIB.HASHTRIE::MAKE-HASH-CONTROL #'EQL #'SXHASH)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP NIL))
     :DOCUMENTATION "hashtree &rest ARGS => TREE

Constructs a new hash tree using the default test and hash function
pair (i.e., eql and sxhash). Remaining arguments are used to initialize
the new hash tree; an even number of arguments must be supplied. The 
arguments on positions 2k (with k = 0, 1, ...) are taken as the keys
and the values at positions 2k + 1 (with k = 0, 1, ...) are used as
the associated values.

Example:

  (hashtree-get 2 (hashtree 1 :one 2 :two 3 :three))
  ==> :TWO 
  ==> T

This function is provided as convenience constructor for hash trees
using the standard hash control functions."))
   :EXTERNAL-SYMBOLS
   ((:NAME "HASHTRIE-COUNT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "SIMPLE-HASHTRIE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
     :EXTERNALP T)
    (:NAME "HASHTREE-COUNT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "DO-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "DO-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-FOLD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-FOLD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "SIMPLE-HASHTRIE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
     :EXTERNALP T)
    (:NAME "HASHTRIE-CONTROL" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIEP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "SIMPLE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREEP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "DEFINE-HASHTREE-CONSTRUCTOR" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
     :EXTERNALP T)
    (:NAME "HASHTREE-KEYS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-MAP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-VALUES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "MAKE-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "SIMPLE-HASHTRIE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP
     T)
    (:NAME "DEFINE-HASHTRIE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-MAP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-KEYS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTRIE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-VALUES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "DARTS.LIB.HASHTREE" :FULL-NAME "DARTS.LIB.HASHTREE"
   :DOCUMENTATION "Compatibility interface. Note that everything in this
package is deprecated."
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "HASHTREEP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-COUNT" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-GET" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-HASH" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-UPDATE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "MAKE-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-EMPTY-P" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-TEST" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-MAP" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "DO-HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-FOLD" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-VALUES" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-KEYS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-REMOVE" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "HASHTREE-PAIRS" :PACKAGE-NAME "DARTS.LIB.HASHTRIE" :EXTERNALP T)
    (:NAME "DEFINE-HASHTREE-CONSTRUCTOR" :PACKAGE-NAME "DARTS.LIB.HASHTRIE"
     :EXTERNALP T)))))
