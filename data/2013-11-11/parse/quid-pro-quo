
(:TYPE :SYSTEM :NAME "quid-pro-quo" :AUTHOR "Matthias Hoelzl <tc@gauss.muc.de>"
 :MAINTAINER "Greg Pfeil <greg@technomadic.org>" :VERSION NIL :LICENCE
 "Public Domain" :DESCRIPTION
 "A contract programming library for Common Lisp in the style of
                Eiffel's Design by Contract."
 :LONG-DESCRIPTION "See README.md" :DEPENDS-ON
 ("CLOSER-MOP" "METHOD-COMBINATION-UTILITIES" "ASDF-SYSTEM-CONNECTIONS"
  "ALEXANDRIA")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "QUID-PRO-QUO" :FULL-NAME "QUID-PRO-QUO" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "IMPLIES" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONSEQUENT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "A boolean operator that evaluates to the value of CONSEQUENT if CONDITION is
   true, and otherwise evaluates to T. This isn't particularly specific to Quid
   Pro Quo, but it is a useful logical operator for contracts.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CHECK" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DESCRIPTION" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHECK-INVARIANTS-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHECK-PRECONDITIONS-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHECK-POSTCONDITIONS-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*VERIFY-PRECONDITIONS-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      T)
     :DOCUMENTATION
     "If NIL, we run only the most-specific precondition, otherwise we run all
   preconditions to make sure no less-specific preconditions are overly
   strict."
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLED-CONTRACTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Returns a list of arguments suitable to APPLYing to ENABLE-CONTRACTS.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLE-CONTRACTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INVP" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
      ((:NAME "PRECONDITIONS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PREP" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
      ((:NAME "POSTCONDITIONS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "POSTP" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Enables or disables each contract type that is provided. If none is provided,
   no change is made.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISABLE-CONTRACTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "A shorthand for disabling all contracts.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONTRACTS-ENABLED" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "PRECONDITIONS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "POSTCONDITIONS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "Enables/disables contracts for the extent of this form, restoring them to
   their prior values upon exit.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONTRACTS-DISABLED" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "A shorthand for disabling all contracts for the extent of this form.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "%RESULTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :DOCUMENTATION "Holds a list of values, accessed by the RESULTS function."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESULTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "This is really only available to postconditions. It returns the values
   returned by the primary/around method, so they can be checked in the
   postcondition.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PREPARING-POSTCONDITIONS*" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "This is true when we are setting up postconditions by pre-evaluating any
   forms that need an OLD value."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*POSTCONDITION-VALUES*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "This contains all the values computed for the current set of postconditions"
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "OLD" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EXPRESSION" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "Only available in postconditions, OLD evaluates its expression before the
   primary method is executed and stores it for use in the postcondition.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INSIDE-CONTRACT-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONTRACT-METHOD-COMBINATION*" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(SB-MOP:FIND-METHOD-COMBINATION
 (SB-MOP:CLASS-PROTOTYPE (FIND-CLASS 'CLOSER-MOP:STANDARD-GENERIC-FUNCTION))
 'QUID-PRO-QUO:CONTRACT 'NIL)")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "STANDARD-GENERIC-FUNCTION" :PACKAGE-NAME "CLOSER-MOP" :EXTERNALP
        T))
      (:NAME "DOC-TYPE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "STANDARD-METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DOC-TYPE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION "")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONTRACT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "This macro makes it possible to add pre- and postconditions to non-generic
   functions as well.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-CONTRACTED-FUNCTION" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "This both ensures that the method combination is correct as well as that the
   correct version of STANDARD-GENERIC-FUNCTION is used (for some
   implementations, Closer-MOP's STANDARD-GENERIC-FUNCTION is different from
   CL's).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DESCRIPTION<-REMAINING-FORMS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REMAINING-FORMS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRIP-LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LL" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFREQUIREMENT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "Adds a precondition to the NAMEd function. It can be either a generic or
   non-generic function. If it's the former, then use a specialized lambda list,
   otherwise use an ordinary lambda list. The docstring, if any, will be used in
   failure reports.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFGUARANTEE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "Adds a postcondition to the NAMEd function. It can be either a generic or
   non-generic function. If it's the former, then use a specialized lambda list,
   otherwise use an ordinary lambda list. The docstring, if any, will be used in
   failure reports.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This is the metaclass for any classes you want to add invariants to."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DIRECT-CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO"
         :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "FUNCALLABLE-CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
      (:NAME "FUNCALLABLE-STANDARD-CLASS" :PACKAGE-NAME "SB-MOP" :EXTERNALP T))
     :DOCUMENTATION
     "This is the metaclass for any funcallable classes you want to add invariants
    to."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INVARIANT-DESCRIPTION" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      ((:NAME "DOC-TYPE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Appends the invariant information to the usual documentation.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      ((:NAME "DOC-TYPE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE-SUPERCLASS" :PACKAGE-NAME "SB-MOP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      ((:NAME "SUPERCLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-CLASS-USING-CLASS" :PACKAGE-NAME "SB-MOP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIRECT-SUPERCLASSES" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "METACLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This ensures that any subclass of a CONTRACTED-CLASS is also treated as a
   CONTRACTED-CLASS (assuming the METACLASS and all DIRECT-SUPERCLASSES are
   compatible with CONTRACTED-CLASS). This helps us maintain contracts without
   the subclasser having to know about them.

   NB: This doesn't work on forward-referenced classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-INVARIANT-DESCRIPTIONS" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)))
     :DOCUMENTATION "")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PASSES-CLASS-INVARIANTS-P" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PASSES-SLOT-TYPE-INVARIANTS-P" :PACKAGE-NAME "QUID-PRO-QUO"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PASSES-INVARIANTS-P" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION
     "This checks that an instance passes all the class invariants.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-INVARIANT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION-NAME" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "LAMBDA-LIST" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "SPECIALIZERS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "LAMBDA-BODY" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION "Adds an invariant to the provided generic function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-READER-INVARIANT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "READER" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-WRITER-INVARIANT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "WRITER" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-DIRECT-SLOTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-ACCESSOR-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INVARIANT-INITIALIZERS*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      T)
     :DOCUMENTATION
     "This is a list of functions that add invariants to some methods on a class.
   Each function must take the class as an argument. The return value is
   ignored."
     :INITIAL-VALUE "(LIST #'QUID-PRO-QUO::ADD-ACCESSOR-INVARIANTS)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INITIALIZE-INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INSTANCE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "guarantees:
* (PASSES-INVARIANTS-P (RESULTS))")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REINITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INSTANCE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INVARIANTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "guarantees:
* (PASSES-INVARIANTS-P (RESULTS))"))
   :EXTERNAL-SYMBOLS
   ((:NAME "CONTRACT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "DISABLE-CONTRACTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "FUNCALLABLE-CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO"
     :EXTERNALP T)
    (:NAME "POSTCONDITION-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "CREATION-INVARIANT-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)
    (:NAME "OVERLY-STRICT-PRECONDITION-WARNING" :PACKAGE-NAME "QUID-PRO-QUO"
     :EXTERNALP T)
    (:NAME "INVARIANT-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "MALFORMED-CONTRACT-WARNING" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)
    (:NAME "CONTRACT-VIOLATION-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)
    (:NAME "*VERIFY-PRECONDITIONS-P*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)
    (:NAME "CONTRACTED-CLASS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "ADD-INVARIANT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "DEFGUARANTEE" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "ENABLE-CONTRACTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "*INVARIANT-INITIALIZERS*" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)
    (:NAME "AFTER-INVARIANT-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "PRECONDITION-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "OLD" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "IMPLIES" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "WITH-CONTRACTS-ENABLED" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "RESULTS" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "WITH-CONTRACTS-DISABLED" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "PASSES-INVARIANTS-P" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "DEFREQUIREMENT" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP T)
    (:NAME "BEFORE-INVARIANT-ERROR" :PACKAGE-NAME "QUID-PRO-QUO" :EXTERNALP
     T)))))
