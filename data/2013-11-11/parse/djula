
(:TYPE :SYSTEM :NAME "djula" :AUTHOR "Nick Allen <nallen05@gmail.com>"
 :MAINTAINER "Eric Sessoms <eric@nubgames.com>" :VERSION "0.2" :LICENCE "MIT"
 :DESCRIPTION "An implementation of Django templates for Common Lisp."
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ACCESS" "ALEXANDRIA" "ARNESI" "BABEL" "CL-PPCRE" "CL-FAD" "SPLIT-SEQUENCE")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "DJULA" :FULL-NAME "DJULA" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESS-TOKEN" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TOKEN" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "REST-TOKEN-LIST" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESS-TOKENS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TOKEN-PROCESSOR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "REST-VAR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-UNPARSED-TAG-PROCESSOR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "REST-VAR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TAG-PROCESSOR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "REST-VAR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-DELIMITED-TAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STARTTAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ENDTAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "DELIMITED-NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TOKEN-COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TAG-COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-FILTER" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-LANGUAGE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-LANGUAGE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE ":ENGLISH")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*USE-EXAMPLE-VALUES-P*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CATCH-TEMPLATE-ERRORS-P*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALLOW-INCLUDE-ROOTS*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-STRING-IF-INVALID*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EVAL-LISP-TAGS*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRANSLATION-TABLE-REGEXPS*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(\"inter.*\\\\.lisp$\" \"inter.*\\\\.cl$\" \"inter.*\\\\.sexp$\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EXAMPLE-TABLE-REGEXPS*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(\"example.*\\\\.lisp\" \"example.*\\\\.cl\" \"example.*\\\\.sexp\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*KNOWN-TRANSLATION-TABLES*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*KNOWN-EXAMPLE-TABLES*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BLOCK-ALIST*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LINKED-FILES*" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FILE-HANDLER" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "STRING-VAR" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
       (:NAME "TEMPLATE-PATH" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION
     "evaluates `BODY' with `STRING-VAR' bound to a string representing the contents of
the file pointed to be the template-path `TEMPLATE-PATH', returning it's results.
if there is an error while binding `STRING-VAR' and *CATCH-TEMPLATE-ERRORS-P* is T then
it returns a function that is suitable output for the body of a DEF-TOKEN-COMPILER
form that returns some debugging info.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-IF-CLAUSE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLAUSE-TOKENS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION "returns two values:

   1. all clause tokens that appear _before_ the first :ELSE token
   2. all clause tokens that appear _after_ the first :ELSE token")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-LOGICAL-STATEMENT" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STATEMENT" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION
     "takes a \"logical statement\" like you would give {% if %} that has been parsed
into a list of keywords [eg: '(:not :foo) or '(:foo :and :baz) or
`(:foo.bar :or :list.1)] and turns them into a thunk predicate for dispatching the
conditional branching of the {% if %} tag. when called, the function returns two values:

   1. the value returned by resolving the phrase
   2. an error message string if something went wrong [ie, an invalid variable].
      [note: if return value 2 is present, then its probably not safe to consider return
       value 1 useful]")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESS-IFEQUAL-ARGS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNPARSED-STRING" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCUMULATED-JAVASCRIPT-STRINGS*" :PACKAGE-NAME "DJULA" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEMI-PARSE-TAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-REST-OF-TAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-END-TAG" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TAG-NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "TOKENS" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION
     "returns NIL if a :TAG token with the name `TAG-NAME' can't be found in `TOKENS'.
Otherwise returns three values:

   1. a list of all the tokens up to that token
   2. a list of all tokens after that token
   3. T, indicating that `TAG-NAME' was found")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FIND-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a hashable key that uniquely identifies the named template.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FETCH-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the text of the template identified by the given key.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "FILE-STORE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION
     "Searches for template files on disk according to the given search path."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CURRENT-PATH" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The location of the most-recently fetched template.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SEARCH-PATH" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "User-provided list of template locations.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "FIND-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STORE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
       (:NAME "FILE-STORE" :PACKAGE-NAME "DJULA" :EXTERNALP T))
      (:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FETCH-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STORE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
       (:NAME "FILE-STORE" :PACKAGE-NAME "DJULA" :EXTERNALP T))
      (:NAME "KEY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-STORE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
     :DOCUMENTATION
     "The currently in-use template store.  Defaults to a FILE-STORE."
     :INITIAL-VALUE "(MAKE-INSTANCE 'DJULA:FILE-STORE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FETCH-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the text of a template fetched from the *CURRENT-STORE*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLURP" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-ENCODE-PATH" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATH" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-FOR-HTML" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Escapes the characters #\\<, #\\>, #\\', #\\\", and #\\& for HTML output.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-ENCODE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "URL-encodes a string using the external format EXTERNAL-FORMAT.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-DECODE" :PACKAGE-NAME "DJULA" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Decodes a URL-encoded STRING which is assumed to be encoded using
the external format EXTERNAL-FORMAT.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-FILTER-STRING" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-VARIABLE-PHRASE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-VARIABLE-CLAUSE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNPARSED-STRING" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "APPLY-KEYS/INDEXES" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
      (:NAME "KEYS/INDEXES" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-VARIABLE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)) :DOCUMENTATION
     "takes a variable `NAME' and returns:
   1. the value of `NAME'
   2. any error string generated by the lookup (if there is an error string then the
      lookup was unsuccessful)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOLVE-VARIABLE-PHRASE" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "takes a list starting wise a variable and ending with 0 or more keys or indexes [this
is a direct translation from the dot (.) syntax] and returns two values:

   1. the result [looking up the var and applying index/keys]
   2. an error string if something went wrond [note: if there is an error string then
the result probably shouldn't be considered useful.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ".CHECK-EXAMPLE-TABLE-PLIST" :PACKAGE-NAME "DJULA" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXAMPLE-TABLE-PLIST" :PACKAGE-NAME "DJULA" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "RENDER-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*TEMPLATE-SEARCH-PATH*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "COMPILE-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FRAGMENT-COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FILE-STORE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "COMPILE-EXAMPLE-TABLE-P" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*CURRENT-COMPILER*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FIND-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*USE-EXAMPLE-VALUES-P*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FETCH-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "URL-ENCODE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*TEMPLATE-EVAL*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FETCH-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*ALLOW-INCLUDE-ROOTS*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "COMPILE-TEMPLATE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*TEMPLATE-ROOT-FOLDER*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "DEF-TAG-COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "TRANSLATION-TABLE-P" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "HTML-ESCAPE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*TEMPLATE-STRING-IF-INVALID*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*CURRENT-STORE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "FIND-TEMPLATE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "TOPLEVEL-COMPILER" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "URL-DECODE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "COMPILE-TRANSLATION-TABLE" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*CURRENT-LANGUAGE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*CATCH-TEMPLATE-ERRORS-P*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "URL-ENCODE-PATH" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "*DEFAULT-LANGUAGE*" :PACKAGE-NAME "DJULA" :EXTERNALP T)
    (:NAME "EXAMPLE-TABLE-P" :PACKAGE-NAME "DJULA" :EXTERNALP T)))))
