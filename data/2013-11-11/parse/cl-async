
(:TYPE :SYSTEM :NAME "cl-async" :AUTHOR
 "Andrew Danger Lyon <orthecreedence@gmail.com>" :MAINTAINER NIL :VERSION
 "0.4.1" :LICENCE "MIT" :DESCRIPTION "Asynchronous operations for Common Lisp."
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("CFFI" "TRIVIAL-FEATURES" "CL-LIBEVENT2" "CL-ASYNC-BASE" "CL-ASYNC-UTIL"
  "CL-ASYNC-FUTURE" "BABEL" "CL-PPCRE" "TRIVIAL-GRAY-STREAMS" "PURI")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-ASYNC" :FULL-NAME "CL-ASYNC" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLE-DEBUG-MODE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Enable debug mode. As far as I can tell, this is undoable, so you may have to
   restart your CL implementation after calling if you want to disable it.

   NOTE: This appears to make libevent exit suddenly after creating a second
   event loop for some reason. I recommend *not* using this function until I
   figure out debug omde a bit more.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLE-THREADING-SUPPORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Enable threading support in libevent. This attempts to guess which threading
   function of libevent's to use and call it.

   Experimental, only supports pthreads or Windows.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-EVENT-LOOP-EXIT-CALLBACK" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "FN" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Add a function to be run when the event loop exits.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESS-EVENT-LOOP-EXIT-CALLBACKS" :PACKAGE-NAME "CL-ASYNC"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "run and clear out all event loop exit functions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-EVENT-LOOP-RUNNING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Return statistics about the current event loop.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUMP-EVENT-LOOP-STATUS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FILE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RETURN-AS-STRING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Dump the status of the event loop to a file. Good for debugging.
   
   If return-as-string is T, the file is read/deleted and the contents returned
   as a string. Note that this is the default behavior.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "START-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "START-FN" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FATAL-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "LOGGER-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "DEFAULT-EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "CATCH-APP-ERRORS" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CATCH-APP-ERRORS-SUPPLIED-P" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Simple wrapper function that starts an event loop which runs the given
   callback, most likely to init your server/client.

   Supports setting up a callback for fatal errors. In case you don't want
   libevent to just exit your app for you.

   Supports setting up a logging callback for your application.

   *PLEASE NOTE* Using libevent functions from within the logging callback can
   lead to strange bugs and problems. Don't do it.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FATAL-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "LOGGER-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "DEFAULT-EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       ((:NAME "CATCH-APP-ERRORS" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "CATCH-APP-ERRORS-SUPPLIED-P" :PACKAGE-NAME "CL-ASYNC"
         :EXTERNALP NIL)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Makes starting an event loop a tad less annoying. I really couldn't take
   typing out `(start-event-loop (lambda () ...) ...) every time. Example:

     (with-event-loop (:catch-app-errors t)
       (do-something-one-does-when-an-event-loop-is-running))

   See how nice that is?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXIT-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Exit the event loop if running.")
    (:TYPE :CLASS :SYMBOL (:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Wraps a C libevent event object."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EVENT-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FREE-CALLBACK" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "EVENT-FREE-CALLBACK" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FREED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "EVENT-FREED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS
       ((:NAME "EVENT-FREED-P" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-EVENT-UNFREED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Checks that an event being operated on is not freed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FREE-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :DOCUMENTATION
     "Free a cl-async event object and any resources it uses. It *is* safe to free
   a pending/active event.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :DOCUMENTATION
     "Remove a pending event from the event loop. Returns t on success, nil on
   failure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "ACTIVATE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Add an event to its specified event loop (make it pending). If given a
   :timeout (in seconds) the event will fire after that amount of time, unless
   it's removed or freed. If :activate is true and the event has no timeout,
   the event will be activated directly without being added to the event loop,
   and its callback(s) will be fired.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELAY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CALLBACK" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Run a function, asynchronously, after the specified amount of seconds. An
   event loop must be running for this to work.
   
   If time is nil, callback is still called asynchronously, but is queued in the
   event loop with no delay.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WATCH-FD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "TIMEOUT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Run a function, asynchronously, when the specified file descriptor is
   ready for write or read operations. An event loop must be running for
   this to work.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FD-ADD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "TIMEOUT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Deprecated. Backwards compatible function wrapping watch-fd.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WINDOWS-LOCAL-HOSTS*" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :DOCUMENTATION "Holds all hosts entries from the Windows hosts file."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SCANNER-PARSE-HOSTS-ENTRIES*" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "A regex for matching hosts entries in a windows hosts file."
     :INITIAL-VALUE
     "(CL-PPCRE:CREATE-SCANNER \"[ \\\\s\\\\t\\\\r\\\\n]+\" :CASE-INSENSITIVE-MODE T)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POPULATE-WINDOWS-LOCAL-HOSTS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORCE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Grab and store all entries from the windows hosts file. If we already have
   the data, skip (unless :force t is passed).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DNS-BASE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Grabs the current DNS base (or instantiates if it doesn't exist) and also
   tracks how many open DNS base queries there are.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FREE-DNS-BASE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DNS-BASE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Free a dns base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RELEASE-DNS-BASE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Decrements the DNS base reference counter. If there are no more references,
   frees the DNS base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "START-DNS-LOGGING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LOG-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Send all DNS messages to log-cb. Optionally takes an event-cb to catch errors
   that occur during log processing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STOP-DNS-LOGGING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Stop logging DNS messages through the log-cb passed to start-dns-logging.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DNS-LOOKUP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HOST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "RESOLVE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FAMILY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "*DEFAULT-LOOKUP-TYPE*" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP
        T)))
     :DOCUMENTATION
     "Asynchronously lookup a DNS address. Note that if an IP address is passed,
   the lookup happens synchronously. If a lookup is synchronous (and instant)
   this returns T, otherwise nil (lookup happening in background). Either way
   the resolve-cb is called with the lookup info (so always assume this is
   async).")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "Wraps around a libevent bufferevent socket."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "SOCKET-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "SOCKET-DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "SOCKET-CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIRECTION" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "SOCKET-DIRECTION" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DRAIN-READ-BUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "SOCKET-DRAIN-READ-BUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Wraps around a libevent connection listener." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "TCP-SERVER-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "TCP-SERVER-CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "TCP-SERVER-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DATA-POINTER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TCP-SERVER-DATA-POINTER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-LAST-TCP-ERR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Since libevent provides a macro but not a function for getting the last error
   code, we have to essentially rebuild that macro here.

   NOTE: As libevent says, this function cannot be considered idempotent. In
   other words, it can become hideously turgid whe...what's that? OH IDEMpotent,
   that makes more sense. Yes, calling it more than once may result in different
   values returned. So, call once and save the result until the next time an
   error happens.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-SOCKET-OPEN" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION
     "Throw a socket-closed condition if given a socket that's closed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOCKET-CLOSED-P" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Return whether a socket is closed or not.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :DOCUMENTATION
     "Free a socket (bufferevent) and clear out all associated data.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
       (:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION
     "Close and free a socket and all of it's underlying structures.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSE-TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Closes a TCP server. If already closed, does nothing.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
       (:NAME "TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SOCKET-TIMEOUTS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "READ-SEC" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-SEC" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOCKET-IS-BUFFEREVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a pointer to a libevent socket (bufferevent), set the read/write
   timeouts on the bufferevent.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "READ" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WRITE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Enable read/write monitoring on a socket. If :read or :write are nil, they
   are not disabled, but rather just not enabled.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISABLE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "READ" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WRITE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Disable read/write monitoring on a socket. If :read or :write are nil, they
   are not enabled, but rather just not disabled.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-SOCKET-DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "DATA-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOCKET-IS-EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Read the data out of a bufferevent (or directly, an evbuffer).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-BYTES-FROM-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "NUM-BYTES" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOCKET-IS-EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Read num-bytes out of a socket's buffer and return them. If the evbuffer has
   less bytes than num-bytes, returns nil (ie, try again later).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-TO-EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Writes data directly to evbuffer.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-SOCKET-DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Write data into a cl-async socket. Allows specifying read/write/event
   callbacks. Any callback left nil will use that current callback from the
   socket (so they only override when specified, otherwise keep the current
   callback)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DRAIN-EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EVBUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Grab all data in an evbuffer and put it into a byte array (returned).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INIT-INCOMING-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BEV" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "CALLBACKS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Called by the tcp-accept-cb when an incoming connection is detected. Sets up
   a socket between the client and the server along with any callbacks the
   server has attached to it. Returns the cl-async socket object created.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INIT-TCP-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      (:NAME "CONNECT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "READ-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "WRITE-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "DONT-DRAIN-READ-BUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DONT-DRAIN-READ-BUFFER-SUPPLIED-P" :PACKAGE-NAME "CL-ASYNC"
        :EXTERNALP NIL)))
     :DOCUMENTATION "Initialize an async socket, but do not connect it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONNECT-TCP-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOCKET/STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "HOST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Connect a tcp socket initialized with init-tcp-socket.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TCP-CONNECT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HOST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONNECT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "READ-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "WRITE-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "DONT-DRAIN-READ-BUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DONT-DRAIN-READ-BUFFER-SUPPLIED-P" :PACKAGE-NAME "CL-ASYNC"
        :EXTERNALP NIL)))
     :DOCUMENTATION
     "Open a TCP connection asynchronously. Optionally send data out once connected
   via the :data keyword (can be a string or byte array).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TCP-SEND" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HOST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WRITE-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "READ-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "WRITE-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      ((:NAME "DONT-DRAIN-READ-BUFFER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DONT-DRAIN-READ-BUFFER-SUPPLIED-P" :PACKAGE-NAME "CL-ASYNC"
        :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "DEPRECATED, exists for backwards compatibility. Use tcp-connect.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "BIND-ADDRESS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "READ-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONNECT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "BACKLOG" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) -1)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Start a TCP listener on the current event loop. Returns a tcp-server class
   which can be closed with close-tcp-server")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "TRIVIAL-GRAY-STREAM-MIXIN" :PACKAGE-NAME "TRIVIAL-GRAY-STREAMS"
       :EXTERNALP T))
     :DOCUMENTATION
     "The underlying class for async streams. Wraps a tcp socket class."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :ACCESSORS
       ((:NAME "STREAM-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "FUNDAMENTAL-BINARY-OUTPUT-STREAM" :PACKAGE-NAME
       "TRIVIAL-GRAY-STREAMS" :EXTERNALP T))
     :DOCUMENTATION "Async output stream." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "FUNDAMENTAL-BINARY-INPUT-STREAM" :PACKAGE-NAME
       "TRIVIAL-GRAY-STREAMS" :EXTERNALP T))
     :DOCUMENTATION "Async input stream." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "ASYNC-IO-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Async stream for both input and output." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-OUTPUT-TYPE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "This is always a binary stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-ELEMENT-TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "This is always a binary stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPEN-STREAM-P" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION
     "Test the underlying socket to see if this stream is open.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ABORT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Close the stream. If aborting, attempt to clear out remaining data in the
   buffers before closing (is this really needed?)")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-CLEAR-OUTPUT" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "Attempt to clear the output buffer of an output stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-FORCE-OUTPUT" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION
     "Force an output stream to send its data to the underlying fd.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-FINISH-OUTPUT" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "Really, since we're async, same as force-output.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-WRITE-BYTE" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
      (:NAME "BYTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Write one byte to the underlying socket.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-WRITE-SEQUENCE" :PACKAGE-NAME "TRIVIAL-GRAY-STREAMS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Write a sequence of bytes to the underlying socket.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-CLEAR-INPUT" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "Attempt to clear the input buffer of an input stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-READ-BYTE" :PACKAGE-NAME "SB-GRAY" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))
     :DOCUMENTATION "Read one byte from the underlying socket.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STREAM-READ-SEQUENCE" :PACKAGE-NAME "TRIVIAL-GRAY-STREAMS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Attempt to read a sequence of bytes from the underlying socket.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "HTTP-REQUEST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "When any request comes in to the HTTP listener, it is parsed into the slots
     of this class, which is then handed directly to the application's request
     callback."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REQ-OBJ" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Holds the libevent evhttp request foreign pointer. Can be used to get more
      information from the request if needed via the libevent evhttp_* functions
      if needed, but for the most part it is just used to send the response back
      to the client asynchronously after the app is done processing the request.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Holds the http-server class that this request was accepted from. Private.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "HTTP-REQUEST-METHOD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Hold the HTTP request method (GET, POST, PUT, DELETE, etc etc etc)")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "URI" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-URI" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Holds the entire URI from the client request (decoded)")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESOURCE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-RESOUCE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The (string) resource the request is accessing. So if the client asked for
          /documents/doc-18?pretty-print=1&format=json
      the resource would be
          /documents/doc-18
      Note the lack of querystring. The resource is derived from uri, so it is
      decoded.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "QUERYSTRING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-QUERYSTRING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
         T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Holds the (string) entire querystring from the request, unparsed. It is
      derived from uri, so it's decoded.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "An alist of headers:
          '((\"Content-Type\" . \"text/html\")
            (\"Accept\" . \"*/*\"))
      Headers are passed directly from libevent to the app without any extra
      processing")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-REQUEST-BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The body grabbed from the request. This can be form data, a posted file,
      etc. It is not processed in any way and the application must be able to
      deal with the different request body types that come through.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "REQUEST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
       (:NAME "HTTP-REQUEST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
      (:NAME "S" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Wraps around a libevent HTTP listener." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-SERVER-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :ACCESSORS
       ((:NAME "HTTP-SERVER-SOCK" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HTTP-SERVER-CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OUTGOING-HTTP-COUNT*" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INCOMING-HTTP-COUNT*" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FREE-HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Frees an HTTP server (once).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE-HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T))
     :DOCUMENTATION "Closes an HTTP server. If already closed, does nothing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-METHOD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ENUM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)) :DOCUMENTATION
     "Given a libevent EVHTTP_REQ enum key word, return the appropriate method
   string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-METHOD-REVERSE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Given a method string, return the appropriate enum value for the libevent
   type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HTTP-GET-HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "HTTP-HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Pull the headers out of an HTTP request as a plist.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOOKUP-STATUS-TEXT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STATUS-CODE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the HTTP standard text that goes along with a status code.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HTTP-CLIENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "URI" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "REQUEST-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "GET" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Asynchronously contact an HTTP server. Allows passing of method, headers, and
   body. If host is not present in the headers, it is set from the hostname (if
   given) in the URI. Also supports setting a timeout.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "BIND" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "REQUEST-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Start an HTTP server. If `bind` is nil, it bind to 0.0.0.0. Returns a wrapper
   around the HTTP server that allows the app to close it via close-http-server.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HTTP-RESPONSE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HTTP-REQUEST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STATUS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) 200)
      (:NAME "HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      ((:NAME "BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) ""))
     :DOCUMENTATION
     "Called by the server when a request has been finished and a response is ready
   to be sent to the client.

   Takes the original http-request object passed into the request callback and
   optional keywords:

   :status   The HTTP status code to send back in the response
   :body     The content body to send back to the client (byte array or string)
   :headers  A list if (key . val) pairs to send back as headers:
      '((\"Content-Type\" . \"text/html\") ...)

   This function also does the cleanup needed for the request. So basically,
   every HTTP request should end with this function.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGHUP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "1")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGINT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "2")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGQUIT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "3")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGILL+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "4")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGTRAP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "5")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGABRT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "6")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGEMT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "7")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGFPE+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "8")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGKILL+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "9")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGBUS+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "10")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGSEGV+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "11")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGSYS+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "12")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGPIPE+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "13")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGALRM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "14")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGTERM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "15")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGURG+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "16")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGSTOP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "17")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGTSTP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "18")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGCONT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "19")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGCHLD+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "20")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGTTIN+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "21")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGTTOU+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "22")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGIO+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION NIL
     :INITIAL-VALUE "23")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGXCPU+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "24")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGXFSZ+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "25")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGVTALRM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "26")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGPROF+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "27")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGWINCH+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "28")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGINFO+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "29")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGUSR1+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "30")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SIGUSR2+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "31")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGNAL-SYM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SIGNO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)) :DOCUMENTATION
     "Does nothing. Can be used in the future to prevent collissions in the data/
   callback space if needed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FREE-SIGNAL-HANDLER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SIGNO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION "Clear a signal handler and unbind it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-SIGNAL-HANDLERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Clear all bound signal handlers. Great for cleaning up when exiting an app.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-LISP-SIGNAL-HANDLER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SIGNO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "FN" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Replace the current handler for the signal number under signo, and return a
   pointer to the handler that is being replaced.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGNAL-HANDLER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SIGNO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "SIGNAL-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EVENT-CB" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP NIL))
     :DOCUMENTATION
     "Setup a one-time signal handler for the given signo. This also sets up a
   lisp signal handler, so if a signal comes through while lisp is running
   instead of the event loop, it will run the same callback. All signal handlers
   are restored on event loop exit."))
   :EXTERNAL-SYMBOLS
   ((:NAME "OCTET-VECTOR" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGFPE+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGTRAP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "REMOVE-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ADD-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "DNS-LOOKUP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "FD-ADD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SOCKET-CLOSED-P" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "CONNECT-TCP-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "DISABLE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "FREE-SIGNAL-HANDLER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGVTALRM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGPROF+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SOCKET-DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+AF-UNIX+" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "DUMP-EVENT-LOOP-STATUS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-ERRCODE" :PACKAGE-NAME "CL-ASYNC-BASE" :EXTERNALP T)
    (:NAME "+SIGUSR1+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-METHOD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGABRT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGBUS+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGUSR2+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "INIT-TCP-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "START-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-SEND" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "WRITE-SOCKET-DATA" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "CLEAR-SIGNAL-HANDLERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EXIT-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-URI" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "CLOSE-TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGINFO+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-TIMEOUT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SIGNAL-HANDLER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-RESOURCE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGXFSZ+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-QUERYSTRING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-ACCEPT-ERROR-LISTENER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGQUIT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-CLIENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-FREED-P" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGIO+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-INFO" :PACKAGE-NAME "CL-ASYNC-BASE" :EXTERNALP T)
    (:NAME "BYTES" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "HTTP-ERROR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ADD-EVENT-LOOP-EXIT-CALLBACK" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP
     T)
    (:NAME "TCP-REFUSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "STREAM-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-ERROR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-ACCEPT-ERROR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SET-SOCKET-TIMEOUTS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-RESPONSE" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGCHLD+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-ACCEPT-ERROR-TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGWINCH+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "SOCKET-CLOSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ASYNC-OUTPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-ERROR" :PACKAGE-NAME "CL-ASYNC-BASE" :EXTERNALP T)
    (:NAME "FREE-EVENT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGSTOP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REFUSED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGHUP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ENABLE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-SERVER-BIND-ERROR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-HEADERS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-BODY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "OCTET" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "+SIGEMT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGURG+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+AF-INET6+" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "WITH-EVENT-LOOP" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "START-DNS-LOGGING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ASYNC-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "EVENT-ERRMSG" :PACKAGE-NAME "CL-ASYNC-BASE" :EXTERNALP T)
    (:NAME "EVENT-FREED" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "DELAY" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "CLOSE-HTTP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGTTOU+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "STATS" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-SERVER" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGTERM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "CLOSE-SOCKET" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGILL+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGKILL+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGXCPU+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGINT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-EOF" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+AF-INET+" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "TCP-CONNECT" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+AF-UNSPEC+" :PACKAGE-NAME "CL-ASYNC-UTIL" :EXTERNALP T)
    (:NAME "SOCKET-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-INFO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "STOP-DNS-LOGGING" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGTTIN+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGALRM+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ASYNC-IO-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGSYS+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "HTTP-REQUEST-C" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "ASYNC-INPUT-STREAM" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGSEGV+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "TCP-INFO" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGCONT+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "WATCH-FD" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGTSTP+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "+SIGPIPE+" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)
    (:NAME "DNS-ERROR" :PACKAGE-NAME "CL-ASYNC" :EXTERNALP T)))))
