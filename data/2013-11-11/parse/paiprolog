
(:TYPE :SYSTEM :NAME "paiprolog" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME ".AUXFNS" :FULL-NAME "PAIPROLOG.AUXFNS" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "ONCE-ONLY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VARIABLES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the code built by BODY.  If any of VARIABLES
  might have side effects, they are evaluated once and stored
  in temporary variables that are then passed to BODY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIDE-EFFECT-FREE?" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Is exp a constant, variable, or function,
  or of the form (THE type x) where x is side-effect-free?")
    (:TYPE :MACRO :SYMBOL
     (:NAME "FUNCALL-IF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "ARG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "READ-TIME-CASE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FIRST-CASE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-CASES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Do the first case, where normally cases are
  specified with #+ or possibly #- marks.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REST2" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "The rest of a list after the first TWO elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Does item occur anywhere in tree?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STARTS-WITH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Is x a list whose first element is x?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-ALL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYWORD-ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "TEST-NOT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Find all those elements of sequence that match item,
  according to the keywords.  Doesn't alter sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARTITION-IF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return 2 values: elements of list that satisfy pred,
  and elements that don't.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-ADD" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "EXPS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IF-NIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "For example, (maybe-add 'and exps t) returns
  t if exps is nil, exps if there is only one,
  and (and exp1 exp2...) if there are several exps.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-REF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "INDEX" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Return code that indexes into a sequence, using
  the pop-lists/aref-vectors strategy.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-SET-FILL-POINTER" :PACKAGE-NAME "PAIPROLOG.AUXFNS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEW-LENGTH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "If this is an array with a fill pointer, set it to
  new-length, if that is longer than the current length.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Concatenate symbols or strings to form an interned symbol")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEW-SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Concatenate symbols or strings to form an uninterned symbol")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAST1" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Return the last element (not last cons cell) of list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPEND" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Append the results of calling fn on each element of list.
  Like mapcon, but uses append instead of nconc.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MKLIST" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "If x is a list return it, otherwise return the list of x")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLATTEN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Get rid of imbedded lists (to one level only).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANDOM-ELT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Pick a random element out of a sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMBER-EQUAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPOSE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FUNCTIONS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DBG-IDS*" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
     :DOCUMENTATION "Identifiers used by dbg" :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DBG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "FORMAT-STRING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Print debugging info if (DEBUG ID) has been specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEBUG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IDS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Start dbg output on the given ids.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNDEBUG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IDS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Stop dbg on the ids.  With no ids, stop dbg altogether.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DBG-INDENT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "INDENT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "FORMAT-STRING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Print indented debugging info if (DEBUG ID) has been specified.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "FAIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "NO-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(IF (BOUNDP 'PAIPROLOG.AUXFNS:NO-BINDINGS)
    (SYMBOL-VALUE 'PAIPROLOG.AUXFNS:NO-BINDINGS)
    '((T . T)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAT-MATCH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       (:NAME "NO-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)))
     :DOCUMENTATION
     "Match pattern against input in the context of the bindings")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-VARIABLE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Does VAR match input?  Uses (or updates) and returns bindings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "VAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINDING-VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Get the variable part of a single binding.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINDING-VAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Get the value part of a single binding.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Find a (variable . value) pair in a binding list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOOKUP" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Get the value part (for var) from a binding list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTEND-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "VAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Add a (var . value) pair to a binding list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VARIABLE-P" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Is x a variable (a symbol beginning with `?')?")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFUN-MEMO" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Define a memoized function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMO" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Return a memo-function of fn.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMOIZE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN-NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Replace fn-name's global definition with a memoized version.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-MEMOIZE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FN-NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Clear the hash table from a memo function.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DELAY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPUTED?" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DELAY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "VALUE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM587" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "COMPUTED?" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM588" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DELAY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "A computation that can be executed later by FORCE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DELAY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T))
     :DOCUMENTATION
     "Do a delayed computation, or fetch its previously-computed value.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFRESOURCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONSTRUCTOR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      ((:NAME "INITIAL-COPIES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       0)
      ((:NAME "SIZE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       ((:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "INITIAL-COPIES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP
         NIL)
        10)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RESOURCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       (:NAME "RESOURCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PROTECT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Execute body with VAR bound to an instance of RESOURCE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUEUE-CONTENTS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-QUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Build a new queue, with no elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENQUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Insert item at the end of the queue.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEQUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Remove an item from the front of the queue.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FRONT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMPTY-QUEUE-P" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUEUE-NCONC" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "Q" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Add the elements of LIST to the end of the queue.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORT*" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "PRED" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Sort without altering the sequence")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REUSE-CONS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "X-Y" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return (cons x y), or reuse x-y if it is equal to (cons x y)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LENGTH=1" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Is x a list of length 1?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REST3" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "The rest of a list after the first THREE elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIQUE-FIND-IF-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FOUND-SO-FAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Return a list of leaves of tree satisfying predicate,
  with duplicates removed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-IF-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Does predicate apply to any atom in the tree?")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-ENUMERATED-TYPE" :PACKAGE-NAME "PAIPROLOG.AUXFNS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELEMENTS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "Represent an enumerated type with integers 0-n.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOT-NULL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-OR-NIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "The first element of x if it is a list; else nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-OR-SELF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION "The first element of x, if it is a list; else x itself.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFMETHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFMETHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-INTO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "RESULT-SEQUENCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQUENCES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-INTO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "RESULT-SEQUENCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEQUENCES" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPLEMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a new function that returns T whenever FUNCTION returns NIL and
   NIL whenever FUNCTION returns non-NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPLEMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a new function that returns T whenever FUNCTION returns NIL and
   NIL whenever FUNCTION returns non-NIL.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COMPILATION-UNIT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OPTIONS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Affects compilations that take place within its dynamic extent. It is
intended to be eg. wrapped around the compilation of all files in the same system.

Following options are defined:

  :OVERRIDE Boolean-Form
      One of the effects of this form is to delay undefined warnings until the
      end of the form, instead of giving them at the end of each compilation.
      If OVERRIDE is NIL (the default), then the outermost
      WITH-COMPILATION-UNIT form grabs the undefined warnings. Specifying
      OVERRIDE true causes that form to grab any enclosed warnings, even if it
      is enclosed by another WITH-COMPILATION-UNIT.

  :POLICY Optimize-Declaration-Form
      Provides dynamic scoping for global compiler optimization qualities and
      restrictions, limiting effects of subsequent OPTIMIZE proclamations and
      calls to SB-EXT:RESTRICT-COMPILER-POLICY to the dynamic scope of BODY.

      If OVERRIDE is false, specified POLICY is merged with current global
      policy. If OVERRIDE is true, current global policy, including any
      restrictions, is discarded in favor of the specified POLICY.

      Supplying POLICY NIL is equivalent to the option not being supplied at
      all, ie. dynamic scoping of policy does not take place.

      This option is an SBCL-specific experimental extension: Interface
      subject to change.

  :SOURCE-NAMESTRING Namestring-Form
      Attaches the value returned by the Namestring-Form to the internal
      debug-source information as the namestring of the source file. Normally
      the namestring of the input-file for COMPILE-FILE is used: this option
      can be used to provide source-file information for functions compiled
      using COMPILE, or to override the input-file of COMPILE-FILE.

      If both an outer and an inner WITH-COMPILATION-UNIT provide a
      SOURCE-NAMESTRING, the inner one takes precedence. Unaffected
      by :OVERRIDE.

      This is an SBCL-specific extension.

  :SOURCE-PLIST Plist-Form
      Attaches the value returned by the Plist-Form to internal debug-source
      information of functions compiled in within the dynamic extent of BODY.

      Primarily for use by development environments, in order to eg. associate
      function definitions with editor-buffers. Can be accessed using
      SB-INTROSPECT:DEFINITION-SOURCE-PLIST.

      If an outer WITH-COMPILATION-UNIT form also provide a SOURCE-PLIST, it
      is appended to the end of the provided SOURCE-PLIST. Unaffected
      by :OVERRIDE.

      This is an SBCL-specific extension.

Examples:

  ;; Prevent proclamations from the file leaking, and restrict
  ;; SAFETY to 3 -- otherwise uses the current global policy.
  (with-compilation-unit (:policy '(optimize))
    (restrict-compiler-policy 'safety 3)
    (load \"foo.lisp\"))

  ;; Using default policy instead of the current global one,
  ;; except for DEBUG 3.
  (with-compilation-unit (:policy '(optimize debug)
                          :override t)
    (load \"foo.lisp\"))

  ;; Same as if :POLICY had not been specified at all: SAFETY 3
  ;; proclamation leaks out from WITH-COMPILATION-UNIT.
  (with-compilation-unit (:policy nil)
    (declaim (optimize safety))
    (load \"foo.lisp\"))
")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COMPILATION-UNIT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OPTIONS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Affects compilations that take place within its dynamic extent. It is
intended to be eg. wrapped around the compilation of all files in the same system.

Following options are defined:

  :OVERRIDE Boolean-Form
      One of the effects of this form is to delay undefined warnings until the
      end of the form, instead of giving them at the end of each compilation.
      If OVERRIDE is NIL (the default), then the outermost
      WITH-COMPILATION-UNIT form grabs the undefined warnings. Specifying
      OVERRIDE true causes that form to grab any enclosed warnings, even if it
      is enclosed by another WITH-COMPILATION-UNIT.

  :POLICY Optimize-Declaration-Form
      Provides dynamic scoping for global compiler optimization qualities and
      restrictions, limiting effects of subsequent OPTIMIZE proclamations and
      calls to SB-EXT:RESTRICT-COMPILER-POLICY to the dynamic scope of BODY.

      If OVERRIDE is false, specified POLICY is merged with current global
      policy. If OVERRIDE is true, current global policy, including any
      restrictions, is discarded in favor of the specified POLICY.

      Supplying POLICY NIL is equivalent to the option not being supplied at
      all, ie. dynamic scoping of policy does not take place.

      This option is an SBCL-specific experimental extension: Interface
      subject to change.

  :SOURCE-NAMESTRING Namestring-Form
      Attaches the value returned by the Namestring-Form to the internal
      debug-source information as the namestring of the source file. Normally
      the namestring of the input-file for COMPILE-FILE is used: this option
      can be used to provide source-file information for functions compiled
      using COMPILE, or to override the input-file of COMPILE-FILE.

      If both an outer and an inner WITH-COMPILATION-UNIT provide a
      SOURCE-NAMESTRING, the inner one takes precedence. Unaffected
      by :OVERRIDE.

      This is an SBCL-specific extension.

  :SOURCE-PLIST Plist-Form
      Attaches the value returned by the Plist-Form to internal debug-source
      information of functions compiled in within the dynamic extent of BODY.

      Primarily for use by development environments, in order to eg. associate
      function definitions with editor-buffers. Can be accessed using
      SB-INTROSPECT:DEFINITION-SOURCE-PLIST.

      If an outer WITH-COMPILATION-UNIT form also provide a SOURCE-PLIST, it
      is appended to the end of the provided SOURCE-PLIST. Unaffected
      by :OVERRIDE.

      This is an SBCL-specific extension.

Examples:

  ;; Prevent proclamations from the file leaking, and restrict
  ;; SAFETY to 3 -- otherwise uses the current global policy.
  (with-compilation-unit (:policy '(optimize))
    (restrict-compiler-policy 'safety 3)
    (load \"foo.lisp\"))

  ;; Using default policy instead of the current global one,
  ;; except for DEBUG 3.
  (with-compilation-unit (:policy '(optimize debug)
                          :override t)
    (load \"foo.lisp\"))

  ;; Same as if :POLICY had not been specified at all: SAFETY 3
  ;; proclamation leaks out from WITH-COMPILATION-UNIT.
  (with-compilation-unit (:policy nil)
    (declaim (optimize safety))
    (load \"foo.lisp\"))
"))
   :EXTERNAL-SYMBOLS
   ((:NAME "MKLIST" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "COMPOSE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "READ-TIME-CASE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "STARTS-WITH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "SIDE-EFFECT-FREE?" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MAKE-BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MEMOIZE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "UNIQUE-FIND-IF-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS"
     :EXTERNALP T)
    (:NAME "DEFUN-MEMO" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FAIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FORCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "GET-BINDING" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DELAY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MEMBER-EQUAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MAYBE-SET-FILL-POINTER" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP
     T)
    (:NAME "LOOKUP" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "REST2" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "RANDOM-ELT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "QUEUE-NCONC" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "CLEAR-MEMOIZE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIND-ALL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "ONCE-ONLY" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "LAST1" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIND-ALL-IF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "PAT-MATCH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DEQUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DEFINE-ENUMERATED-TYPE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP
     T)
    (:NAME "EXTEND-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DEFRESOURCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MAPPEND" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "BINDING-VAR" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "REST3" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DEBUG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "SORT*" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "ENQUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MATCH-VARIABLE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "NEW-SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MAKE-QUEUE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "NOT-NULL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIND-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "PARTITION-IF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DBG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FLATTEN" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FUNCALL-IF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIND-IF-ANYWHERE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "LENGTH=1" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "REUSE-CONS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MAYBE-ADD" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "NO-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "BINDING-VAL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "MEMO" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIRST-OR-SELF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "UNDEBUG" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FRONT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "VARIABLE-P" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "SEQ-REF" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "EMPTY-QUEUE-P" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "DBG-INDENT" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "WITH-RESOURCE" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "FIRST-OR-NIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "QUEUE-CONTENTS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "PAIPROLOG" :FULL-NAME "PAIPROLOG" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "VARIABLE-P" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Is x a variable (a symbol beginning with `?')?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAT-MATCH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       (:NAME "NO-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)))
     :DOCUMENTATION
     "Match pattern against input in the context of the bindings")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-PATTERN-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Is this a segment-matching pattern like ((?* var) . pat)?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGLE-PATTERN-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Is this a single-matching pattern?
  E.g. (?is x predicate) (?and . patterns) (?or . patterns).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-MATCHER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Call the right function for this kind of segment pattern.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGLE-MATCHER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Call the right function for this kind of single pattern.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-MATCH-FN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Get the segment-match function for x, 
  if it is a symbol that has one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGLE-MATCH-FN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Get the single-match function for x, 
  if it is a symbol that has one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-IS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAR-AND-PRED" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Succeed and bind var if the input satisfies pred,
  where var-and-pred is the list (var pred).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-AND" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATTERNS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Succeed if all the patterns match the input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-OR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATTERNS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Succeed if any one of the patterns match the input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-NOT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATTERNS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Succeed if none of the patterns match the input.
  This will never bind any variables.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-MATCH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Match the segment pattern ((?* var) . pat) against input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-MATCH-POS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PAT1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the first position that pat1 could possibly match input,
  starting at position start.  If pat1 is non-constant, then just
  return start.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-MATCH+" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Match one or more elements of input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEGMENT-MATCH?" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Match zero or one element of input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Test an arbitrary expression involving variables.
  The pattern looks like ((?if code) . rest).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAT-MATCH-ABBREV" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
      (:NAME "EXPANSION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define symbol as a macro standing for a pat-match pattern.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-PAT-MATCH-ABBREV" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PAT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Expand out all pattern matching abbreviations in pat.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RULE-BASED-TRANSLATOR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "RULES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MATCHER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PAT-MATCH" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)))
      ((:NAME "RULE-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "RULE-THEN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "ACTION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SUBLIS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Find the first rule in rules that matches input,
  and apply the action to that rule.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OCCURS-CHECK*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :DOCUMENTATION "Should we do the occurs check?" :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       (:NAME "NO-BINDINGS" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)))
     :DOCUMENTATION "See if x and y match with given bindings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFY-VARIABLE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Unify var with x, using (and maybe extending) bindings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OCCURS-CHECK" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Does var occur anywhere inside x?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBST-BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Substitute the value of variables in bindings into x,
  taking recursively bound variables into account.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFIER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return something that unifies with both x and y (or fail).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLAUSE-HEAD" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLAUSE-BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CLAUSES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PRED" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RELATION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "The arguments of a relation")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DB-PREDICATES*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :DOCUMENTATION "a list of all predicates stored in the database."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL (:NAME "<-" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION "Add a clause to the data base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)) :DOCUMENTATION
     "Add a clause to the data base, indexed by head's predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-DB" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "remove all clauses (for all predicates) from the data base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "remove the clauses for a single predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RENAME-VARIABLES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "replace all variables in x with new ones.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIQUE-FIND-ANYWHERE-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FOUND-SO-FAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "return a list of leaves of tree satisfying predicate,
  with duplicates removed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-ANYWHERE-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "TREE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "does predicate apply to any atom in the tree?")
    (:TYPE :MACRO :SYMBOL (:NAME "?-" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROVE-ALL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Find a solution to the conjunction of goals.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROVE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "OTHER-GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Return a list of possible solutions to goal.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-LEVEL-PROVE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Prove the list of goals by compiling and calling it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHOW-PROLOG-VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "OTHER-GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Print each variable with its binding.
  Then ask the user if more solutions are desired.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTINUE-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Ask user if we should continue looking for solutions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VARIABLES-IN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return a list of all the variables in EXP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NON-ANON-VARIABLE-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-?-VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Replace any ? within exp with a var of the form ?123.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "UNBOUND" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "(IF (BOUNDP 'PAIPROLOG::UNBOUND)
    (SYMBOL-VALUE 'PAIPROLOG::UNBOUND)
    \"Unbound\")")
    (:TYPE :STRUCT :SYMBOL (:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BINDING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "BINDING" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "UNBOUND" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOUND-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEREF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Follow pointers for bound variables.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFY!" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Destructively unify two expressions")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEPTH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRAIL*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "(MAKE-ARRAY 200 :FILL-POINTER 0 :ADJUSTABLE T)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-BINDING!" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Set var's binding to value, after saving the variable
  in the trail.  Always returns t.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNDO-BINDINGS!" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OLD-TRAIL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Undo all bindings back to a given point in the trail.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*VAR-COUNTER*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :STRUCT :SYMBOL (:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BINDING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL (:NAME "?" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT131" :PACKAGE-NAME NIL :EXTERNALP NIL)
       (:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
      (:NAME "STREAM132" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROLOG-COMPILE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CLAUSES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "GET-CLAUSES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
        (:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T))))
     :DOCUMENTATION
     "Compile a symbol; make a separate function for each arity.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLAUSES-WITH-ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLAUSES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Return all clauses whose head has given arity.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RELATION-ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RELATION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "The number of arguments to a relation.
  Example: (relation-arity '(p a b c)) => 3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "The arguments of a relation")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PARAMETERS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Return the list (?arg1 ?arg2 ... ?arg-arity)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
      (:NAME "ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Return the symbol: symbol/arity")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-=" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-CALL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Compile a call to a prolog predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROLOG-COMPILER-MACRO" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Fetch the compiler macro for a Prolog predicate.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-PROLOG-COMPILER-MACRO" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "ARGLIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Define a compiler macro for Prolog.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HAS-VARIABLE-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Is there a variable anywhere in the expression x?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPER-LISTP" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Is x a proper (non-dotted) list?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-ADD-UNDO-BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPILED-EXPS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Undo any bindings that need undoing.
  If there are any, bind the trail before we start.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BIND-UNBOUND-VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARAMETERS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "If there are any variables in exp (besides the parameters)
  then bind them to new vars.")
    (:TYPE :MACRO :SYMBOL (:NAME "<-" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION "Add a clause to the data base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ANONYMOUS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ANON-VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       ((:NAME "ANONYMOUS-VARIABLES-IN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP
         NIL)
        (:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Replace variables that are only used once with ?.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANONYMOUS-VARIABLES-IN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TREE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a list of all variables that occur only once in tree.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANON-VARS-IN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "SEEN-ONCE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "SEEN-MORE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Walk the data structure TREE, returning a list of variabless
   seen once, and a list of variables seen more than once.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-UNIFY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Return 2 values: code to test if x and y unify,
  and a new binding list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "THEN-PART" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Compile a Lisp IF form. No else-part allowed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-UNIFY-VARIABLE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "X is a variable, and Y may be.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BIND-VARIABLES-IN" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Bind all variables in exp to themselves, and add that to
  bindings (except for variables already bound).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FOLLOW-BINDING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Get the ultimate binding of var according to bindings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-ARG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ARG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Generate code for an argument to a goal in the body.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BIND-NEW-VARIABLES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extend bindings to include any unbound variables in goal.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SELF-CONS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARMS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Transform away the head, and compile the resulting body.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNCOMPILED*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :DOCUMENTATION "Prolog symbols that have not been compiled."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ASSERTA" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION
     "Add a clause to the data base, indexed by head's predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RETRACT-CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION "Retract a clause from the data base")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-LEVEL-PROVE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Prove the list of goals by compiling and calling it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN-PROLOG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PROCEDURE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Run a 0-ary prolog procedure with a given continuation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROLOG-COMPILE-SYMBOLS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SYMBOLS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       (:NAME "*UNCOMPILED*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)))
     :DOCUMENTATION "Compile a list of Prolog symbols.
  By default, the list is all symbols that need it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHOW-PROLOG-VARS/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAR-NAMES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Display the variables, and prompt the user to see
  if we should continue.  If not, return to the top level.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEREF-EXP" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Build something equivalent to EXP with variables dereferenced.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PREDICATE*" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :DOCUMENTATION "The Prolog predicate currently being compiled"
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
      (:NAME "ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CLAUSES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Compile all the clauses for a given symbol/arity
  into a single LISP function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-CUT-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-CONJUNCTION-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-AND-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-DISJUNCTION-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-OR-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-IF-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-IF-THEN-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GOAL-IF-THEN-ELSE-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DESTRUCTURE-IF-THEN-ELSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Compile the body of a clause.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAIL/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "7.8.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRUE/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "7.8.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?G" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "7.8.3: Try to prove goal by calling it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "!/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "7.8.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CATCH/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CATCH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?RECOVER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "7.8.9")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "THROW/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?BALL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "7.8.10")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?ARG1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ARG2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.2.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFY-WITH-OCCURS-CHECK/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "?ARG1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ARG2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.2.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "\\=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?ARG1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ARG2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.2.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNBOUND-VAR-P" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Is EXP an unbound var?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NONVARP" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOMICP" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VAR/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGER/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REAL/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOMIC/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.5")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPOUND/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.6")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NONVAR/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.7")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMBER/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.3.8")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEREF-EQUAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Are the two arguments EQUAL with no unification,
  but with dereferencing?")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "==/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.4.1: Are the two arguments EQUAL with no unification,
  but with dereferencing?  If so, succeed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "\\==/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.4.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TERM-PRECEDES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "@</2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.4.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "@=</2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.4.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "@>2/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "@>=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?X" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?Y" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUNCTOR/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?NAME" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ARITY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.5.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARG/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?N" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ARG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.5.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "=.." :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RENAMED-COPY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-TERM/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?TERM1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?TERM2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.5.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IS/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
      (:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.6.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "=:=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "=\\=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "</2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "=</2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ">/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME ">=/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?E1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?E2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.7.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLAUSE/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?HEAD" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.8.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-PREDICATE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?PI" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSERTA/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.9.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSERTZ/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.9.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RETRACT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.9.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ABOLISH/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?PI" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FINDALL/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "BAG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.10.1: Find all solutions to GOAL, and for each solution,
  collect the value of TERM into the list BAG.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BAGOF/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "RESULT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.10.2: Find all solutions to GOAL, and for each solution,
  collect the value of EXP into the list RESULT.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEREF-COPY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Copy the expression, replacing variables with new ones.
  The part without variables can be returned as is.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SETOF/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GOAL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "RESULT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "8.10.3: Find all unique solutions to GOAL, and for each solution,
  collect the value of EXP into the list RESULT.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-STREAM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "S-VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
       (:NAME "S" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-INPUT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-OUTPUT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-INPUT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-OUTPUT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.5")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN/4" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?SOURCE/SINK" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?MODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?STREAM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?OPTIONS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.6")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.7")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?OPTIONS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.8")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLUSH-OUTPUT/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.9")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLUSH-OUTPUT/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.10")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AT-END-OF-STREAM/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AT-END-OF-STREAM/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-STREAM-POSITION/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?POSITION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.11.14")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CHAR/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.12.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CHAR/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.12.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUT-CHAR/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.12.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUT-CHAR/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.12.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NL/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "8.12.5")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NL/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.12.6")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CODE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CODE/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUT-CODE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUT-CODE/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?STREAM-OR-ALIAS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-UNDO-BINDINGS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Undo bindings after each expression in body except the last.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAIL-IF/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RELATION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION
     "8.15.1: Negation by failure: If you can't prove G, then (not G) true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ONCE/1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.15.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPEAT/0" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)) :DOCUMENTATION
     "8.15.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM-LENGTH/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LENGTH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM-CONCAT/3" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?ATOM1" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ATOM2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ATOM12" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUB-ATOM/4" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?START" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LENGTH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?SUB-ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IMPLODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM-CHARS/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.4")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM-CODES/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CODES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.5")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATOM-CHARACTERS/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CHARACTERS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "for Common Lisp")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-ATOM/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STRING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "for Common Lisp")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-LIST/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?STRING" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-CODE/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.6")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMBER-CHARS/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?NUMBER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.7")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMBER-CODES/2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "?NUMBER" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "?LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
      (:NAME "CONT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "8.16.8")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RETRACT-SAME-ARITY-CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION "Retract a clause from the data base")
    (:TYPE :MACRO :SYMBOL (:NAME "<--" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T))
     :DOCUMENTATION "Retract a same arity clause from the data base,
and add a clause to the data base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-DEREF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROLOG-TRANSLATE-GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PROLOG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GOALS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "Run Prolog in the surrounding Lisp environment
which is accessed from lisp functor.
")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PROLOG-COLLECT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "collect all bindings of vars")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PROLOG-FIRST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP NIL))
     :DOCUMENTATION "return first bindding of vars"))
   :EXTERNAL-SYMBOLS
   ((:NAME "CURRENT-INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "PROLOG-COLLECT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "<-" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "NUMBER-CODES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "CLAUSE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "GET-CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ONCE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "SET-STREAM-POSITION" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "NONVAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ATOM-CODES" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ARG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "AND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "FINDALL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "UNIFY-WITH-OCCURS-CHECK" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ATOM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "ATOM-CHARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "WRITE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "IS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "CURRENT-OUTPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "?" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "?-" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "NL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "COPY-TERM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "GET-CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME ">=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "CATCH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "\\=" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "RETRACT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "READ" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "TRUE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "@=<" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "IF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "REAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "STRING-ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "VAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "COMPOUND" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "=<" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "PUT-CHAR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "<" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "=\\=" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "REPEAT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ASSERTZ" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "<--" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "PROLOG-FIRST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "FUNCTOR" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "\\==" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "STRING-LIST" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ATOMIC" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "@<" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "CLOSE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "@>=" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "CHAR-CODE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "FLUSH-OUTPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "BAGOF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ATOM-CONCAT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "==" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "=:=" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME ">" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "CURRENT-PREDICATE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "FAIL" :PACKAGE-NAME "PAIPROLOG.AUXFNS" :EXTERNALP T)
    (:NAME "ATOM-LENGTH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "SET-OUTPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "NUMBER-CHARS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "OR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "PROLOG" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "!" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ASSERTA" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "SET-INPUT" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ABOLISH" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "SUB-ATOM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "STREAM-PROPERTY" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "THROW" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "CALL" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "ATOM-CHARACTERS" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "LISP" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "FAIL-IF" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "@>2" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "AT-END-OF-STREAM" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)
    (:NAME "PUT-CODE" :PACKAGE-NAME "PAIPROLOG" :EXTERNALP T)))))
