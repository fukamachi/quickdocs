
(:TYPE :SYSTEM :NAME "escalator" :AUTHOR
 "Elliott Slaughter <elliottslaughter@gmail.com>" :MAINTAINER NIL :VERSION
 "0.0" :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ITERATE") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "ESCALATOR" :FULL-NAME "ESCALATOR" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-TABLE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TABLE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COMPONENT-META*" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COMPONENT-DATA*" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SYSTEM-CODE*" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-META" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMPONENT-META" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-DATA" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMPONENT-DATA" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSTEM-CODE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYSTEM-CODE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEPENDENCY-INDEX" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "DEPENDENCY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIELD-INDEX" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "FIELD" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTAINS-CIRCULARITY-P" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOTAL-ORDER" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GRAPH" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCOMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DEPENDENCIES" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FIELDS" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Defines a new component with the given dependencies and fields.

   Internal:
    * Error if name isn't a non-nil symbol.
    * Error if dependencies contains a non-symbol or nil.
    * Error if fields contains a non-symbol or nil.
    * Error if dependency doesn't exist.
    * Error if dependencies include self.
    * Error if dependencies cause cycle in component precendence list.
    * Warn on redefinition of component.
    * Warn if field hides a previously defined field for any component.
    * Adds component entry to *component-meta*
      (name -> deps * fields * initargs * size).
    * Defines macros for each field accessor.
    * Initializes global hash-table for component in *component-data*.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFSYSTEM" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      ((:NAME "ENTITY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
       (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DEPENDENCIES" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION "Defines a system for the given component.

   Internal:
    * Error if name, entity, and component aren't non-nil symbols.
    * Error if dependencies aren't symbols (nil allowed).
    * Error if name doesn't refer to a defined component.
    * Error if number of dependencies doesn't match component.
    * Warns on redefinition of system.
    * Stores code to operate on component data.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SYSTEM-LOOP" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENTITY-COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ENTITY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the component instance for entity or nil.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENTITY-COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "ENTITY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-UUID" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-UUID" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ENTITY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PROTOTYPE" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "COMPONENTS" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "ESCALATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Instantiates an entity from the given prototype (shallow copy) and
   additionally associated with the specified components.

   Internal:
    * Error if any component doesn't exist.
    * Enforce uniqueness of components by pushing into a new list.
    * Shallow copy prototype components.
    * Instantiate new components (overwrite if they already exist).
    * Copy references to dependencies (error if it doesn't exist)."))
   :EXTERNAL-SYMBOLS
   ((:NAME "MAKE-ENTITY" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)
    (:NAME "SYSTEM-LOOP" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)
    (:NAME "DEFCOMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)
    (:NAME "DEFSYSTEM" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)
    (:NAME "ENTITY-COMPONENT" :PACKAGE-NAME "ESCALATOR" :EXTERNALP T)))))
