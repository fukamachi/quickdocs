
(:TYPE :SYSTEM :NAME "clesh" :AUTHOR
 "Christian von Essen <christian@mvonessen.de>" :MAINTAINER NIL :VERSION NIL
 :LICENCE "FreeBSD (see LICENSE)" :DESCRIPTION
 ("Clesh is a very short program that provides
  mechanisms for running and composing Unix shell commands and
  constructs from Common Lisp.

Essentially, it provides a '!' syntax that you can use to run commands
and a '[]' embedded mode where you can enter bash scripts and obtain
the standard output as a lisp string, and some other features.

Lisp expressions can be included in any command or script using a '?'
syntax.

Clesh works on every implementation of Common Lisp that is supported
by trivial-shell.")
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("TRIVIAL-SHELL" "NAMED-READTABLES")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CLESH" :FULL-NAME "CLESH" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*SHELL*" :PACKAGE-NAME "CLESH" :EXTERNALP T) :DOCUMENTATION
     "Program to use to execute shell commands." :INITIAL-VALUE "\"/bin/sh\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCRIPT" :PACKAGE-NAME "CLESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PROGRAM" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
       (:NAME "*SHELL*" :PACKAGE-NAME "CLESH" :EXTERNALP T)))
     :DOCUMENTATION "Execute the STR string as a standard input of the program.

Returns three values.
   1. Standard output of the program
   2. Standard error of the program
   3. Exit code of the program")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MIXED-TEMPLATE" :PACKAGE-NAME "CLESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRLIST" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION "Concatenate list of arguments into a string.

Turns any argument that is not a string already into string using format's ~A.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MIXED-SCRIPT" :PACKAGE-NAME "CLESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRLIST" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Concatenate arguments like MIXED-TEMPLATE, execute result like SCRIPT.

Returns three values.
  1. Standard output of the program
  2. Standard error of the program
  3. Exit code of the program")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINES-TO-LIST" :PACKAGE-NAME "CLESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEXT" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Transform the string TEXT into a list of strings, each representing
   on line of TEXT. This is suitable to postprocessing the standard output
   of many Unix commands (such as find or df) that return one result
   per line.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-ESCAPES" :PACKAGE-NAME "CLESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "END-CHAR1" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "BUFFER" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION "Read escapes, push the appropriate number of escapes onto
the buffer. If the last character is special and not escaped,
then this character is returned. Otherwise we return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-INTERPOLATED-STRING" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "END-CHAR1" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "END-CHAR2" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "EVAL-AT-READ" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Read from a stream until a delimiter is found and interpolate.

The delimiter is
 - the character END-CHAR1 if END-CHAR2 is nil
 - the sequence END-CHAR2 END-CHAR1 if END-CHAR2 is not nil.

Interpolation starts with ?, and the next form (i.e., lisp form)
is interpolated. If EVAL-AT-READ is not NIL, then the form will
be evaluated and converted into a string immediately.
Otherwise the form will be returned as is.

Returns a list. In this list, normal strings and interpolations alternate.
For example the string \"asd foo ?(+ 2 2) bar ?(+ 3 3)\"
will be read as (\"asd foo \" (+ 2 2) \" bar \" (+ 3 3)).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENTER-SHELL-MODE" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Read and execute successive shell commands, with any
   lisp expressions embedded. Expressions are evaluated at
   read time, as soon as a line is delivered. Implements the !! reader macro.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-SHELL-ESCAPE-READER" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMBEDDED-SHELL-ESCAPE-READER" :PACKAGE-NAME "CLESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEMPLATE-ESCAPE-READER" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR1" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "CHAR2" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STORABLE-TEMPLATE-ESCAPE-READER" :PACKAGE-NAME "CLESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR1" :PACKAGE-NAME "CLESH" :EXTERNALP NIL)
      (:NAME "CHAR2" :PACKAGE-NAME "CLESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "SCRIPT" :PACKAGE-NAME "CLESH" :EXTERNALP T)
    (:NAME "*SHELL*" :PACKAGE-NAME "CLESH" :EXTERNALP T)
    (:NAME "LINES-TO-LIST" :PACKAGE-NAME "CLESH" :EXTERNALP T)
    (:NAME "SYNTAX" :PACKAGE-NAME "CLESH" :EXTERNALP T)))))
