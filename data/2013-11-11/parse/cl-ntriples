
(:TYPE :SYSTEM :NAME "cl-ntriples" :AUTHOR
 "Victor Anyakin <anyakinvictor@yahoo.com>" :MAINTAINER NIL :VERSION
 "2012.12.16" :LICENCE "BSD" :DESCRIPTION
 "CL-NTRIPLES is a simple basic parser for Ntriples data." :LONG-DESCRIPTION
 "A basic parser and a set of simple utilities to parse N-Triples data.

N-Triples provides a simple format for representation of Semantic
Web/W3C RDF semantic data. CL-NTRIPLES provides a simple and easy to
use parser for Common Lisp applications."
 :DEPENDS-ON ("ALEXANDRIA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-NTRIPLES" :FULL-NAME "CL-NTRIPLES" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :CONSTANT :SYMBOL
     (:NAME "+NT-CR+" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ALEXANDRIA.0.DEV::%REEVALUATE-CONSTANT 'CL-NTRIPLES::+NT-CR+ 13 'EQL)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+NT-LF+" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ALEXANDRIA.0.DEV::%REEVALUATE-CONSTANT 'CL-NTRIPLES::+NT-LF+ 10 'EQL)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+NT-SPACE+" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ALEXANDRIA.0.DEV::%REEVALUATE-CONSTANT 'CL-NTRIPLES::+NT-SPACE+ 32 'EQL)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+NT-TAB+" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ALEXANDRIA.0.DEV::%REEVALUATE-CONSTANT 'CL-NTRIPLES::+NT-TAB+ 9 'EQL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NTRIPLE-WS-P" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NTRIPLE-CRLF-P" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSUME-WHITESPACE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-URIREF" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-NODE-ID" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-LITERAL" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Parse the object literal from the stream.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-NTRIPLE-TRIPLE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "The triple consists of a: subject, predicate, object. All they are
separated by whitespace. There is also a terminating full stop point
in the end of a tripple.

Returns a list consisting of three elements corresponding to the
tripple.

The syntax is:
triple ::= subject ws+ predicate ws+ object ws* '.' ws*
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-NTRIPLE-LINE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-NTRIPLE-DOC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)) :DOCUMENTATION
     "Parses N-Triples from the given source. This method
accepts a file pathname, a stream, or a string.

Returns a list of triples consisting of three elements: subject,
predicate, object. Subjects can be either an `uriref' or a
`nodeID'. Objects can be of three types: `uriref', `nodeID' or a
`literal'. Depending on the type of the object it is encoded into a
list.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SRC" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREDICATE?" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TRIPLES" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
      (:NAME "PREDICATE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LANG" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL)
      (:NAME "DATA-TYPE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given the list of triples produced by PARSE-NT returns a list of
triples with predicates matching the given one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LITERAL-STRING" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TRIPLE" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the literal-string value of the triple's object."))
   :EXTERNAL-SYMBOLS
   ((:NAME "LITERAL-STRING" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T)
    (:NAME "PARSE-NT" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T)
    (:NAME "PREDICATE?" :PACKAGE-NAME "CL-NTRIPLES" :EXTERNALP T)))))
