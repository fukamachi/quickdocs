
(:TYPE :SYSTEM :NAME "npg" :AUTHOR "Walter C. Pelissero <walter@pelissero.de>"
 :MAINTAINER "Walter C. Pelissero <walter@pelissero.de>" :VERSION NIL :LICENCE
 "Lesser General Public License" :DESCRIPTION "NPG a Naive Parser Generator"
 :LONG-DESCRIPTION
 "NPG is a backtracking recursive descendant parser generator for
Common Lisp. It accepts rules in a Lispy EBNF syntax without indirect
left recursive rules."
 :DEPENDS-ON NIL :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "NAIVE-PARSER-GENERATOR" :FULL-NAME
   "NAIVE-PARSER-GENERATOR" :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :STRUCT :SYMBOL
     (:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "KEYWORDS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EQUAL-P" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "RULES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "KEYWORDS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "EQUAL-P" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM2" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRODUCTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM40" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "PRODUCTIONS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM41" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "PRODUCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TOKENS-LENGTH" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ACTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PRODUCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "TOKENS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM78" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "TOKENS-LENGTH" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM79" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "ACTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM80" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM118" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "VALUE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM119" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "POSITION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM120" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       (:NAME "RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       (:NAME "PRODUCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
        NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       (:NAME "TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RULES-TABLE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE-NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE-NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-KEYWORDS-TABLE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-KEYWORD" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "KEYWORD-NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL)
      (:NAME "KEYWORDS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-KEYWORD" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYWORDS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SMART-DEFAULT-REDUCTION*" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "If true the default reductions take only the non-static tokens -
those that are not declared as strings in the grammar."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*RULES*" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(NAIVE-PARSER-GENERATOR::MAKE-RULES-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*KEYWORDS*" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(NAIVE-PARSER-GENERATOR::MAKE-KEYWORDS-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ACTION-ARGUMENTS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a list of tokens making up a production, return three values:
the list of variables for the function reducing this production, those
that are non static and their unambiguous user-friendly names.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ACTION-FUNCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "ACTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a function with name NAME, arguments derived from TOKENS and
body ACTION.  Return it's definition.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFINE-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "PRODUCTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Accept a rule in EBNF-like syntax, translate it into a sexp and a
call to INSERT-RULE-IN-CURRENT-GRAMMAR.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFRULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PRODUCTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION "Wrapper macro for DEFINE-RULE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-OPTIONAL-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a rule for a possibly missing (non)terminal (? syntax) and
return it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ALTERNATIVE-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a rule for a list of alternatives (\"or\" syntax) and return it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NONEMPTY-LIST-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEPARATOR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Make a rule for a non-empty list (+ syntax) and return it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LIST-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEPARATOR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Make a rule for a possibly empty list (* syntax) return it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONST-TERMINAL-P" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-PRODUCTION-TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOK" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Translate token of the type NAME? or NAME* or NAME+ into (? NAME)
or (* NAME) or (+ NAME).  This is used by the DEFRULE macro.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EBNF-TO-SEBNF" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Take a production as a list of TOKENS and expand it.  This turns a
EBNF syntax into a sexp-based EBNF syntax or SEBNF.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEBNF-TO-BNF" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Take a production in SEBNF (Symbolic Extended BNF) syntax and turn
it into BNF.  The production is simplified but the current grammar is
populated with additional rules.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DEFAULT-ACTION-FUNCTION" :PACKAGE-NAME
      "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a sexp to be used as default action in case one is not
supplied in the production.  This is usually a quite sensible
one.  That is, only the non-constant tokens are returned in a
list and in case only a variable token is available that one is
returned (not included in a list).  If all the tokens are
constant, then all of them are returned in a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PRODUCTION-FROM-DESCR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "PRODUCTION-DESCRIPTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "Take a production NAME and its description in the form of a sexp
and return a production structure object together with a list of used
keywords.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-IMMEDIATE-LEFT-RECURSIVITY" :PACKAGE-NAME
      "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION "Turn left recursive rules of the type
    A -> A x | y
into
    A -> y A2
    A2 -> x A2 | E
where E is the empty production.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-LEFT-RECURSIVITY-FROM-RULES" :PACKAGE-NAME
      "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOLVE-ALL-NONTERMINALS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RULE-PRODUCTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE-NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "PRODUCTION-DESCRIPTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a production object that belongs to RULE-NAME made according
to PRODUCTION-DESCRIPTIONS.  See also MAKE-PRODUCTION-FROM-DESCR.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-RULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "PRODUCTION-DESCRIPTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a new rule object together with a list of keywords making up
the production definitions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-RULE-IN-CURRENT-GRAMMAR" :PACKAGE-NAME
      "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "PRODUCTIONS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Add rule to the current grammar and its keywords to the keywords
hash table.  You don't want to use this directly.  See DEFRULE macro
instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOLVE-NONTERMINALS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "RULES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a list of production tokens, try to expand the nonterminal
ones with their respective rule from the the RULES pool.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESET-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Empty the current grammar from any existing rule.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EQUAL-P" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING-EQUAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Return a GRAMMAR structure suitable for the PARSE function, using
the current rules.  EQUAL-P, if present, is a function to be used to
match the input tokens; it defaults to STRING-EQUAL.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEBUG*" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :DOCUMENTATION
     "Either nil or a stream where to write the debug informations."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REDUCE-PRODUCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PRODUCTION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Apply PRODUCTION's action on ARGUMENTS.  This has the effect of
  \"reducing\" the production.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LATER-POSITION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "POS1" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "POS2" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compare two file postions and return true if POS1 is later than
POS2 in the input stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LATER-POSITION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "POS1" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "POS2" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LATER-POSITION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "POS1" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "POS2" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "READ-NEXT-TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TOKENS-SOURCE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Read next token from a lexical analysed stream.  The nature of
TOKENS-SOURCE is implementation dependent and any lexical analyzer is
supposed to specialise this method.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "TOKENIZER" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Match a GRAMMAR against the list of input tokens coming from TOKENIZER.
Return the reduced values according to the nonterminal actions.  Raise
an error on failure.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TERMINALS-IN-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GRAMMAR-OR-HASHTABLE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
       :EXTERNALP NIL))
     :DOCUMENTATION "Find non constant terminal symbols in GRAMMAR.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TERMINALS-IN-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-255" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TERMINALS-IN-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
       (:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-GRAMMAR-FIGURES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GRAMMAR-KEYWORD-P" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T))
     :DOCUMENTATION "Check if KEYWORD is part of this grammar.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GRAMMARS*" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELETE-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP NIL)
      (:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "$4" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "PRINT-GRAMMAR-FIGURES" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
     :EXTERNALP T)
    (:NAME "PARSE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$ALIST" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$2" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "COPY-INPUT-CURSOR-SLOTS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
     :EXTERNALP T)
    (:NAME "READ-NEXT-TOKENS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
     T)
    (:NAME "$3" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$VARS" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "RESET-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "+" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "$10" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$8" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$5" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "?" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "GENERATE-GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
     T)
    (:NAME "$1" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "MAKE-TOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "GRAMMAR-KEYWORD-P" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
     :EXTERNALP T)
    (:NAME "GRAMMAR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "INPUT-CURSOR-MIXIN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR"
     :EXTERNALP T)
    (:NAME "END-OF-INPUT" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "LATER-POSITION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
     T)
    (:NAME "TOKEN-POSITION" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
     T)
    (:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "$ALL" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "TOKEN-VALUE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$7" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "TOKEN-TYPE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "DUP-INPUT-CURSOR" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP
     T)
    (:NAME "DEFTOKEN" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "DEFRULE" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "OR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
    (:NAME "$9" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)
    (:NAME "$6" :PACKAGE-NAME "NAIVE-PARSER-GENERATOR" :EXTERNALP T)))))
