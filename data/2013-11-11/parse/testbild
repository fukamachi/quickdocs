
(:TYPE :SYSTEM :NAME "testbild" :AUTHOR "Alexander Kahl <e-user@fsfe.org>"
 :MAINTAINER NIL :VERSION "0.0.1" :LICENCE "GPLv3+" :DESCRIPTION
 "Universal test output production and consumption facility" :LONG-DESCRIPTION
 NIL :DEPENDS-ON ("GRAYLEX" "CL-PPCRE") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "TESTBILD" :FULL-NAME "TESTBILD" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "Base class for test output producers." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "TEST-PRODUCER-STREAM" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Stream to use for test output")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TESTS-RUN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :ACCESSORS
       ((:NAME "TESTS-RUN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION
       "Recorded number of test results emitted using this
producer.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "REINITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "reinitialize-instance :after producer &rest initargs &key &allow-other-keys => 0

Reset the recorded number of tests run to zero.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     "Test initialization / header output.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "PLAN-ARGUMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "A so-called test plan is used e.g. by TAP as a means of
cross-checking proper test suite execution.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "PLAN-ARGUMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "PLAN-ARGUMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Emit the result from running an test / an assertion.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result :before producer &key success description directive reason &allow-other-keys => number

Increase the recorded number of tests by one.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result :before producer &key success description directive reason &allow-other-keys => number

Increase the recorded number of tests by one.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION "Emit a comment, if available for this kind of producer.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMIT-BAILOUT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION "Emit a bail-out, if available for this kind of producer.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-BAILOUT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-BAILOUT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FINALIZE-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     "Emit final test output.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FINALIZE-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FINALIZE-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     "Producer for TAP (Test Anything Protocol) output." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VERSION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "TAP-VERSION" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "TAP output version.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUPPORTED-VERSIONS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SUPPORTED-TAP-VERSIONS" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "List of supported TAP versions.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHARED-INITIALIZE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "SLOT-NAMES" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "shared-initialize :after producer slot-names &rest initargs &key &allow-other-keys => nil

Ensure the chosen TAP version is actually supported by TAP-PRODUCER.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)))
     :DOCUMENTATION "init-test producer => nil

TAP version 13 and higher supports an optional version line in the header.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "PLAN-ARGUMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION "emit-plan :before producer &key plan plan-argument => nil

TAP test plans must always begin at the beginning of a line and start with
\"1..\".")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
       (:NAME "SIMPLE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "PLAN-ARGUMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "emit-plan producer &key (plan :simple) plan-argument => nil

TAP plans can be of type :SIMPLE or :SKIP, the latter means to skip all tests
within the suite.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result :before producer &key success description directive reason &allow-other-keys => nil

TAP test results must always begin at the beginning of a line.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result producer &key (success t) description directive reason &allow-other-keys => nil

TAP style test result emitter. DIRECTIVE types :TODO and :SKIP are supported,
:error is ignored.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION "emit-comment producer comment => comment-list

TAP comments are delimited by hash marks and EOLs so COMMENT is split by all
known EOL delimiter combinations and output with a hash mark in front each.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)) :DOCUMENTATION
     "Producer for xUnit style test output." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FILL-COLUMN" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "PRODUCER-FILL-COLUMN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "Line feeds will be inserted after FILL-COLUMN
characters if set.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)))
     :DOCUMENTATION "init-test producer => nil

xUnit output always starts on a fresh line.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result :before producer &key success description directive reason &allow-other-keys => nil

Ensure output proceeds on a fresh line after FILL-COLUMN test assertions, if set.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SUCCESS" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESCRIPTION" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "DIRECTIVE" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "REASON" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "emit-result producer &key (success t) description directive reason &allow-other-keys => nil

xUnit output consists of single characters per assertion.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T))
      (:NAME "COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP NIL))
     :DOCUMENTATION "emit-comment producer comment => nil

xUnit has no support for comments so we use STDERR.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FINALIZE-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
       (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)))
     :DOCUMENTATION "finalize-test producer => nil

xUnit output always ends with a line feed."))
   :EXTERNAL-SYMBOLS
   ((:NAME "TAP-VERSION" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "EMIT-RESULT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "INIT-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "FINALIZE-TEST" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "EMIT-COMMENT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "PRODUCER-FILL-COLUMN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "SUPPORTED-TAP-VERSIONS" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "EMIT-PLAN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "TAP-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "X-UNIT-PRODUCER" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "TESTS-RUN" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)
    (:NAME "EMIT-BAILOUT" :PACKAGE-NAME "TESTBILD" :EXTERNALP T)))))
