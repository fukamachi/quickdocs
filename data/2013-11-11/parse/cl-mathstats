
(:TYPE :SYSTEM :NAME "cl-mathstats" :AUTHOR
 "Gary Warren King <gwking@metabang.com>" :MAINTAINER
 "Gary Warren King <gwking@metabang.com>" :VERSION "0.8.2" :LICENCE
 "MIT Style License" :DESCRIPTION "Common Lisp math and statistics routines"
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("METATILITIES-BASE" "CL-CONTAINERS")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-MATHSTATS" :FULL-NAME "CL-MATHSTATS" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :GENERIC :SYMBOL
     (:NAME "DOT-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SEQUENCE-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "http://en.wikipedia.org/wiki/Dot_product")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GAUSSIAN-CDF-SIGNALS-ZERO-STANDARD-DEVIATION-ERROR*"
      :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-FLOAT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-SCALE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "OLD-MIN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "OLD-MAX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "NEW-MIN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "NEW-MAX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Rescales value linearly from the old-min/old-max scale to the new-min/new-max one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRUNCATE-TO-FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Equivalent to (* factor (truncate n factor)).  For example,
`truncate-to-factor' of 65 and 60 is 60.  Useful for converting to certain
units, say when converting minutes to hours and minutes.  See also
`round-to-factor.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROUND-TO-FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Equivalent to (* factor (round n factor)).  For example, `round-to-factor' of
65 and 60 is 60.  Useful for converting to certain units, say when converting
minutes to the nearest hours.  See also `truncate-to-factor.'")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "FPI" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :DOCUMENTATION
     "The constant pi, in single-float format.  Using this constant avoid
run-time double-float contagion."
     :INITIAL-VALUE "(COERCE PI 'SINGLE-FLOAT)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "2FPI" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :DOCUMENTATION
     "The constant 2*pi, in single-float format.  Using this constant avoid
run-time double-float contagion."
     :INITIAL-VALUE "(COERCE (* 2.0d0 PI) 'SINGLE-FLOAT)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+E+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :DOCUMENTATION
     "An approximation of the constant e (named for Euler!)." :INITIAL-VALUE
     "2.7182817")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEGREES->RADIANS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DEGREES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Convert degrees to radians.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RADIANS->DEGREES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RADIANS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Convert radians to degrees.  Does not round the result.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ON-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "LOWER-BOUND" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "UPPER-BOUND" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LOWER-INCLUSIVE?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "UPPER-INCLUSIVE?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "returns t iff x in the interval")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINATION-COUNT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the number of combinations of n elements taken k at a time. Assumes valid 
input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERMUTATION-COUNT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the number of possible ways of taking k elements out of n total.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SQUARE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "F-MEASURE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PRECISION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "RECALL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BETA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) 0.5))
     :DOCUMENTATION
     "Returns the f-measure, the combination of precision and recall based on
parameter beta - default = .5 which => precision and recall are equally weighted.
beta = 1 => precision is maximized.  beta = 0 => recall is maximized.

From a recent statistics book - All of Statistics - springer verlag
http://www2.springeronline.com/sgw/cda/frontpage/0,,4-10128-22-13887455-0,00.html
")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+0DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 0)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+5DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 5)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+10DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 10)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+15DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 15)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+30DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 30)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+45DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 45)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+60DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 60)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+90DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 90)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+120DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 120)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+135DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 135)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+150DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 150)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+180DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 180)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+210DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 210)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+225DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 225)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+240DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 240)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+270DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 270)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+300DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 300)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+315DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 315)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+330DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 330)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+360DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(CL-MATHSTATS:DEGREES->RADIANS 360)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMES2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "I" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "POWER" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Multiply `i' by a power of 2.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIV2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "I" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "POWER" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1))
     :DOCUMENTATION
     "Divide positive fixnum `i' by 2 or a power of 2, yielding an integer result.
For example, (div2 35 5) => 1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXP2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     "2^n")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOG2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     "Log of `n' to base 2.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRUNC2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "POWER" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Truncate `n' to a power of 2.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MOD2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "POWER" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Find `n' mod a power of 2.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CHECK-TYPE-OF-ARG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ARG-NAME" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "PREDICATE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TYPE-STRING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ERROR-TYPE-NAME" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generate error if the value of ARG-NAME doesn't satisfy PREDICATE.
PREDICATE is a function name (a symbol) or an expression to compute.
TYPE-STRING is a string to use in the error message, such as \"a list\".
ERROR-TYPE-NAME is a keyword that tells condition handlers what type was desired.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCALAR-MATRIX-MULTIPLY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Multiplies a matrix by a scalar value in the form M[i,j] = s*M[i,j].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "1-OR-2D-ARRAYP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-2D-ARRAY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILL-2D-ARRAY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLY-MATRICES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MATRIX-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRIX-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SAVED-MATRIX-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Multiply matrices MATRIX-1 and MATRIX-2, storing into MATRIX-3 if supplied.
If MATRIX-3 is not supplied, then a new (ART-Q type) array is returned, else
MATRIX-3 must have exactly the right dimensions for holding the result of the multiplication.
Both MATRIX-1 and MATRIX-2 must be either one- or two-diimensional.
The first dimension of MATRIX-2 must equal the second dimension of MATRIX-1, unless MATRIX-1
is one-dimensional, when the first dimensions must match (thus allowing multiplications of the
form VECTOR x MATRIX)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INVERT-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INTO-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "If matrix is singular returns nil, else returns its inverse.
   If into-matrix is supplied, inverse is returned in it,
    otherwise a new array is created.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-NORM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the norm of matrix.
   The norm is the maximum over the rows of the sum of the abs of the columns.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INVERT-MATRIX-ITERATE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INTO-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "If matrix is singular returns nil, else returns the inverse of matrix.
   Uses iterative improvement until no further improvement is possible.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INTO-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIM-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DIM-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NORMALIZE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "M" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a new matrix such that the sum of its elements is 1.0")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUM-OF-ARRAY-ELEMENTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-TRACE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-MULTIPLY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Does successive multiplications of each element in `args'.  If two
elements are scalar, then their product is i * j, if a scalar is
multiplied by a matrix, then each element in the matrix is multiplied
by the scalar, lastly, if two matrices are multiplied then standard
matrix multiplication is applied, and the ranks must be such that if
ARGi is rank a x b and ARGj is rank c x d, then b must be equal to c.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-TIMES-SCALAR!" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Multiply a matrix by a scalar value")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-TIMES-SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Multiply a matrix by a scalar value")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-TIMES-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MAT1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MAT2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Multiplies two matrices together")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-ADDITION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-PLUS-SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SCALAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Add a scalar value to a matrix")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-PLUS-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MAT1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MAT2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Adds two matrices together")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REDUCE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "MAT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Uses the Gauss-Jordan reduction method to reduce a matrix.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+LOG-PI+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LOG PI)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SQRT-PI+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(SQRT PI)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAMMA-LN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the natural logarithm of the Gamma function evaluated at `x.'
Mathematically, the Gamma function is defined to be the integral from 0 to
Infinity of t^x exp(-t) dt.  The implementation is copied, with extensions for
the reflection formula, from Numerical Recipes in C, section 6.1.  The argument
`x' must be positive.  Full accuracy is obtained for x>1.  For x<1, the
reflection formula is used.  The computation is done using double-floats, and
the result is a double-float.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACTORIAL-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the factorial of `n,' which should be an integer.  The result will
returned as an integer or bignum.  This implementation is exact, but is more
computationally expensive than `factorial,' which is to be preferred.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACTORIAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the factorial of `n,' which should be a non-negative integer.  The
result will returned as a floating-point number, single-float if possible,
otherwise double-float.  If it is returned as a double-float, it won't
necessarily be integral, since the actual computation is

     (exp (gamma-ln (1+ n)))

Implementation is loosely based on Numerical Recipes in C, section 6.1.  On the
TI Explorer, the largest argument that won't cause a floating overflow is 170.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACTORIAL-LN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the natural logarithm of n!; `n' should be an integer.  The result
will be a single-precision, floating point number.  The implementation follows
Numerical Recipes in C, section 6.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-COEFFICIENT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the binomial coefficient, `n' choose `k,' as an integer.  The result
may not be exactly correct, since the computation is done with logarithms.  The
result is rounded to an integer.  The implementation follows Numerical Recipes
in C, section 6.1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-COEFFICIENT-EXACT" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is an exact but computationally intensive form of the preferred
function, `binomial-coefficient.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-PROBABILITY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the probability of `k' successes in `n' trials, where at each trial
the probability of success is `p.' This function uses floating-point
approximations, and so is computationally efficient but not necessarily exact.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-PROBABILITY-EXACT" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is an exact but computationally intensive form of the preferred
function, `binomial-probability.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BETA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "Z" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the value of the Beta function, defined in terms of the complete
gamma function, G, as: G(z)G(w)/G(z+w).  The implementation follows Numerical
Recipes in C, section 6.1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAFE-EXP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)) :DOCUMENTATION
     "Eliminates floating point underflow for the exponential function.
Instead, it just returns 0.0d0")
    (:TYPE :MACRO :SYMBOL
     (:NAME "UNDERFLOW-GOES-TO-ZERO" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Protects against floating point underflow errors and sets the value to 0.0 instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAMMA-INCOMPLETE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is an incomplete gamma function, what Numerical Recipes in C calls
``gammp.'' This function also returns, as the second value, g(a,x).  See the
manual for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERROR-FUNCTION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the error function, which is typically used to compute areas under
the Gaussian probability distribution.  See the manual for more information.
Also see the function `gaussian-cdf.'

This implementation follows Numerical Recipes in C, section 6.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSSIAN-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) 0.0)
      ((:NAME "SD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1.0))
     :DOCUMENTATION
     "Computes the cumulative distribution function for a Gaussian random variable
(defaults: mean=0.0, s.d.=1.0) evaluated at `x.' The result is the probability
of getting a random number less than or equal to `x,' from the given Gaussian
distribution.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERROR-FUNCTION-COMPLEMENT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function computes the complement of the error function, ``erfc(x),''
defined as 1-erf(x).  See the documentation for `error-function' for a more
complete definition and description.  Essentially, this function on z/sqrt2
returns the two-tailed significance of z in a standard Gaussian distribution.

This function implements the function that Numerical Recipes in C calls erfcc,
see section 6.3; that is, it's the one using the Chebyshev approximation, since
that is the one they call from their statistical functions.  It is quick to
compute and has fractional error everywhere less than 1.2x10^\\{-7\\}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERROR-FUNCTION-COMPLEMENT-SHORT-1" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Z" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERROR-FUNCTION-COMPLEMENT-SHORT-2" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSSIAN-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "SD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the significance of `x' in a Gaussian distribution with mean=`mean'
(default 0.0) and standard deviation=`sd' (default 1.0); that is, it returns
the area which farther from the mean than `x' is.

The null hypothesis is roughly that `x' is zero; you must specify your
alternative hypothesis (H1) via the `tails' parameter, which must be :both,
:positive or :negative.  The first corresponds to a two-tailed test: H1 is that
`x' is not zero, but you are not specifying a direction.  If the parameter is
:positive, H1 is that `x' is positive, and similarly for :negative.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POISSON-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the cumulative distribution function for a Poisson random variable
with mean `x' evaluated at `k.' The result is the probability that the number of
Poisson random events occurring will be between 0 and k-1 inclusive, if the
expected number is `x.' The argument `k' should be an integer, while `x' should
be a float.  The implementation follows Numerical Recipes in C, section 6.2")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHI-SQUARE-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the complement of the cumulative distribution function for a
Chi-square random variable with `dof' degrees of freedom evaluated at `x.' The
result is the probability that the observed chi-square for a correct model
should be greater than `x.' The implementation follows Numerical Recipes in C,
section 6.2.  Small values suggest that the null hypothesis should be rejected;
in other words, this computes the significance of `x.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BETA-INCOMPLETE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function is useful in defining the cumulative distributions for
Student's t and the F distribution.

All arguments must be floating-point numbers; `a' and `b' must be positive and
`x' must be between 0.0 and 1.0, inclusive.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STUDENTS-T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "T-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Student's distribution is much like the Gaussian distribution except with
heavier tails, depending on the number of degrees of freedom, `dof.' As `dof'
goes to infinity, Student's distribution approaches the Gaussian.  This function
computes the significance of `t-statistic.' Values range from 0.0 to 1.0: small
values suggest that the null hypothesis---that `t-statistic' is drawn from a t
distribution---should be rejected.  The `t-statistic' parameter should be a
float, while `dof' should be an integer.

The null hypothesis is roughly that `t-statistic' is zero; you must specify your
alternative hypothesis (H1) via the `tails' parameter, which must be :both,
:positive or :negative.  The first corresponds to a two-tailed test: H1 is that
`t-statistic' is not zero, but you are not specifying a direction.  If the
parameter is :positive, H1 is that `t-statistic' is positive, and similarly for
:negative.

This implementation follows Numerical Recipes in C, section 6.3.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "F-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "NUMERATOR-DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DENOMINATOR-DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ONE-TAILED-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function occurs in the statistical test of whether two observed samples
have the same variance.  A certain statistic, F, essentially the ratio of the
observed dispersion of the first sample to that of the second one, is
calculated.  This function computes the tail areas of the null hypothesis: that
the variances of the numerator and denominator are equal.  It can be used for
either a one-tailed or two-tailed test.  The default is two-tailed, but
one-tailed can be computed by setting the optional argument `one-tailed-p' to
true.

For a two-tailed test, this function computes the probability that F would be as
different from 1.0 (larger or smaller) as it is, if the null hypothesis is
true.

For a one-tailed test, this function computes the probability that F would be as
LARGE as it is if the first sample's underlying distribution actually has
SMALLER variance that the second's, where `numerator-dof' and `denominator-dof'
is the number of degrees of freedom in the numerator sample and the denominator
sample.  In other words, this computes the significance level at which the
hypothesis ``the numerator sample has smaller variance than the denominator
sample'' can be rejected.

A small numerical value implies a very significant rejection.

The `f-statistic' must be a non-negative floating-point number.  The degrees of
freedom arguments must be positive integers.  The `one-tailed-p' argument is
treated as a boolean.

This implementation follows Numerical Recipes in C, section 6.3 and the `ftest'
function in section 13.4.  Some of the documentation is also drawn from the
section 6.3, since I couldn't improve on their explanation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Suppose an event occurs with probability `p' per trial.  This function
computes the probability of `k' or more events occurring in `n' trials.  Note
that this is the complement of the usual definition of cdf.  This function
approximates the actual computation using the incomplete beta function, but is
preferable for large `n' (greater than a dozen or so) because it avoids
summing many tiny floating-point numbers.

The implementation follows Numerical Recipes in C, section 6.3.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINOMIAL-CDF-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is an exact but computationally intensive form of the preferred
function, `binomial-cdf.'")
    (:TYPE :MACRO :SYMBOL
     (:NAME "AREF1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "I" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "AREF11" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "I" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "J" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIGN-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PYTHAG-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes square root of a*a + b*b without destructive overflow or underflow.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVBKSB-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Solves A X = B for a vector `X,' where A is specified by the mxn array U, `n'
vector W, and nxn matrix V as returned by svdcmp.  `m' and `n' are the
dimensions of `A,' and will be equal for square matrices.  `B' is the 1xm input
vector for the right-hand side.  `X' is the 1xn output solution vector.  All
arrays are of double-floats.  No input quantities are destroyed, so the routine
may be called sequentially with different B's.  See the discussion in Numerical
Recipes in C, section 2.6.

This routine assumes that near zero singular values have already been zeroed.
It returns no values, storing the result in `X.' It does use some auxiliary
storage, which can be passed in as `tmp,' a double-float array of length `n,' if
you want to avoid consing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVDCMP-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RV1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Given an `m'x`n' matrix `A,' this routine computes its singular value
decomposition, A = U W V^T.  The matrix U replaces `A' on output.  The diagonal
matrix of singular values W is output as a vector `W' of length `n.' The matrix
`V' -- not the transpose V^T -- is output as an `n'x`n' matrix `V.' The row
dimension `m' must be greater or equal to `n'; if it is smaller, then `A' should
be filled up to square with zero rows.  See the discussion in Numerical Recipes
in C, section 2.6.

This routine returns no values, storing the results in `A,' `W,' and `V.' It
does use some auxiliary storage, which can be passed in as `rv1,' a double-float
array of length `n,' if you want to avoid consing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVZERO-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "THRESHOLD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REPORT?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "If the relative magnitude of an element in `w' compared to the largest
element is less than `threshold,' then zero that element.  If `report?' is true,
the indices of zeroed elements are printed.  Returns a list of the indices of
zeroed elements.  This routine uses double-floats.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-INVERSE-SLOW-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "A-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Computes the inverse of a matrix that has been decomposed into `u,' `w' and
`v' by singular value decomposition.  It assumes the ``small'' elements of `w'
have already been zeroed.  It computes the inverse by constructing a diagonal
matrix `w2' from `w' (which is just a vector of the diagonal elements, and then
explicitly multiplying u^t w2 and v.  Note that if you are computing the inverse
merely to solve one or more systems of equations, you are better off using the
decomposition and backsubstitution routines directly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-INVERSE-FAST-DF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "A-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      ((:NAME "TMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Computes the inverse of a matrix that has been decomposed into `u,' `w' and
`v' by singular value decomposition.  It assumes the ``small'' elements of `w'
have already been zeroed.  It computes the inverse by taking advantage of the
known zeros in the full 2-dimensional `w' matrix.  It uses the backsubstitution
algorithm, only with the B vectors fixed at the columns of the identity matrix,
which lets us take advantage of its zeros.  It's about twice as fast as the slow
version and conses a lot less.  Note that if you are computing the inverse
merely to solve one or more systems of equations, you are better off using the
decomposition and backsubstitution routines directly.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIGN-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PYTHAG-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes square root of a*a + b*b without destructive overflow or underflow.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVBKSB-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SINGLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Solves A X = B for a vector `X,' where A is specified by the mxn array U, `n'
vector W, and nxn matrix V as returned by svdcmp.  `m' and `n' are the
dimensions of `A,' and will be equal for square matrices.  `B' is the 1xm input
vector for the right-hand side.  `X' is the 1xn output solution vector.  All
arrays are of single-floats.  No input quantities are destroyed, so the routine
may be called sequentially with different B's.  See the discussion in Numerical
Recipes in C, section 2.6.

This routine assumes that near zero singular values have already been zeroed.
It returns no values, storing the result in `X.' It does use some auxiliary
storage, which can be passed in as `tmp,' a single-float array of length `n,' if
you want to avoid consing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVDCMP-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "M" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RV1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SINGLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Given an `m'x`n' matrix `A,' this routine computes its singular value
decomposition, A = U W V^T.  The matrix U replaces `A' on output.  The diagonal
matrix of singular values W is output as a vector `W' of length `n.' The matrix
`V' -- not the transpose V^T -- is output as an `n'x`n' matrix `V.' The row
dimension `m' must be greater or equal to `n'; if it is smaller, then `A' should
be filled up to square with zero rows.  See the discussion in Numerical Recipes
in C, section 2.6.

This routine returns no values, storing the results in `A,' `W,' and `V.' It
does use some auxiliary storage, which can be passed in as `rv1,' a single-float
array of length `n,' if you want to avoid consing.  All input arrays should be
of single-floats.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVZERO-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "THRESHOLD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REPORT?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "If the relative magnitude of an element in `w' compared to the largest
element is less than `threshold,' then zero that element.  If `report?' is true,
the indices of zeroed elements are printed.  Returns a list of indices of the
zeroed elements.  This routine uses single-floats.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-INVERSE-SLOW-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "A-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SINGLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Computes the inverse of a matrix that has been decomposed into `u,' `w' and
`v' by singular value decomposition.  It assumes the ``small'' elements of `w'
have already been zeroed.  It computes the inverse by constructing a diagonal
matrix `w2' from `w' (which is just a vector of the diagonal elements, and then
explicitly multiplying u^t w2 and v.  Note that if you are computing the inverse
merely to solve one or more systems of equations, you are better off using the
decomposition and backsubstitution routines directly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-INVERSE-FAST-SF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "A-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
         ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SINGLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      ((:NAME "TMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       ((:NAME "MAKE-ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SINGLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "Computes the inverse of a matrix that has been decomposed into `u,' `w' and
`v' by singular value decomposition.  It assumes the ``small'' elements of `w'
have already been zeroed.  It computes the inverse by taking advantage of the
known zeros in the full 2-dimensional `w' matrix.  It uses the backsubstitution
algorithm, only with the B vectors fixed at the columns of the identity matrix,
which lets us take advantage of its zeros.  It's about twice as fast as the slow
version and conses a lot less.  Note that if you are computing the inverse
merely to solve one or more systems of equations, you are better off using the
decomposition and backsubstitution routines directly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGULAR-VALUE-DECOMPOSITION" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns as three values the U W and V of singular value decomposition.  If
you have already consed up these matrices, you should call `svdcmp-sf' or
`svdcmp-df' directly.  The input matrix is preserved.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-ZERO" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THRESHOLD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1.e-6)
      ((:NAME "REPORT?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "If the relative magnitude of an element in `w' compared to the largest
element is less than `threshold,' then zero that element.  Returns a list of
indices of the zeroed elements.  This function is just a convenient wrapper for
`svzero-sf' and `svzero-df.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-BACK-SUBSTITUTE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the solution vector to the Ax=b, where A has been decomposed into
`u,' `w' and `v' by `singular-value-decomposition.' This function is just a
minor wrapping of `svbksb-sf' and `svbksb-df.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-SOLVE-LINEAR-SYSTEM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B-VECTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REPORT?" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "THRESHOLD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1.e-6))
     :DOCUMENTATION
     "Returns solution of linear system matrix * solution = b-vector.  Employs the
singular value decomposition method.  See the discussion in Numerical Recipes in
C, section 2.6, especially as to the semantics of `threshold.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVDVAR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "V" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "W" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CVM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given `v' and `w' as computed by singular value decomposition, computes the
covariance matrix among the predictors.  Based on Numerical Recipes in C,
section 15.4, algorithm `svdvar.' The covariance matrix is returned.  It can be
supplied as the third argument.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SVD-MATRIX-INVERSE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SINGULARITY-THRESHOLD" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
        NIL)
       1.d-10))
     :DOCUMENTATION
     "Use singular value decomposition to compute the inverse of `A.' If an exact
inverse is not possible, then zero the otherwise infinite inverted singular
value and compute the inverse.  The inverse is returned; `A' is not destroyed.
If you're using this to solve several systems of equations, you're better off
computing the singular value decomposition and using it several times, because
this function computes it anew each time.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPORARY-VECTOR*" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION
     "A temporary vector for use by statistical functions such as `quantile,' which
uses it for sorting data.  This avoids consing or rearranging the user's data."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-TEMP-VECTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "TEMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "MIN-SIZE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Binds `temp' to a vector of length at least `min-size.' It's a vector of
pointers and has a fill-pointer, initialized to `min-size.'")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPORARY-TABLE*" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION "A temporary table. This avoids consing." :INITIAL-VALUE
     "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-TEMP-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "TEMP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Binds `temp' to a hash table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-UNIQUE-VALUES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "A faster version of `remove-duplicates'. Note you cannot specify a :TEST (it is always #'eq).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-ROUTINE-ERROR-HANDLING" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUPERCLASSES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SLOTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-TYPES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "LAMBDA-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "In clasp, statistical objects have two parts, a class which stores the
various parts of the object and a computing function which computes the value
of the object from arguments.  The define-statistic macro allows the
definition of new statistical types.  The define-statistic macro must be
provided with all the information necessary to create a statistical object,
that is, everything required to create a new class, everything required to
create a computing function and some information to connect the two.  This
last part consists of a list of arguments and their types and a list which
determines how the values of a statistical function should be used to fill the
slots of a statistical object.

When define-statistic is invoked, two things happen, first a class is defined
which is a subclass of 'statistic and any other named `superclasses'.  Second,
a pair of functions is defined.  `clasp-statistics::name' is an internal
function which has the supplied `body' and `lambda-list' and must return as
many values as there are slots in the class `name'.  The function `name' is
also defined, it is basically a wrapper function which converts its arguments
to those which are accepted by `body' and then calls `clasp-statistics::name'.
The parameter clasp:*create-statistical-objects* determines whether the
wrapper function packages the values returned by the intern function into a
statistical object or just returns them as multiple values.

  The `argument-types' argument must be an alist in which the keys are the
names of arguments as given in `lambda-list' and the values are lisp types
which those arguments will be converted to before calling the internal
statistical function.  The primary purpose of this is to allow for coersion of
clasp variables to sequences, but any coercion which is allowed by lisp is
acceptable.  The `values' argument is intended to allow the programmer to
specify which slots in the statistical object are filled by which of the
values returned by the statistical function.  By default, the order of the
values is assumed to be direct slots in order of specification, inherited
slots in order of specification in the superclasses which are also statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-&REST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Removes the '&rest arg' part from a lambda-list (strictly for documentation purposes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CREATE-STATISTICAL-OBJECTS*" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATISTICP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATISTICP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL)
       (:NAME "STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPOSITE-STATISTIC-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPOSITE-STATISTIC-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL)
       (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIMPLE-STATISTIC-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIMPLE-STATISTIC-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "IT" :PACKAGE-NAME "METABANG.UTILITIES" :EXTERNALP NIL)
       (:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "THING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ITERATABLE-THING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
          NIL)))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "THING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "ITERATABLE-CONTAINER-MIXIN" :PACKAGE-NAME
        "METABANG.CL-CONTAINERS" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ITERATABLE-THING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
          NIL)))))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "DATA-LENGTH" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-LENGTH-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See DATA-LENGTH")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-LENGTH" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "DATA-LENGTH (DATA &KEY START END KEY)
Returns the number of data values in `data.' Essentially, this is the Common
Lisp `length' function, except it handles sequences where there is a `start' or
`end' parameter.  The `key' parameter is ignored.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEAN-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MEAN")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MEAN (DATA &KEY START END KEY)
Returns the arithmetic mean of `data,' which should be a sequence.

Signals `no-data' if there is no data.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUM-OF-SQUARES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the sum of squared distances from the mean of `data'.

Signals `no-data' if there is no data.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "VARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VARIANCE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See VARIANCE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "VARIANCE (DATA &KEY START END KEY)
Returns the variance of `data,' that is, the `sum-of-squares' divided by
n-1. Signals `no-data' if there is no data.  Signals `insufficient-data' if
there is only one datum.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "STANDARD-DEVIATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STANDARD-DEVIATION-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See STANDARD-DEVIATION")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STANDARD-DEVIATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "STANDARD-DEVIATION (DATA &KEY START END KEY)
Returns the standard deviation of `data,' which is just the square root of
the variance.

Signals `no-data' if there is no data.  Signals `insufficient-data' if there is
only one datum.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SKEWNESS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEWNESS-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See SKEWNESS")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEWNESS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "SKEWNESS (DATA &KEY START END KEY)
Returns the skewness of `data', which is the sum of cubed distances from the
mean divided by the standard deviation, divided by N.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MINIMUM-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MINIMUM")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MINIMUM (DATA &KEY START END KEY)
Returns the element of the sequence `data' whose `key' is minimum.  Signals
`no-data' if there is no data.  If there is only one element in the data
sequence, that element will be returned, regardless of whether it is valid (a
number).")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAXIMUM-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MAXIMUM")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MAXIMUM (DATA &KEY START END KEY)
Returns the element of the sequence `data' whose `key' is maximum.  Signals
`no-data' if there is no data.  If there is only one element in the data
sequence, that element will be returned, regardless of whether it is valid (a
number).")
    (:TYPE :CLASS :SYMBOL
     (:NAME "RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See RANGE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "RANGE (DATA &KEY START END KEY)
Returns the range of the sequence `data.' Signals `no-data' if there is no
data.  The range is given by max - min.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "QUANTILE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUANTILE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See QUANTILE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUANTILE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "QUANTILE (DATA Q &KEY START END KEY)
Returns the element which is the q'th percentile of the data when accessed by
`key.' That is, it returns the element such that `q' of the data is smaller than
it and 1-`q' is above it, where `q' is a number between zero and one, inclusive.
For example, if `q' is .5, this returns the median; if `q' is 0, this returns
the minimum (although the `minimum' function is more efficient).

This function uses the bisection method, doing linear interpolation between
elements i and i+1, where i=floor(q(n-1)).  See the manual for more information.
The function returns three values: the interpolated quantile and the two
elements that determine the interval it was interpolated in.  If the quantile
was exact, the second two values are the same element of the data.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEDIAN-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MEDIAN")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MEDIAN (DATA &KEY START END KEY)
Returns the median of the subsequence of `data' from `start' to `end', using
`key'.  The median is just the 0.5 quantile, and so this function returns the
same values as the `quantile' function.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "TRIMMED-MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIMMED-MEAN-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "PERCENTAGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See TRIMMED-MEAN")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIMMED-MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "TRIMMED-MEAN (DATA PERCENTAGE &KEY START END KEY)
Returns a trimmed mean of `data.' A trimmed mean is an ordinary, arithmetic
mean of the data, except that an outlying percentage has been discarded.  For
example, suppose there are ten elements in `data,' and `percentage' is 0.1: the
result would be the mean of the middle eight elements, having discarded the
biggest and smallest elements.  If `percentage' doesn't result in a whole number
of elements being discarded, then a fraction of the remaining biggest and
smallest is discarded.  For example, suppose `data' is '(1 2 3 4 5) and
`percentage' is 0.25: the result is (.75(2) + 3 + .75(4))/(.75+1+.75) or 3.  By
convention, the 0.5 trimmed mean is the median, which is always returned as a
number.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "START/END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CALL-FORM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "START-N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END-N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MODE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MODE (DATA &KEY START END KEY)
Returns the most frequent element of `data,' which should be a sequence.  The
algorithm involves sorting, and so the data must be numbers or the `key'
function must produce numbers.  Consider `sxhash' if no better function is
available.  Also returns the number of occurrences of the mode.  If there is
more than one mode, this returns the first mode, as determined by the sorting of
the numbers.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONTINUOUS-VARIABLE-UNIQUENESS-FACTOR*" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0.9d0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONTINOUS-DATA-WINDOW-DIVISOR*" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(- 100 (* CL-MATHSTATS::*CONTINUOUS-VARIABLE-UNIQUENESS-FACTOR* 100))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODE-FOR-CONTINUOUS-DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "WINDOW" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the most frequent element of `data,' which should be a sequence.  The
algorithm involves sorting, and so the data must be numbers or the `key'
function must produce numbers.  Consider `sxhash' if no better function is
available.  Also returns the number of occurrences of the mode.  If there is
more than one mode, this returns the first mode, as determined by the sorting of
the numbers.

Keep in mind that if the data has multiple runs of like values that are bigger
than the window size (currently defaults to 10% of the size of the data) this
function will blindly pick the first one. If this is the case you probabaly
should be calling `mode' instead of this function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-CONTINUOUS-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMART-MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "MULTIPLE-MODES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-MODES-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See MULTIPLE-MODES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-MODES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "MULTIPLE-MODES (DATA K &KEY START END KEY)
Returns the `k' most frequent elements of `data,' which should be a sequence.
The algorithm involves sorting, and so the data must be numbers or the `key'
function must produce numbers.  Consider #'sxhash if no better function is
available.  Also returns the number of occurrences of each mode.  The value is
an association list of modes and their counts.  This function is a little more
computationally expensive than `mode,' so only use it if you really need
multiple modes.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "INTERQUARTILE-RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERQUARTILE-RANGE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See INTERQUARTILE-RANGE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERQUARTILE-RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "INTERQUARTILE-RANGE (DATA)
The interquartile range is similar to the variance of a sample because both
are statistics that measure out ``spread out'' a sample is.  The interquartile
range is the difference between the 3/4 quantile (the upper quartile) and the
1/4 quantile (the lower quartile).")
    (:TYPE :CLASS :SYMBOL
     (:NAME "TUKEY-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FIRST-QUARTILE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THIRD-QUARTILE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TUKEY-SUMMARY-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See TUKEY-SUMMARY")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TUKEY-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "TUKEY-SUMMARY (DATA &KEY START END KEY)
Computes a Tukey five-number summary of the data.  That is, it returns, in
increasing order, the extremes and the quartiles: the minimum, the 1/4 quartile,
the median, the 3/4 quartile, and the maximum.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "STATISTICAL-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "DATA-LENGTH" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "VARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "STANDARD-DEVIATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "INTERQUARTILE-RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "SKEWNESS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SKEWNESS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INTERQUARTILE-RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STANDARD-DEVIATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DATA-LENGTH" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATISTICAL-SUMMARY-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See STATISTICAL-SUMMARY")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATISTICAL-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "STATISTICAL-SUMMARY (DATA &KEY START END KEY)
Compute the length, minimum, maximum, range, median, mode, mean, variance,
standard deviation, and interquartile-range of `sequence' from `start' to `end',
accessed by `key'.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LEVEL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGNIFICANCE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "SIGNIFICANCE NIL
NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STD-ERROR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-SIGNIFICANCE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "T-SIGNIFICANCE NIL
NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "T-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST-ONE-SAMPLE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "H0-MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See T-TEST-ONE-SAMPLE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "T-TEST-ONE-SAMPLE (DATA TAILS &OPTIONAL (H0-MEAN 0) &KEY START END KEY)
Returns the t-statistic for the mean of the data, which should be a sequence
of numbers.  Let D be the sample mean.  The null hypothesis is that D equals the
`H0-mean.' The alternative hypothesis is specified by `tails': `:both' means D
/= H0-mean, `:positive' means D > H0-mean, and `:negative' means D < H0-mean.

The function also returns the significance, the standard error, and the degrees
of freedom.  Signals `zero-variance' if that condition occurs.  Signals
`insufficient-data' unless there are at least two elements in the sample.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "T-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "BOTH" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "H0MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "See T-TEST")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "T-TEST (SAMPLE-1 SAMPLE-2 &OPTIONAL (TAILS BOTH) (H0MEAN 0))
Returns the t-statistic for the difference in the means of two samples, which
should each be a sequence of numbers.  Let D=mean1-mean2.  The null hypothesis
is that D=0.  The alternative hypothesis is specified by `tails': `:both' means
D/=0, `:positive' means D>0, and `:negative' means D<0.  Unless you're using
:both tails, be careful what order the two samples are in: it matters!

The function also returns the significance, the standard error, and the degrees
of freedom.  Signals `standard-error-is-zero' if that condition occurs.  Signals
`insufficient-data' unless there are at least two elements in each sample.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "D-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TIMES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "D-TEST-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TIMES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1000)
      ((:NAME "H0MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "See D-TEST")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "D-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "D-TEST (SAMPLE-1 SAMPLE-2 TAILS &KEY (TIMES 1000) (H0MEAN 0))
Two-sample test for difference in means.  Competes with the unmatched,
two-sample t-test.  Each sample should be a sequence of numbers.  We calculate
the mean of `sample-1' minus the mean of `sample-2'; call that D.  Under the null
hypothesis, D is zero.  There are three possible alternative hypotheses: D is
positive, D is negative, and D is either, and they are selected by the `tails'
parameter, which must be :positive, :negative, or :both, respectively.  We count
the number of chance occurrences of D in the desired rejection region, and
return the estimated probability.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "T-TEST-MATCHED" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST-MATCHED-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "BOTH" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "See T-TEST-MATCHED")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "T-TEST-MATCHED" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "T-TEST-MATCHED (SAMPLE1 SAMPLE2 &OPTIONAL (TAILS BOTH))
Returns the t-statistic for two matched samples, which should be equal-length
sequences of numbers.  Let D=mean1-mean2.  The null hypothesis is that D=0.  The
alternative hypothesis is specified by `tails': `:both' means D/=0, `:positive'
means D>0, and `:negative' means D<0.  Unless you're using :both tails, be
careful what order the two samples are in: it matters!

The function also returns the significance, the standard error, and the degrees
of freedom.  Signals `standard-error-is-zero' if that condition occurs.  Signals
`insufficient-data' unless there are at least two elements in each sample.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "Z-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "Z-TEST-ONE-SAMPLE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TAILS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "H0-MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0)
      ((:NAME "H0-STD-DEV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STANDARD-ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See Z-TEST-ONE-SAMPLE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "Z-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Z-TEST-ONE-SAMPLE (DATA TAILS &OPTIONAL (H0-MEAN 0) (H0-STD-DEV 1) &KEY START
                   END KEY)
NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INNER-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "START2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the inner product of the two samples, which should be sequences of
numbers.  The inner product, also called the dot product or vector product, is
the sum of the pairwise multiplication of the numbers.  Stops when either sample
runs out; it doesn't check that they have the same length.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "COVARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COVARIANCE-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "START2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See COVARIANCE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COVARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "COVARIANCE (SAMPLE1 SAMPLE2 &KEY START1 END1 START2 END2)
Computes the covariance of two samples, which should be equal-length
sequences of numbers.  Covariance is the inner product of differences between
sample elements and their sample means.  For more information, see the manual.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LOWER-BOUND" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "UPPER-BOUND" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "CONFIDENCE-INTERVAL NIL
NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-Z" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-Z-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "CONFIDENCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See CONFIDENCE-INTERVAL-Z")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-Z" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "CONFIDENCE-INTERVAL-Z (DATA CONFIDENCE)
Suppose you have a sample of 50 numbers and you want to compute a 90 percent
confidence interval on the population mean.  This function is the one to use.
Note that it makes the assumption that the sampling distribution is normal, so
it's inappropriate for small sample sizes.  Use confidence-interval-t instead.
It returns three values: the mean and the lower and upper bound of the
confidence interval.  True, only two numbers are necessary, but the confidence
intervals of other statistics may be asymmetrical and these values would be
consistent with those confidence intervals.  This function handles 90, 95 and 99
percent confidence intervals as special cases, so those will be quite fast.
`Sample' should be a sequence of numbers.  `Confidence' should be a number
between 0 and 1, exclusive.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-Z-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "STANDARD-ERROR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "CONFIDENCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function is just like `confidence-interval-z,' except that instead of
its arguments being the actual data, it takes the following summary statistics:
`mean', a point estimator of the mean of some normally distributed population;
and the `standard-error' of the estimator, that is, the estimated standard
deviation of the normal population.  `Confidence' should be a number between 0
and 1, exclusive.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-T" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-T-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "CONFIDENCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See CONFIDENCE-INTERVAL-T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-T" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "CONFIDENCE-INTERVAL-T (DATA CONFIDENCE)
Suppose you have a sample of 10 numbers and you want to compute a 90 percent
confidence interval on the population mean.  This function is the one to use.
This function uses the t-distribution, and so it is appropriate for small sample
sizes.  It can also be used for large sample sizes, but the function
`confidence-interval-z' may be computationally faster.  It returns three values:
the mean and the lower and upper bound of the confidence interval.  True, only
two numbers are necessary, but the confidence intervals of other statistics may
be asymmetrical and these values would be consistent with those confidence
intervals.  `Sample' should be a sequence of numbers.  `Confidence' should be a
number between 0 and 1, exclusive.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-T-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "DOF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "STANDARD-ERROR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "CONFIDENCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function is just like `confidence-interval-t,' except that instead of
its arguments being the actual data, it takes the following summary statistics:
`mean,' which is the estimator of some t-distributed parameter; `dof,' which is
the number of degrees of freedom in estimating the mean; and the
`standard-error' of the estimator.  In general, `mean' is a point estimator of
the mean of a t-distribution, which may be the slope parameter of a regression,
the difference between two means, or other practical t-distributions.
`Confidence' should be a number between 0 and 1, exclusive.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-PROPORTION" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
      (:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-PROPORTION-INTERNAL" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "CONFIDENCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See CONFIDENCE-INTERVAL-PROPORTION")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFIDENCE-INTERVAL-PROPORTION" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "CONFIDENCE-INTERVAL-PROPORTION (X N CONFIDENCE)
Suppose we have a sample of `n' things and `x' of them are ``successes.'' We
can estimate the population proportion of successes as x/n; call it `p-hat.'
This function computes the estimate and a confidence interval on it.  This
function is not appropriate for small samples with p-hat far from 1/2: `x'
should be at least 5, and so should `n'-`x.' This function returns three values:
p-hat, and the lower and upper bounds of the confidence interval.  `Confidence'
should be a number between 0 and 1, exclusive.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCHEFFE-TESTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GROUP-MEANS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "GROUP-SIZES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MS-ERROR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DF-ERROR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Performs all pairwise comparisons between group means, testing for
significance using Scheffe's F-test.  Returns an upper-triangular table in a
format described in the manual.  Also see the function `print-scheffe-table.'

`Group-means' and `group-sizes' should be sequences.  The arguments `ms-error'
and `df-error' are the mean square error within groups and its degrees of
freedom, both of which are computed by the analysis of variance.  An ANOVA test
should always be run first, to see if there are any significant differences.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-SCHEFFE-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SCHEFFE-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GROUP-MEANS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Prints `scheffe-table' on `stream.' If the original one-way anova data had N
groups, the Scheffe table prints as an n-1 x n-1 upper-triangular table.  If
`group-means' is given, it should be a list of the group means, which will be
printed along with the table.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CROSS-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER-LIST-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "NUMBER-LIST-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Takes two sequences of numbers and returns a sequence of cross products.
Formula XYi = Xi * Yi.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOT-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER-LIST-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "NUMBER-LIST-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Takes two sequences of numbers and returns the dot product.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "R-SCORE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NUMBER-LIST-1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "NUMBER-LIST-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Takes two sequences and returns the correlation coefficient.
Formula:  Sum (Cross-product (Difference-list (number-list-1)
   			Difference-list (number-list-2)) /
	    (Sqrt (Sum-of-Squares (number-list-1) *
		Sum-of-Squares (number-list-2)))).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIFFERENCE-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NUMBER-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Takes a sequence of numbers and returns a sequence of differences 
from the mean.
Formula: xi = Xi - Mean (X).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUM-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NUMBER-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "Takes a sequence of numbers and returns their sum.
Formula: Sum(X).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHI-SQUARE-2X2-COUNTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "C" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "D" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "YATES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Runs a chi-square test for association on a simple 2 x 2 table.  If `yates'
is nil, the correction for continuity is not done; default is t.

Returns the chi-square statistic and the significance of the value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHI-SQUARE-2X2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "V1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Performs a chi-square test for independence of the two variables, `v1' and
`v2.' These should be categorial variables with only two values; the function
will construct a 2x2 contingency table by counting the number of occurrences of
each combination of the variables.  See the manual for more details.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHI-SQUARE-RXC-COUNTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONTINGENCY-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the chi-square statistic and corresponding p-value for the given
contingency table.  The result says whether the row factor is independent of the
column factor.  Does not apply Yate's correction.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WAY-TOO-BIG-CONTINGENCY-TABLE-DIMENSION*" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "20")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CONTINGENCY-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "V1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Counts each unique combination of an element of `v1' and an element of `v2.'
Returns a two-dimensional table of integers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHI-SQUARE-RXC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "V1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "V2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Performs a chi-square test for independence of the two variables, `v1' and
`v2.' These should be categorial variables; the function will construct a
contingency table by counting the number of occurrences of each combination of
the variables.  See the manual for more details.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "G-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CONTINGENCY-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPECTED-VALUE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL)
      ((:NAME "ERROR-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Calculates the G-test for a contingency table.  The formula for the
G-test statistic is

2 * sum[f_ij log [f_ij/f-hat_ij]]

where f_ij is the ith by jth cell in the table and f-hat_ij is the
expected value of that cell.  If an expected-value-matrix is supplied,
it must be the same size as table and it is used for expected values,
in which case the G-test is a test of goodness-of-fit.  If the
expected value matrix is unsupplied, it is calculated from using the
formula

e_ij = [f_i* * f_*j] / f_**

where f_i*, f_*j and f_** are the row, column and grand totals
respectively.  In this case, the G-test is a test of independence.  The degrees of freedom is the same as for the chi-square statistic and the significance is obtained by comparing ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CRITICAL-VALUE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "P-FUNCTION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "P-VALUE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "X-TOLERANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 1.e-5)
      ((:NAME "Y-TOLERANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       1.e-5))
     :DOCUMENTATION
     "Returns the critical value of some statistic.  The function `p-function'
should be a unary function mapping statistics---x values---to their
significance---p values.  The function will find the value of x such that the
p-value is `p-value.' The function works by binary search.  A secant method
might be better, but this seems to be acceptably fast.  Only positive values of
x are considered, and `p-function' should be monotonically decreasing from its
value at x=0.  The binary search ends when either the function value is within
`y-tolerance' of `p-value' or the size of the search region shrinks to less than
`x-tolerance.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEDIAN-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the median of it and its
neighbor on the left.  A median of two elements is the same as their mean.  The
end is handled by duplicating the end element.  This function is not
destructive; it returns a list the same length as `data,' which should be a
sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEDIAN-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the median of it and its two
neighbors.  The ends are handled by duplicating the end elements.  This function
is not destructive; it returns a list the same length as `data,' which should be
a sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEDIAN-4" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the median of it, its left
neighbor, and its two right neighbors.  The ends are handled by duplicating the
end elements.  This function is not destructive; it returns a list the same
length as `data,' which should be a sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEDIAN-5" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the median of it, its two left
neighbors and its two right neighbors.  The ends are handled by duplicating the
end elements.  This function is not destructive; it returns a list the same
length as `data,' which should be a sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-HANNING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the weighted mean of it and its
two neighbors.  The weights are 1/2 for itself and 1/4 for each neighbor.  The
ends are handled by duplicating the end elements.  This function is not
destructive; it returns a list the same length as `data,' which should be a
sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-4253H" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by successive smoothing: 4,median; then 2,median; then
5,median; then 3,median; then hanning.  The ends are handled by duplicating the
end elements.  This function is not destructive; it returns a list the same
length as `data,' which should be a list of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEAN-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "With a window of size two, the median and mean smooth functions are the
same.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEAN-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the mean of it and its two
neighbors.  The ends are handled by duplicating the end elements.  This function
is not destructive; it returns a list the same length as `data,' which should be
a sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEAN-4" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the mean of it, its left
neighbor, and its two right neighbors.  The ends are handled by duplicating the
end elements.  This function is not destructive; it returns a list the same
length as `data,' which should be a sequence of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-MEAN-5" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooths `data' by replacing each element with the median of it, its two left
neighbors and its two right neighbors.  The ends are handled by duplicating the
end elements.  This function is not destructive; it returns a list the same
length as `data,' which should be a sequence of numbers.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CORRELATION-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SAMPLE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "START2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "END2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See CORRELATION")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "CORRELATION (SAMPLE1 SAMPLE2 &KEY START1 END1 START2 END2)
Computes the correlation coefficient of two samples, which should be
equal-length sequences of numbers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CORRELATION-FROM-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "XY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the correlation of two variables given summary statistics of the
variables.  All of these arguments are summed over the variable: `x' is the sum
of the x's, `x2' is the sum of the squares of the x's, and `xy' is the sum of
the cross-products, which is also known as the inner product of the variables x
and y.  Of course, `n' is the number of data values in each variable.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARTIALS-FROM-PARENTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FROM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "TO" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "PARENTS-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGGED-CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SEQUENCE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "LAG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the correlations of `sequence1' with `sequence2' after
shifting `sequence1' by `lag'.  This means that for all n, element n
of `sequence1' is paired with element n+`lag' of `sequence2', where
both of those elements exist.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CROSS-CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CROSS-CORRELATION-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "SEQUENCE2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MAX-LAG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MIN-LAG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "See CROSS-CORRELATION")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CROSS-CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "CROSS-CORRELATION (SEQUENCE1 SEQUENCE2 MAX-LAG &OPTIONAL (MIN-LAG 0))
Returns a list of the correlation coefficients for all lags from
`min-lag' to `max-lag,' inclusive, where the `i'th list element is the
correlation of the first (length-of-sequence1 - i) elements of
sequence1 with with the last i elements of sequence2.  Both sequences
should be sequences of numbers and of equal length.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "AUTOCORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "SIMPLE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AUTOCORRELATION-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "MAX-LAG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MIN-LAG" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "See AUTOCORRELATION")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AUTOCORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "AUTOCORRELATION (SAMPLE MAX-LAG &OPTIONAL (MIN-LAG 0))
Autocorrelation is merely a cross-correlation between a sample and itself.
This function returns a list of correlations, where the i'th element is the
correlation of the sample with the sample starting at `i.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-MINIMAL-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "XY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the slope and intercept of the regression line.  This function
differs from `linear-regression-minimal' in that it takes summary statistics:
`x' and `y' are the sums of the independent variable and dependent variables,
respectively; `x2' and `y2' are the sums of the squares of the independent
variable and dependent variables, respectively; and `xy' is the sum of the
products of the independent and dependent variables.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-MINIMAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the slope and intercept of the regression line.  This function
takes two equal-length sequences of raw data.  Note that the dependent variable,
as always, comes first in the argument list.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-BRIEF-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "XY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the main statistics of a linear regression: the slope and
intercept of the line, the coefficient of determination, also known as r-square,
the standard error of the slope, and the p-value for the regression.  This
function differs from `linear-regression-brief' in that it takes summary
variables: `x' and `y' are the sums of the independent variable and dependent
variables, respectively; `x2' and `y2' are the sums of the squares of the
independent variable and dependent variables, respectively; and `xy' is the sum
of the products of the independent and dependent variables.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-BRIEF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the main statistics of a linear regression: the slope and
intercept of the line, the coefficient of determination, also known as r-square,
the standard error of the slope, and the p-value for the regression.  This
function takes two equal-length sequences of raw data.  Note that the dependent
variable, as always, comes first in the argument list.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-VERBOSE-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "X2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "Y2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "XY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates almost every statistic of a linear regression: the slope and
intercept of the line, the standard error on each, the correlation coefficient,
the coefficient of determination, also known as r-square, and an ANOVA table as
described in the manual.

If you don't need all this information, consider using the ``-brief'' or
``-minimal'' functions, which do less computation.

This function differs from `linear-regression-verbose' in that it takes summary
variables: `x' and `y' are the sums of the independent variable and dependent
variables, respectively; `x2' and `y2' are the sums of the squares of the
independent variable and dependent variables, respectively; and `xy' is the sum
of the products of the independent and dependent variables.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-REGRESSION-VERBOSE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates almost every statistic of a linear regression: the slope and
intercept of the line, the standard error on each, the correlation coefficient,
the coefficient of determination, also known as r-square, and an ANOVA table as
described in the manual.

This function takes two equal-length sequences of raw data.  Note that the
dependent variable, as always, comes first in the argument list.  If you don't
need all this information, consider using the ``-brief,'' or ``-minimal''
functions, which do less computation.

You should first look at your data with a scatter plot to see if a linear model
is plausible.  See the manual for a fuller explanation of linear regression
statistics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-LINEAR-REGRESSION-NORMAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Performs linear regression of the dependent variable, `dv,' on multiple
independent variables, `ivs.' Y on multiple X's, calculating the intercept and
regression coefficient.  Calculates the F statistic, intercept and the
correlation coefficient for Y on X's.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-LINEAR-REGRESSION-ARRAYS" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is an internal function for the use of the multiple-linear-regression
functions.  It takes the lists of values given by CLASP and puts them into a
pair of arrays, A and b, suitable for solving the matrix equation Ax=b, to find
the regression equation.  The values are A and b.  The first column of A is the
constant 1, so that an intercept will be included in the regression model.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-LINEAR-REGRESSION-MINIMAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Let m be the number of independent variables, `ivs.'  This function returns
a vector of length m which are the coefficients of a linear equation that best
predicts the dependent variable, `dv,' in the least squares sense.

This function returns the minimal information for a least squares regression
model, namely a list of the coefficients of the ivs, with the constant term
first.  Consider using the sibling functions -brief and -verbose if you want
more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-LINEAR-REGRESSION-BRIEF" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Let m be the number of independent variables, `ivs.' This function returns a
vector of length m which are the coefficients of a linear equation that best
predicts the dependent variable, `dv,' in the least squares sense.  It also
returns, as the second value, the sum of squared deviations of the data from the
fitted model, aka SSE, aka chi-square.  The third value is the number of degrees
of freedom for the chi-square, if you want to test the fit.

This function returns an intermediate amount of information.  Consider using the
sibling functions -minimal and -verbose if you want less or more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-LINEAR-REGRESSION-VERBOSE" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Let m be the number of independent variables, `ivs.' This function returns
fourteen values:
 1. the intercept
 2. a list of coefficients
 3. a list of correlations of each iv to the dv and to each iv
 4. a list of the t-statistic for each coefficient
 5. a list of the standardized coefficients (betas)
 6. the fraction of variance accounted for, aka r-square
 7. the ratio of MSR (see #12) to MSE (see #13), aka F 
 8. a list of the portion of the SSR due to each iv
 9. a list of the fraction of variance accounted for by each iv
10. the sum of squares of the regression, aka SSR
11. the sum of squares of the residuals, aka SSE, aka chi-square
12. the mean squared error of the regression, aka MSR
13. the mean squared error of the residuals, aka MSE
14. a list of indices of ``zeroed'' independent variables

This function returns a lot of information about the regression.  Consider using
the sibling functions -minimal and -brief if you need less information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CORRELATION-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IVS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a matrix of all the correlations of all the variables.  The dependent
variable is row and column zero.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ANOVA-ONE-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ANOVA-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MEANS-LIST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SCHEFFE-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SST-ALT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-ONE-WAY-VARIABLES-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "IV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCHEFFE-TESTS-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CONFIDENCE-INTERVALS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION "See ANOVA-ONE-WAY-VARIABLES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-ONE-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "ANOVA-ONE-WAY-VARIABLES (IV DV &OPTIONAL (SCHEFFE-TESTS-P T)
                         CONFIDENCE-INTERVALS)
Performs a one-way analysis of variance (ANOVA) on the input data, which
should be two equal-length sequences: `iv' is the independent variable,
represented as a sequence of categories or group identifiers, and `dv' is the
dependent variable, represented as a sequence of numbers.  The `iv' variable
must be ``sorted,'' meaning that AAABBCCCCCDDDD is okay but ABCDABCDABDCDC is
not, where A, B, C and D are group identifiers.  Furthermore, each group should
consist of at least 2 elements.

The significance of the result indicates that the group means are not all equal;
that is, at least two of the groups have significantly different means.  If
there were only two groups, this would be semantically equivalent to an
unmatched, two-tailed t-test, so you can think of the one-way ANOVA as a
multi-group, two-tailed t-test.

This function returns five values: 1.  an ANOVA table; 2.  a list a group
means; 3.  either a Scheffe table or nil depending on `scheffe-tests-p'; and
4.  an alternate value for SST. 5. a list of confidence intervals in the form
`(,mean ,lower ,upper) for each group, if `confidence-intervals' is a number
between zero and one, giving the kind of confidence interval, such as 0.9. The
fourth value is only interesting if you think there are numerical accuracy
problems; it should be approximately equal to the SST value in the ANOVA
table.  This function differs from `anova-one-way-groups' only in its input
representation.  See the manual for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-ONE-WAY-GROUPS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCHEFFE-TESTS-P" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CONFIDENCE-INTERVALS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Performs a one-way analysis of variance (ANOVA) on the `data,' which should
be a sequence of sequences, where each interior sequence is the data for a
particular group.  Furthermore, each sequence should consist entirely of
numbers, and each should have at least 2 elements.

The significance of the result indicates that the group means are not all equal;
that is, at least two of the groups have significantly different means.  If
there were only two groups, this would be semantically equivalent to an
unmatched, two-tailed t-test, so you can think of the one-way ANOVA as a
multi-group, two-tailed t-test.

This function returns five values: 1.  an ANOVA table; 2.  a list a group means;
3.  either a Scheffe table or nil depending on `scheffe-tests-p'; 4.  an
alternate value for SST; and 5.  a list of confidence intervals in the form
`(,mean ,lower ,upper) for each group, if `confidence-intervals' is a number between
zero and one, giving the kind of confidence interval, such as 0.9.  The fourth
value is only interesting if you think there are numerical accuracy problems; it
should be approximately equal to the SST value in the ANOVA table.  This
function differs from `anova-one-way-variables' only in its input
representation.  See the manual for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-ANOVA-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANOVA-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Prints `anova-table' on `stream.'")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-TWO-WAY-GROUPS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA-ARRAY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calculates the analysis of variance when there are two factors that may
affect the dependent variable.  Because the input is represented as an array, we
can refer to these two factors as the row-effect and the column effect.  Unlike
the one-way ANOVA, there are mathematical difficulties with the two-way ANOVA if
there are unequal cell sizes; therefore, we require all cells to be the same
size, and so the input is a three-dimensional array.

The result of the analysis is an anova-table, as described in the manual.  This
function differs from `anova-two-way-variables' only in its input
representation.  See the manual for further discussion of analysis of variance.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-3D-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Collects the `dv' values for each unique combination of an element of `v1'
and an element of `v2.' Returns a three-dimensional table of dv values.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ANOVA-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "AB-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ROW-TOTALS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COLUMN-TOTALS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GRAND-TOTLA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "A-LABELS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "B-LABELS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES-INTERNAL" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "IV1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES" :PACKAGE-NAME
      "CL-MATHSTATS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES (IV1 IV2 DV)
Calculates the analysis of variance when there are two factors that may
affect the dependent variable, specifically `iv1' and `iv2.'

Unlike the one-way ANOVA, there are mathematical difficulties with the two-way
ANOVA if there are unequal cell sizes. This function differs fron the standard
two-anova by (1) the use of cell means as single scores, (2) the division of
squared quantities by the number of cell means contributing to the quantity
that is squared and (3) the multiplication of a \"sum of squares\" by the harmonic
mean of the sample sizes.

The result of the analysis is an anova-table, as described in the manual.
See the manual for further discussion of analysis of
variance.  The row effect is `iv1' and the
column effect is `iv2.'")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "COMPOSITE-STATISTIC" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ANOVA-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES-INTERNAL" :PACKAGE-NAME "CL-MATHSTATS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DV" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV1" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL)
      (:NAME "IV2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "See ANOVA-TWO-WAY-VARIABLES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANOVA-TWO-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP NIL))
     :DOCUMENTATION "ANOVA-TWO-WAY-VARIABLES (DV IV1 IV2)
Calculates the analysis of variance when there are two factors that may
affect the dependent variable, specifically `iv1' and `iv2.' Unlike the one-way
ANOVA, there are mathematical difficulties with the two-way ANOVA if there are
unequal cell sizes; therefore, we require all cells to be the same size; that
is, the same number of values (of the dependent variable) for each combination
of the independent factors.

The result of the analysis is an anova-table, as described in the manual.  This
function differs from `anova-two-way-groups' only in its input representation.
See the manual for further discussion of analysis of variance.  
The row effect is `iv1' and the column effect is `iv2.'"))
   :EXTERNAL-SYMBOLS
   ((:NAME "F-MEASURE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "DIV2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "GAUSSIAN-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "FACTORIAL-LN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "DATA-LENGTH" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+15DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CHI-SQUARE-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "GAMMA-INCOMPLETE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BINOMIAL-CDF-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONFIDENCE-INTERVAL-T" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MODE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ANOVA-TWO-WAY-VARIABLES-UNEQUAL-CELL-SIZES" :PACKAGE-NAME
     "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+330DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEAN-4" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "STANDARD-DEVIATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+E+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEAN-5" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-4253H" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MULTIPLE-LINEAR-REGRESSION-NORMAL" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "MULTIPLE-MODES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEDIAN-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "WITHOUT-FLOATING-UNDERFLOW-TRAPS" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "LOG2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+90DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ANOVA-TWO-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MULTIPLE-LINEAR-REGRESSION-BRIEF" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "+5DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+60DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+30DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "FPI" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-BRIEF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "DOT-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BINOMIAL-PROBABILITY-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "Z-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "AUTOCORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "R-SCORE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "TUKEY-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BINOMIAL-PROBABILITY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "FACTORIAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "T-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LAGGED-CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEDIAN-4" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "STATISTICAL-SUMMARY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "T-TEST-ONE-SAMPLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MULTIPLE-LINEAR-REGRESSION-ARRAYS" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "TRUNC2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MAXIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "EXP2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "INTERQUARTILE-RANGE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONFIDENCE-INTERVAL-Z" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SKEWNESS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "TRUNCATE-TO-FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "VARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+45DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONVERT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "NORMALIZE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+360DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-SCALE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+210DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "WITH-TEMP-VECTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-BRIEF-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "+270DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+0DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-VERBOSE-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "+150DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONFIDENCE-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "UNDERFLOW-GOES-TO-ZERO" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "COVARIANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "TRANSPOSE-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+240DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "TIMES2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "GAMMA-LN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEAN-2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONFIDENCE-INTERVAL-PROPORTION" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "T-TEST-MATCHED" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MINIMUM" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SUM-OF-ARRAY-ELEMENTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BINOMIAL-COEFFICIENT-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "BINOMIAL-COEFFICIENT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+300DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "GAUSSIAN-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CONFIDENCE-INTERVAL-T-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "TRIMMED-MEAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MATRIX-MULTIPLY" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "FACTORIAL-EXACT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "DEGREES->RADIANS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEAN-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MULTIPLE-LINEAR-REGRESSION-VERBOSE" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "SMOOTH-HANNING" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "WITH-TEMP-TABLE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BETA-INCOMPLETE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "QUANTILE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "COMBINATION-COUNT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "2FPI" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "EXTRACT-UNIQUE-VALUES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BETA" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "D-TEST" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CORRELATION-MATRIX" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MEDIAN" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "PARTIALS-FROM-PARENTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+180DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CROSS-CORRELATION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ERROR-FUNCTION" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "STUDENTS-T-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SCHEFFE-TESTS" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MULTIPLE-LINEAR-REGRESSION-MINIMAL" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "+135DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ON-INTERVAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SMOOTH-MEDIAN-3" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+315DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ANOVA-ONE-WAY-VARIABLES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+10DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CROSS-PRODUCT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "SQUARE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ENSURE-FLOAT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "PERMUTATION-COUNT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-MINIMAL-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS"
     :EXTERNALP T)
    (:NAME "ROUND-TO-FACTOR" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-MINIMAL" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "SAFE-EXP" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "CORRELATION-FROM-SUMMARIES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "SMOOTH-MEDIAN-5" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MATRIX-TRACE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "ERROR-FUNCTION-COMPLEMENT" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "POISSON-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "BINOMIAL-CDF" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "LINEAR-REGRESSION-VERBOSE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP
     T)
    (:NAME "+120DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "F-SIGNIFICANCE" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "MOD2" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "RADIANS->DEGREES" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)
    (:NAME "+225DEGREES+" :PACKAGE-NAME "CL-MATHSTATS" :EXTERNALP T)))))
