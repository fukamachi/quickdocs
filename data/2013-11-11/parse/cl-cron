
(:TYPE :SYSTEM :NAME "cl-cron" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.1"
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("BORDEAUX-THREADS") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-CRON" :FULL-NAME "CL-CRON" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*DAY-LIST*" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "'(:MONDAY :TUESDAY :WEDNESDAY :THURSDAY :FRIDAY :SATURDAY :SUNDAY)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MONTH-LIST*" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(:JANUARY :FEBRUARY :MARCH :APRIL :MAY :JUNE :JULY :AUGUST :SEPTEMBER :OCTOBER
  :NOVEMBER :DECEMBER)")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CRON-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MINUTE" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-MINUTE" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HOUR" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-HOUR" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DAY-OF-MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-DOM" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DAY-OF-WEEK" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-DOW" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "AT-BOOT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "JOB-@BOOT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTION-SYMBOL" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       :ACCESSORS ((:NAME "JOB-FUNC" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CRON-JOBS-HASH*" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :DOCUMENTATION
     "contains a hash of all corn-job objects that need to be run"
     :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CRON-DISPATCHER-THREAD*" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :DOCUMENTATION "a parameter to that holds the cron-dispatcher thread"
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CRON-DISPATCHER-PROCESSING*" :PACKAGE-NAME "CL-CRON" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "allows us to not kill the thread unless the lock can be acquired"
     :INITIAL-VALUE "(BORDEAUX-THREADS:MAKE-LOCK)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CRON-LOAD-FILE*" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
     :DOCUMENTATION
     "a parameter which points to a lisp or fasl file which would be loaded once start-cron is called. The boot file should be made of as many make-cron-job calls as you like one after the other in normal s-expression fashion."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CRON-LOG-FILE*" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
     :DOCUMENTATION "a parameter to set the cron file log location."
     :INITIAL-VALUE "\"./cl-cron.log\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CRON-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION-SYMBOL" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MINUTE" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "EVERY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "STEP-MIN" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1)
      ((:NAME "HOUR" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "EVERY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "STEP-HOUR" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1)
      ((:NAME "DAY-OF-MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "EVERY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "STEP-DOM" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1)
      ((:NAME "MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "EVERY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "STEP-MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1)
      ((:NAME "DAY-OF-WEEK" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "EVERY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "STEP-DOW" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1)
      ((:NAME "BOOT-ONLY" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "HASH-KEY" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "creates a new instance of a cron-job object and appends it to the cron-jobs-list after processing its time. Note that if you wish to use multiple values for each parameter you need to provide a list of numbers or use the gen-list function. You can not have a list of symbols when it comes to month or day-of-week. Please note that as by ANSI Common Lisp for the month variable the possible values are between 1 and 12 inclusive with January=1 and for day of week the possible values are between 0 and 6 with Monday=0. Returns the hash-key")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELETE-CRON-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CRON-KEY" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION "deletes the cron job with the corresponding hash key")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-TO-RUN-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION
     "checks if it is time to run the current job based on the current time")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN-JOB-IF-TIME" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION
     "runs the cron-job object in a separate thread if it is its time")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN-JOB-IF-BOOT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION
     "runs the cron-job object in a separate thread if it is a boot job")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CRON-DISPATCHER" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "function that dispatches the jobs that are ready to be run")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "START-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "function that starts cron by first loading the cron file defined in the variable, then it runs any cron-job that has the job-only-at-boot property set to t. Finally, it starts a thread that runs cron-dispatcher")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTART-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "function that starts up cron but without loading the file or running any of the boot only cron jobs in the list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STOP-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "allows the stoppage of cron through the killing of the cron-dispatcher. Note that cron-dispatcher is killed only if it is sleeping otherwise we wait till the cron jobs finish. To reuse cron after calling stop-cron, you would need to recall start-cron which would go through all the steps as if cron has just booted. If you wish to prevent these actions when you restart cron then please you restart-cron.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-CRON-GET-METHODS" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TAG-NAME" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "UNIT-TOTAL-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ALLOWS-SYMBOLS" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SYMBOL-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SYMBOL-OFFSET" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-MINUTES" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP-UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-HOURS" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP-UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DAYS-OF-MONTH" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP-UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-MONTHS" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP-UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DAYS-OF-WEEK" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP-UNIT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GEN-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "START-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "END-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INCREMENT" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL) 1))
     :DOCUMENTATION
     "functions that returns a list of numbers starting with start-list and ending with end-list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MIN-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :DOCUMENTATION
     "finds the minimum element of a list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAX-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)) :DOCUMENTATION
     "finds the minimum element of a list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-INTERNAL-LISTS" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL))
     :DOCUMENTATION
     "function that takes a list and returns a list but with all internal lists expanded")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENTS-WITHIN-STEP" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "function that returns a list of elements that are within a step from each other starting with the first element in the list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-UNTIL-FULL-MINUTE" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOG-CRON-MESSAGE" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MESSAGE" :PACKAGE-NAME "CL-CRON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "error"))
     :DOCUMENTATION "Simply log the message sent with type as well"))
   :EXTERNAL-SYMBOLS
   ((:NAME "MAKE-CRON-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "START-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "GEN-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "MIN-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "DELETE-CRON-JOB" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "LOG-CRON-MESSAGE" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "RESTART-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "STOP-CRON" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "*CRON-LOAD-FILE*" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "*CRON-LOG-FILE*" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)
    (:NAME "MAX-LIST" :PACKAGE-NAME "CL-CRON" :EXTERNALP T)))))
