
(:TYPE :SYSTEM :NAME "html-template" :AUTHOR NIL :MAINTAINER NIL :VERSION
 "0.9.1" :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "HTML-TEMPLATE" :FULL-NAME "HTML-TEMPLATE"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*FIND-STRING-HASH*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION
     "Hash tables used internally by READ-UNTIL to cache offset arrays."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-START-MARKER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :DOCUMENTATION "The string template tags must start with" :INITIAL-VALUE
     "\"<!--\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-END-MARKER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION "The string template tags must end with" :INITIAL-VALUE
     "\"-->\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINTER-HASH*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION "The cache for template printers.
Each entry is of the form (PRINTER . WRITE-DATE)."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-TEMPLATE-PATHNAME*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION
     "Each pathname is merged with this value before it is used by
CREATE-TEMPLATE-PRINTER."
     :INITIAL-VALUE "(MAKE-PATHNAME)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION
     "The output stream used by FILL-AND-PRINT-TEMPLATE when no STREAM
keyword was provided."
     :INITIAL-VALUE "*STANDARD-OUTPUT*")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION "The output stream that's used internally." :INITIAL-VALUE
     "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONVERT-NIL-TO-EMPTY-STRING*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether NIL values should resolve to empty strings or
raise an error."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FORMAT-NON-STRINGS*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION "Controls whether TMPL_VAR will accept values which aren't
strings and convert them using (FORMAT NIL \"~A\" ...)."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SEQUENCES-ARE-LISTS*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether TMPL_LOOP printers expect lists or vectors."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UPCASE-ATTRIBUTE-STRINGS*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether attribute strings associated with template tags
are upcased before they are interned."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*NO-CACHE-CHECK*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether the FILE-WRITE-DATE check will be circumvented
when using FILL-AND-PRINT-TEMPLATE."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TEMPLATE-SYMBOL-PACKAGE*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION "The package symbols are interned into." :INITIAL-VALUE
     "(FIND-PACKAGE '#:KEYWORD)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*IGNORE-EMPTY-LINES*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether template tags on their own lines produce empty
lines or not."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WARN-ON-CREATION*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION
     "Controls whether a warning should be signaled if a new template
printer is created from a pathname argument."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-LINE*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION "Internal line counter of the parser." :INITIAL-VALUE "1")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-COLUMN*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION "Internal column counter of the parser." :INITIAL-VALUE
     "0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INCLUDED-FILES*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION
     "Internally used by CREATE-TEMPLATE-PRINTER-AUX to avoid infinite
TMPL_INCLUDE loops."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EXTERNAL-FORMAT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION "The external format used when opening files."
     :INITIAL-VALUE ":DEFAULT")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*VALUE-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :DOCUMENTATION
     "The function which associates (attribute) symbols with their
values."
     :INITIAL-VALUE "(LAMBDA (SYMBOL VALUES &OPTIONAL HTML-TEMPLATE::IN-LOOP-P)
  (LET ((HTML-TEMPLATE::RESULT (GETF VALUES SYMBOL)))
    (COND
     ((AND HTML-TEMPLATE::IN-LOOP-P HTML-TEMPLATE:*SEQUENCES-ARE-LISTS*)
      (LOOP HTML-TEMPLATE::FOR HTML-TEMPLATE::ELEMENT HTML-TEMPLATE::IN HTML-TEMPLATE::RESULT
            WHEN (AND HTML-TEMPLATE::ELEMENT (LISTP HTML-TEMPLATE::ELEMENT))
            HTML-TEMPLATE::COLLECT (APPEND HTML-TEMPLATE::ELEMENT
                                           VALUES) HTML-TEMPLATE::ELSE
            HTML-TEMPLATE::COLLECT HTML-TEMPLATE::ELEMENT))
     (T HTML-TEMPLATE::RESULT))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CALL-TEMPLATE-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :DOCUMENTATION "Accessor function for extracting the called template from a
TMPL_CALL form."
     :INITIAL-VALUE "#'CAR")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CALL-VALUE-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "Accessor function for extracting the values from a TMPL_CALL
form."
     :INITIAL-VALUE "#'CDR")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FORCE-DEFAULT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION "The default value for the FORCE keyword argument to
CREATE-TEMPLATE-PRINTER."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STRING-MODIFIER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION "The function which is applied to strings which replace
TMPL_VAR tags.  Use #'CL:IDENTITY if you don't want to change the
strings."
     :INITIAL-VALUE "'HTML-TEMPLATE:ESCAPE-STRING-ISO-8859-1")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ESCAPE-CHAR-P*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :DOCUMENTATION
     "Used by ESCAPE-STRING to test whether a character should be escaped."
     :INITIAL-VALUE
     "#'(LAMBDA (CHAR) (OR (FIND CHAR \"<>&'\\\"\") (> (CHAR-CODE CHAR) 127)))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HYPERDOC-BASE-URI*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"http://weitz.de/html-template/\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HYPERDOC-LOOKUP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "SYNTAX-ERROR-LOCATION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Structure to store parser locations consisting of a stream, a line
number, and a column number."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LINE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SYNTAX-ERROR-LOCATION" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "LINE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "COL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "STREAM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM2" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SYNTAX-ERROR-LOCATION*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "Used internally to remember the last position which made sense to
the parser."
     :INITIAL-VALUE "(HTML-TEMPLATE::MAKE-SYNTAX-ERROR-LOCATION)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIGNAL-TEMPLATE-INVOCATION-ERROR" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORMAT-CONTROL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT-ARGUMENTS" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIGNAL-TEMPLATE-MISSING-VALUE-ERROR" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORMAT-CONTROL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT-ARGUMENTS" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIGNAL-TEMPLATE-SYNTAX-ERROR" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORMAT-CONTROL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT-ARGUMENTS" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SYNTAX-ERROR-LOCATION" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is wrapped around forms in order to remember a meaningful
position within the stream in case an error has to be signaled.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NO-VALUES" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "A function which does not return any values. This is always the
last function in a chain of template printer closures.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-TO-STRING" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Concatenates a list of strings to one string in reverse order. The
list is destructively modified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%READ-CHAR" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Like READ-CHAR but updates the line and column counters.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WHITESPACEP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Checks whether CHAR is whitespace.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-WHILE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EOF-ACTION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Reads characters from *STANDARD-INPUT* while PREDICATE returns a
true value for each character. Returns the string which was read
unless SKIP is true. On reading EOF an error is signaled if
EOF-ACTION is T, NIL is silently returned if EOF-ACTION is NIL, or the
function EOF-ACTION is called with one argument - the string read so
far.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DELIMITED-STRING" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EOF-ACTION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Reads and returns a string from *STANDARD-INPUT*. The string is
either delimited by ' or \" in which case the delimiters aren't
returned or it is assumed to extend to the next whitespace
character. See READ-WHILE's docstring for EOF-ACTION.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-WHITESPACE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ASSERT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EOF-ACTION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Read characters from *STANDARD-INPUT* as long as they are
whitespace. Signals an error if the first character read isn't
whitespace and ASSERT is true. Return the string which was read unless
SKIP is true. See READ-WHILE's docstring for EOF-ACTION.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-TRAILING-WHITESPACE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Reads and skips whitespace from *STANDARD-INPUT* until a #Newline
characters is seen if *IGNORE-EMPTY-LINES* is true. If there is no
#Newline before the first non-whitespace character the string read so
far is returned (wrapped in a list).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-UNTIL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EOF-ACTION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Reads characters from *STANDARD-INPUT* up to and including
STRING. Return the string which was read (excluding STRING) unless
SKIP is true. See READ-WHILE's docstring for EOF-ACTION.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-LEADING-WHITESPACE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Removes whitespace from the end of STRING up to and including a
#Newline. If there is no #Newline before the first non-whitespace
character is seen nothing is removed. STRING must have a fill
pointer.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TAG-REST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "READ-ATTRIBUTE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      ((:NAME "INTERN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EOF-ACTION" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Reads the rest of a template tag from *STANDARD-INPUT* after the
name of the tag has been read. Reads and returns the tag's attribute
if READ-ATTRIBUTE is true. Optionally also interns the attribute
string if INTERN is true. See READ-WHILE's docstring for EOF-ACTION.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-STRING" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "*ESCAPE-CHAR-P*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)))
     :DOCUMENTATION
     "Escape all characters in STRING which pass TEST. This function is
not guaranteed to return a fresh string.  Note that you can pass NIL
for STRING which'll just be returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-STRING-MINIMAL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Escape only #<, #>, and #& in STRING.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-STRING-MINIMAL-PLUS-QUOTES" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Like ESCAPE-STRING-MINIMAL but also escapes quotes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-STRING-ISO-8859-1" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Escapes all characters in STRING which aren't defined in ISO-8859-1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESCAPE-STRING-ALL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Escapes all characters in STRING which aren't in the 7-bit ASCII
character set.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-USE-VALUE-RESTART" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "ERROR-FORM" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Provide a USE-VALUE restart for ERROR-FORM in case the value
associated with SYMBOL isn't to our liking.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-SIMPLE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NO-VALUES" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))))
     :DOCUMENTATION
     "Used internally to create template printers for strings which don't
include template tags. NEXT-FN is the next function to be called in
the chain of closures. STRING-LIST is a list of strings in reverse
order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-VAR-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Used internally to create template printers for TMPL_VAR. SYMBOL is
the symbol associated with the tag. NEXT-FN is the next function to be
called in the chain of closures. STRING-LIST is a list of strings in
reverse order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-INCLUDE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Used internally to create template printers for TMPL_INCLUDE.
PATHNAME is the pathname associated with the tag. NEXT-FN is the next
function to be called in the chain of closures. STRING-LIST is a list
of strings in reverse order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-IF-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IF-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "ELSE-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "UNLESSP" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION "Used internally to create template printers for TMPL_IF and
TMPL_UNLESS tags. SYMBOL is the symbol associated with the tag.  IF-FN
is the printer for the IF branch, ELSE-FN is the printer for the ELSE
branch.  NEXT-FN is the next function to be called in the chain of
closures.  STRING-LIST is a list of strings in reverse order to be
printed first.  If UNLESSP is true, IF-FN and ELSE-FN are switched.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-LOOP-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION "Used internally to create template printers for TMPL_LOOP
tags. SYMBOL is the symbol associated with the tag. BODY-FN is the
template printer for the body of the loop. NEXT-FN is the next
function to be called in the chain of closures. STRING-LIST is a list
of strings in reverse order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-REPEAT-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION "Used internally to create template printers for TMPL_REPEAT
tags. SYMBOL is the symbol associated with the tag. BODY-FN is the
template printer for the body of the loop. NEXT-FN is the next
function to be called in the chain of closures. STRING-LIST is a list
of strings in reverse order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-CALL-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-LIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEXT-FN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Used internally to create template printers for TMPL_CALL tags.
SYMBOL is the symbol associated with the tag. BODY-FN is the template
printer for the body of the loop. NEXT-FN is the next function to be
called in the chain of closures. STRING-LIST is a list of strings in
reverse order to be printed first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-TEMPLATE-PRINTER-AUX" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING-STACK" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "END-TOKEN" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reads from *STANDARD-INPUT* and returns a template printer from
what it reads.  When this function is entered the stream pointer must
not be inside a template tag.  STRING-STACK is a list of strings (in
reverse order) read so far which haven't been used to build a template
printer.  END-TOKEN is either NIL or one of :LOOP, :REPEAT, :IF,
:IF-ELSE, or :UNLESS-ELSE denoting that we expect certain tags to
close open TMPL_LOOP, TMPL_REPEAT, TMPL_IF, or TMPL_UNLESS tags.  This
function returns a second value which is true if, after reading
TMPL_IF or TMPL_UNLESS, a corresponding TMPL_ELSE was seen.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%CREATE-TEMPLATE-PRINTER-AUX" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION "Wrapper for CREATE-TEMPLATE-PRINTER-AUX to initialize
*CURRENT-COLUMN* and *CURRENT-LINE*.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CREATE-TEMPLATE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORCE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "IF-DOES-NOT-EXIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL))
     :DOCUMENTATION "Creates a template printer from TEMPLATE which is
an open input stream, a string, or a pathname.  If FORCE is true a
printer will be newly created no matter what the state of the cache
is.  If FORCE is :DO-NOT-CACHE the newly created printer won't be
cached.  Other keyword arguments will be given to WITH-OPEN-FILE.
Keyword arguments will only be accepted if TEMPLATE is a PATHNAME.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-TEMPLATE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "INPUT-STREAM" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-TEMPLATE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-TEMPLATE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORCE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "*FORCE-DEFAULT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T))
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "IF-DOES-NOT-EXIST" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "ERROR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "*EXTERNAL-FORMAT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "TEMPLATE/PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Fills the template denoted by TEMPLATE/PRINTER with
VALUES and print it to STREAM. If TEMPLATE/PRINTER is a function uses
it as if it were a template printer, otherwise creates a printer (or
pull one out of the cache) with CREATE-TEMPLATE-PRINTER. Optional
keyword arguments are given to CREATE-TEMPLATE printer and can only be
used if TEMPLATE/PRINTER is a pathname.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "INPUT-STREAM" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-TEMPLATE-CACHE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Complete clears all template printers from the cache.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELETE-FROM-TEMPLATE-CACHE" :PACKAGE-NAME "HTML-TEMPLATE"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Deletes the template printer denoted by PATHNAME from the
cache. Returns true if such a printer existed, false otherwise."))
   :EXTERNAL-SYMBOLS
   ((:NAME "*TEMPLATE-SYMBOL-PACKAGE*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "ESCAPE-STRING-ISO-8859-1" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*IGNORE-EMPTY-LINES*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "TEMPLATE-NOT-A-STRING-ERROR-VALUE" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "*FORCE-DEFAULT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "TEMPLATE-NOT-A-STRING-ERROR" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "TEMPLATE-ERROR" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "ESCAPE-STRING-ALL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*VALUE-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*CALL-TEMPLATE-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "FILL-AND-PRINT-TEMPLATE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*DEFAULT-TEMPLATE-PATHNAME*" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "*SEQUENCES-ARE-LISTS*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*UPCASE-ATTRIBUTE-STRINGS*" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "TEMPLATE-SYNTAX-ERROR" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "CLEAR-TEMPLATE-CACHE" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*ESCAPE-CHAR-P*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "DELETE-FROM-TEMPLATE-CACHE" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "*DEFAULT-TEMPLATE-OUTPUT*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*CALL-VALUES-ACCESS-FUNCTION*" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "ESCAPE-STRING-MINIMAL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "TEMPLATE-INVOCATION-ERROR" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*WARN-ON-CREATION*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "ESCAPE-STRING-MINIMAL-PLUS-QUOTES" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "TEMPLATE-SYNTAX-ERROR-COL" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*STRING-MODIFIER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "CREATE-TEMPLATE-PRINTER" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "*NO-CACHE-CHECK*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*FORMAT-NON-STRINGS*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "TEMPLATE-SYNTAX-ERROR-LINE" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "TEMPLATE-MISSING-VALUE-ERROR" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "ESCAPE-STRING" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*CONVERT-NIL-TO-EMPTY-STRING*" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)
    (:NAME "*TEMPLATE-END-MARKER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP T)
    (:NAME "*TEMPLATE-START-MARKER*" :PACKAGE-NAME "HTML-TEMPLATE" :EXTERNALP
     T)
    (:NAME "TEMPLATE-SYNTAX-ERROR-STREAM" :PACKAGE-NAME "HTML-TEMPLATE"
     :EXTERNALP T)))))
