
(:TYPE :SYSTEM :NAME "femlisp" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("FEMLISP-BASIC" "FEMLISP-MATLISP") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "FL.FUNCTION" :FULL-NAME "FL.FUNCTION" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "The <function> class is an abstract class for a general
function.  This function will usually accept vector arguments, the dimensions of
domain and image are fixed when defining the function. If the function is
differentiable, the gradient matrix can be obtained by evaluating the gradient
slot."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "DOMAIN-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IMAGE-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "IMAGE-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MULTIPLE-EVALUATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Multiple evaluations of @arg{func} may be optimized.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-EVALUATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default and unoptimized method calls simply @function{evaluate}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-EVALUATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default and unoptimized method calls simply @function{evaluate}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generic evaluation of gradients of differentiable functions.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MULTIPLE-EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Multiple evaluations may be optimized.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default and unoptimized method calls simply @function{evaluate}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POSITIONS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default and unoptimized method calls simply @function{evaluate}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EVALUATE-K-JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Generic evaluation of k-jets of C^k-functions.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SMOOTHNESS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns smoothness of function. :INFINITY is returned for
infinitely differentiable functions.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns t if f is differentiable or differentiable of the
given degree.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "The default method returns @code{NIL}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "The default method returns @code{NIL}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-K-JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "By default, the k-jet evaluation handles the cases K=0 and K=1 by calls
to EVALUATE and EVALUATE-GRADIENT, respectively.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION
     "A <special-function> provides its own evaluation and gradient
computation."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EVALUATOR" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "EVALUATOR" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPECIAL-1D-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DF" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructs a special function between 1D-spaces from ordinary Lisp
functions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-K-JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION "For a <constant-function> evaluation and derivative
computation are trivial."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "VALUE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SMOOTHNESS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ZERO-K-JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-K-JET" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION "A <linear-function> is determined by a matrix A and a
vector b.  It represents the map @math{x -> Ax+b}."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SMOOTHNESS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPOSE-2" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FUNC1" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "FUNC2" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LINEARLY-TRANSFORMED-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION "<linearly-transformed-function> calls the original
function evaluation on linearly transformed coordinates and linearly
transforms also the result."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORIGINAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "ORIGINAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN-A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "DOMAIN-A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN-B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "DOMAIN-B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IMAGE-A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "IMAGE-A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IMAGE-B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "IMAGE-B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSFORM-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN-TRANSFORM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "IMAGE-TRANSFORM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERMEDIATE-COORDINATES" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEARLY-TRANSFORMED-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION"
        :EXTERNALP NIL))
      (:NAME "POS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEARLY-TRANSFORMED-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION"
        :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEARLY-TRANSFORMED-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION"
        :EXTERNALP NIL))
      (:NAME "POS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPOSE-2" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FUNC1" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "FUNC2" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPOSE-2" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FUNC1" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "FUNC2" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMERICAL-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SHIFT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1.e-8))
     :DOCUMENTATION "Computes the numerical gradient of func at pos.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "POS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Tests if numerical gradient and gradient agree.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMERICAL-COMPLEX-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes a very accurate real derivative for functions which can be
applied to complex arguments.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMERICAL-COMPLEX-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes a very accurate real derivative for functions which can be
applied to complex arguments.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERVAL-METHOD" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "ACCURACY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Finds zeros of functions in 1d by the interval method.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HOMOTOPY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNC1" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "FUNC2" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a function which uses its first coordinate as a homotopy
parameter.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLIPSE-MATRIX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RADIUS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "EXCENTRICITY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "PHI" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a matrix A suitable for describing the ellipse as (Ax,x)=1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROJECT-TO-ELLIPSOID" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MIDPOINT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a function which projects to the ellipsoid given by
Q(x-midpoint)=1 where Q is the quadratic form associated with the matrix
A.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROJECT-TO-SPHERE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MIDPOINT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "RADIUS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a function which projects to the sphere with given midpoint and
radius.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XN-DISTORTION-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "GRAD-F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a function which distorts the xn-coordinate by a factor f(x').
Also grad-f has to be provided.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CIRCLE-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIAL-DISTANCE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       1.0)
      ((:NAME "MIDPOINT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       ((:NAME "COERCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0.0 0.0))
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DOUBLE-VEC" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))))
      ((:NAME "OMEGA" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1.0)
      ((:NAME "PHI0" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 0.0))
     :DOCUMENTATION
     "Returns a special function drawing a polar around @arg{midpoint} with
distance given by the function or number @arg{radial-distance} with angular
velocity omega.  Without arguments it yields a function mapping @math{R^1}
isometrically to @math{S^1}.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SPARSE-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARGS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMPONENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPARSE-REAL-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SPARSE-F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Warning: works only for real-valued functions!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPARSE-REAL-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SPARSE-F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Warning: works only for real-valued functions!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNIT?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION "Multivariate polynomial.  The coefficients are
represented as nested lists."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COEFFS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "COEFFS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Constructor which simplifies the coefficient list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHIFT-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION "Shifts a polynomial in dimension, e.g. x_1 becomes x_2.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOTAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARTIAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "INDEX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARTIAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "INDEX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "VARIANCE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAXIMAL-PARTIAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLIFY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELIMINATE-SMALL-COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THRESHOLD" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1.e-12))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNIT?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNIT?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-INTO-MONOMIALS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "COEFFS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-MONOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COEFF&MONOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "REVERSED" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POLY-EVAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COEFFS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "COORDS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INNER" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNIT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNIT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY+" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "G" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY-EXPT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "N" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POLY-EXPT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "N" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SCAL!" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      ((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "M+" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "M+!" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "M+" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "M+" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AXPY!" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ALPHA" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "INDEX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "INDEX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "INDEX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPONENTS->MONOMIAL-LIST" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PARTITION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts a monomial given by a list of powers of its components into our
dense polynomial format.

Example: (exponents->monomial-list '(1 2)) -> (0 (0 0 1))
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-VARIATE-MONOMIALS-OF-DEGREE" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Returns n-variate monomials of degree being equal or being lower or
equal than deg.
Examples:
 (n-variate-monomials-of-degree 2 2) -> (x2^2 x1*x2 x1^2)
 (n-variate-monomials-of-degree 2 2 '<=)  -> (1 x2 x1 x2^2 x1*x2 x1^2)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-POLYNOMIALS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "POINTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGRATE-SIMPLE-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "POLY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-POLYNOM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION "This class implements a function which maps the unit
interval to a polygon."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POINTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "POINTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION "A vector of points for the polygon.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<PERIODIC-POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
     :DOCUMENTATION "This class implements a periodic polygon." :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NR-SEGMENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-SEGMENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<PERIODIC-POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-SEGMENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<PERIODIC-POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-SEGMENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-SEGMENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-SEGMENT-COORDINATES" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "S" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLYGON" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "S" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
       (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "K" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "APPLY-1D-STENCIL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STENCIL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "M-TIMES" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLINE-RIGHT-HAND-SIDE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOLVE-MOMENT-SYSTEM" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "B" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "N" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL) 50))
     :DOCUMENTATION "Solves moment system by Jacobi iteration.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBIC-SPLINE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "Y" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL))
     :DOCUMENTATION
     "On a regular partition of the unit interval interpolating values y are
given.  This function returns an interpolating spline.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SPLINE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "CUBIC-SPLINE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<CONSTANT-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "DIFFERENTIABLE-P" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "INTERVAL-METHOD" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "NUMERICAL-COMPLEX-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION"
     :EXTERNALP T)
    (:NAME "<LINEAR-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "ZERO?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "DIFFERENTIATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "SPARSE-REAL-DERIVATIVE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "XN-DISTORTION-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "PROJECT-TO-ELLIPSOID" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "ELLIPSE-MATRIX" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "POLY*" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "CIRCLE-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "SPLIT-INTO-MONOMIALS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "MAXIMAL-PARTIAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "DOMAIN-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "MAKE-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "VARIANCE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "NUMERICAL-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "PARTIAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "TOTAL-DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "SPARSE-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "INTEGRATE-SIMPLE-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
     T)
    (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "IMAGE-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<PERIODIC-POLYGON>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
    (:NAME "ELIMINATE-SMALL-COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION"
     :EXTERNALP T)
    (:NAME "SHIFT-POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "N-VARIATE-MONOMIALS-OF-DEGREE" :PACKAGE-NAME "FL.FUNCTION"
     :EXTERNALP T)
    (:NAME "POLYNOMIAL" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "MULTIPLE-EVALUATE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<SPECIAL-FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "MULTIPLE-EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP
     T)
    (:NAME "PROJECT-TO-SPHERE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "UNIT?" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "ZERO" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "TRANSFORM-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "HOMOTOPY" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "SPECIAL-1D-FUNCTION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "LAGRANGE-POLYNOMIALS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "UNIT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "POLY-EXPT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "DEGREE" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.MESH" :FULL-NAME "FL.MESH" :DOCUMENTATION
   "This module contains the definitions of meshes and
routines for mesh management.  The meshes allowed in @femlisp{} are more
general than those of most other software for solving PDEs.  In @femlisp{},
both mesh, domain and problem definitions are defined over an underlying
abstraction, the so-called @class{<skeleton>}.  A @class{<skeleton>}
captures the mathematical idea of a \"cell complex\" which builds a
topological space by mapping from standard cells @class{<cell>}.  Now, a
@class{<skeleton>} can be seen as mapping the cells of such a cell complex
to arbitrary values.  Then, a @class{<domain>} is a @class{<skeleton>}
where each cell (which we call \"patch\" in this case) is mapped to
geometric properties, and a @class{<mesh>} is a @class{<skeleton>} where
each cell is mapped to the patch to which it belongs.

The basic entities are the class @class{<cell>}, the subclass
@class{<simplex>} which in turn contains subclasses for arbitrarily
dimensional simplices generated on demand, and the subclass
@class{<product-cell>} containing arbitrary products of simplices, e.g. square
or cube.

Meshes can be refined either uniformly or locally using the Freudenthal
algorithm as presented in @cite{JBey_2000a} and generalized to product
elements.  When local refinement is used, hanging nodes may occur.  In
contrast to most other finite element software, in @femlisp{} the
difference of refinement levels of adjacent cells may be arbitrarily large.
Up to now, anisotropic refinement of product cells has not yet been
implemented."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The basic cell class." :SLOT-LIST
     NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "CELL-VEC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<STANDARD-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST ((:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "The standard cell in Femlisp is defined via its boundary."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "A vector of boundary cells.")))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin which distinguishes cells which are mapped by a
special mapping."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       ((:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DISTORTED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin which distinguishes if the cell mapping is a
distortion of the multilinear mapping."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPED-CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DISTORTED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Constructs a cell class with <mapped-cell> mixin.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNMAPPED-CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns the cell class without mapping mixin.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "No mapping for ordinary cells.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :DOCUMENTATION
     "The vertex class." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "VERTEX-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VERTEX?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VERTEX-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHECK-WELL-DEFINED-EMBEDDED-DIMENSION*" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :DOCUMENTATION "Checks if embedded dimension is well-defined."
     :INITIAL-VALUE "NIL")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Dimension of the embedding space for @arg{object}.  If
  @arg{check} is T, a test is performed if the dimension is well-defined
  for all parts of @arg{object}.  If not, NIL is returned.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Anchor for recursive definition.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Anchor for recursive definition.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Recursive definition, anchored at the definition for vertices.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Recursive definition, anchored at the definition for vertices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns a list of all vertices of the cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "G-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "The g-corners are the vertex positions of the cell's vertices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "G-CORNER-MATRIX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a matrix whose columns are the vertex positions of the cell's
vertices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns a list of corners of the cell, i.e. the global
positions of the cell's vertices.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIAMETER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the diameter of a cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIAMETER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "The default method maximizes the distance between the cell's corners.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIAMETER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "The default method maximizes the distance between the cell's corners.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "local->global checks if a mapping is given for the cell.
If yes, then this mapping is evaluated.  If no, then the function l2g is called
which should do a multilinear interpolation from the cell's corners.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "local->Dglobal checks if a mapping is given for the cell.
If yes, then the gradient of this mapping is evaluated (if available).  If no,
then the function l2Dg is called which gives the gradient for a multilinear
interpolation from the cell's corners.")
    (:TYPE :GENERIC :SYMBOL (:NAME "L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the global position by interpolation from the
vertices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MULTIPLE-L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the associated global positions by
interpolation from the vertices of @arg{cell}.")
    (:TYPE :GENERIC :SYMBOL (:NAME "L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the gradient for a multilinear
interpolation from the vertices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MULTIPLE-L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the gradients at the local positions for
@arg{cell}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BARYCENTRIC-COORDINATES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes barycentric coordinates for @arg{refcell} at
@arg{local-pos}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BARYCENTRIC-GRADIENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the gradients of the barycentric coordinates
for @arg{refcell} at @arg{local-pos}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-BARYCENTRIC-COORDINATES" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a vector of weight-vectors for the reference cell
@arg{refcell} at @arg{local-positions}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-BARYCENTRIC-GRADIENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a vector of weight-vectors for the reference cell
@arg{refcell} at @arg{local-positions}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOCAL-COORDINATES-OF-MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the local coordinates of the cell midpoint.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "L2G-EVALUATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns an evaluator for @arg{cell} which maps barycentric coordinates
to g-coordinates.")
    (:TYPE :METHOD :SYMBOL (:NAME "L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method uses a barycentric average of the vertex positions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method uses a barycentric average of the vertex positions.")
    (:TYPE :METHOD :SYMBOL (:NAME "L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method computes an average of the barycentric coordinate
gradients.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method uses a barycentric average of the vertex positions.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns cell midpoint in global coordinates.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ORIGIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns cell origin in global coordinates.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ORIGIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ORIGIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Default method.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-CELL*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION "If set to :MIDPOINT, prints the midpoint of a cell."
     :INITIAL-VALUE ":MIDPOINT")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Printing cells.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "CELL-CLASS-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Structure containing information necessary for cell handling." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FACTOR-SIMPLICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NR-OF-SIDES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NR-OF-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NR-OF-SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOUNDARY-INDICES-OF-SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFINEMENT-RULES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CELL-CLASS-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "DIMENSION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM572" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1)
      (((:NAME "REFERENCE-CELL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM573" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "FACTOR-SIMPLICES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM574" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "NR-OF-SIDES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM575" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1)
      (((:NAME "NR-OF-VERTICES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM576" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1)
      (((:NAME "NR-OF-SUBCELLS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM577" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1)
      (((:NAME "BOUNDARY-INDICES-OF-SUBCELLS" :PACKAGE-NAME "KEYWORD"
         :EXTERNALP T)
        (:NAME "DUM578" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "REFINE-INFO" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM579" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "REFINEMENT-RULES" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM580" :PACKAGE-NAME NIL :EXTERNALP NIL))
       #()))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL-CLASS-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the cell information for the class which is stored as a property
of the class symbol.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELL-CLASS-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function should only be used during class initialization.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CI-SLOTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SLOTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CI" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Multiple and write access to cell-information slots.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CELL-CLASS-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SLOTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Multiple and write access to cell-information slots.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CELL-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SLOTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACTOR-SIMPLICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the factor-simplices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-SIDES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the number of boundary faces.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the number of vertices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the number of subcells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns refinement information for the cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINEMENT-RULES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns refinement information for the cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Returns the dimension of the cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Returns the cell's or cell-classes reference-cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns the cell information also when called for a cell class.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COPY-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Copy constructor for cells.  It is guaranteed that the
cell boundary is copied.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFERENCE-CELL-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Tests if a cell is a reference cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<STANDARD-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)))
     :DOCUMENTATION "Copy constructor for cells.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Checks the data structure of @arg{obj}.")
    (:TYPE :METHOD :SYMBOL (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DESCRIBE-ALL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBCELL-ACCESS-INDICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructs an ordering of all subcells of the list @arg{cells}.  All
cells in this list should have the same dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-SUBCELLS-METHOD-SOURCE" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates code for a @function{subcells} method for @arg{cell-class}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns a vector containing all subcells of a given cell.  The code is
special to each class and often automatically generated by
@function{generate-subcell-access-code}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-SUBCELLS-METHOD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Defines a method for @arg{subcells}.  This function should be called the
cell class is initialized.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CELL-MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "For non-mapped cells, this method returns a <special-function> which can
be called instead of @function{l2g} and @function{l2Dg}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CELL-MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Return the mapping of the mapped @arg{cell}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<DISTORTED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<DISTORTED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<DISTORTED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLE-LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<DISTORTED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "LOCAL-POSITIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GLOBAL->LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Mainly useful for finite element evaluation: from the
local position, the value of a fe function can be obtained by
interpolation.  This is done by a Newton iteration, which converges in one
step for linear mappings.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*G2L-NEWTON-STEPS*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION
     "Limit for the number of Newton steps for @function{global->local}.
Small numbers should work for reasonable geometries and initial values."
     :INITIAL-VALUE "20")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-NEWTON" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "X-START" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "APPROXIMATE-GRADIENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "A simple Newton iteration for converting global to local coordinates.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL->LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Does a Newton iteration or a Gauss-Newton method for approximating
global-pos by the cell mapping.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INSIDE-CELL?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "THRESHOLD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Checks if @arg{global-pos} is inside the interior of the
@arg{cell}.  It calls @function{global->local} to obtain local coordinates
and then @function{coordinates-inside?} to check if those are inside the
cell.  If @arg{threshold} is a non-negative number, an additional check is
performed, if the local coordinates map to @arg{global-pos} with accuracy
threshold.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COORDINATES-INSIDE?" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Checks if the given local coordinates are inside the
reference cell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INSIDE-CELL?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "THRESHOLD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GLOBAL->EMBEDDED-LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "This computes a local coordinate which solves the
Ausgleichsproblem of mapping to a point as near as possible to global-pos.  It
involves more computational work than global->local.  As a second value, the
distance to global-pos is returned.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL->EMBEDDED-LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Generates the refinement information for the reference
cell.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL-OR-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a skeleton for the given cell or the given
cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INITIALIZE-CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "FACTORS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Initializes the per-class information for the given reference cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A skeleton is a vector of hash-tables containing the
cells of a certain dimension as keys.  The information stored in the
values is different depending on the subclass derived from skeleton."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       ((:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ETABLES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       ((:NAME "ETABLES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "The etables-list has to be initialized.  Furthermore, we allow a
constructor by giving a cell-list.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ANALOG" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ETABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ETABLE-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMBER-OF-SKELETON?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns T if @arg{cell} is in @arg{skel}, NIL otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEL-REF" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the properties of @arg{cell} in @arg{skel}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SKEL-REF" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Setter for the properties of @arg{cell} in @arg{skel}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CELL-PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the value of the property.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GET-CELL-PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the value of the property.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IDENTIFIED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a list of cells in @arg{skel} which are
identified with @arg{cell}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Inserts a cell and its boundary into a skeleton.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-CELLS!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Inserts a list of cells into a skeleton.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELLS->SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SKEL-FOR-EACH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIRECTION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "WHERE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "WITH-PROPERTIES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Loops through a skeleton applying func.  When direction is :down then loops
with dimension of the cells decreasing, otherwise increasing.")
    (:TYPE :MACRO :SYMBOL (:NAME "DOSKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LOOPING-VAR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "DIRECTION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
        (:NAME "UP" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
       (:NAME "WHERE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Loop through a skeleton.  If looping-var is an atom, it loops through
all cells, otherwise it loops through cells and properties.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Returns number of cells in a skeleton.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEL-EMPTY-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELLS-OF-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the cells of @arg{skel} of dimension @arg{dim} in form of a
list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELLS-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the cells of @arg{skel} of highest dimension in form of a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MARK-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROP" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Marks all cells of @arg{skel} with the given @arg{prop}/@arg{value}
pair.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEL-MAP" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "WITH-PROPERTIES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "WHERE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a list of cells contained in skel and satisfying test.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FIND-CELL-FROM-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIMENSION-OF-PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parts of a skeleton can be named with the property @symbol{:part}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSION-OF-PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSION-OF-PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-SKELETON*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION "May be nil, :cells, :cells-of-highest-dimension."
     :INITIAL-VALUE ":CELLS")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-SKELETON-VALUES*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION "When t, prints also the values of a skeleton."
     :INITIAL-VALUE "T")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DESCRIBE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OPTIONAL-SKELETON-CHECKS*" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :DOCUMENTATION "Some optional checks for skeletons." :INITIAL-VALUE
     "'(:EMBEDDED-DIMENSION)")
    (:TYPE :METHOD :SYMBOL (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Checks the skeleton.  An error is signaled if the skeleton looks bad.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SKELETON-SUBSTANCE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "The substance of a skeleton are those cells which are not boundary of a
cell in @arg{cell}.  This function returns those cells in the form of a
hash-table.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SKELETON-BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a skeleton consisting of cells of skel of dimension n-1 which
have only one neighbor.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-517" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-543" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSED?" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Checks if the boundary of skel is empty.  This should be the case for
boundaries of skeletons.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Tests are done when initializing the classes.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This object describes a cluster of identified cells.  At
the moment, it is used to describe identified boundaries and might be used
later on for parallelization purposes.  Those identifications are refered
to in the properties of each cell."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A list of identified cells.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Print the cells in the identification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL-IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns @arg{cell}'s identification in @arg{skel} or NIL.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELL-IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFIED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns @arg{cell}'s identification in @arg{skel} or NIL.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns a representative for this object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)))
     :DOCUMENTATION "Gets a representative cell for this identification.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)))
     :DOCUMENTATION "Gets a representative cell for this identification.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "This default method returns the object itself.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "This default method returns the object itself.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IDENTIFIED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "IDENTIFIED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Identifies all cells in @arg{identified-cells} within @arg{skel}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "KEY-IS-SUBCELL-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "KEY2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks if @arg{key1} occurs as subcell of @arg{key2}.  The keys can be
either cells or identifications.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOUNDARY-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns an identification list for the boundaries of the cells in
identifications.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINE-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SETS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Reduces identifications to maximally connected sets.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ITERATE-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INITIAL-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates all identifications of the skeleton from the identifications
of some higher-dimensional cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Should checks correct identification.  At the moment, it tests only if
all identification-entries are eq.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFY-UNIT-CELL-FACES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDICES" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
       (:NAME "ALL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "This routines identifies boundary cells in skel which correspond to
boundary cells in the unit cube.  Warning: exact arithmetic is used to
recognize identified cells.  This should work for skeletons derived from
the unit cell, but may create problems in other situations.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<INTERFACE>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :DOCUMENTATION
     "Not in use up to now.  Interface structure for domain
decomposition approaches.  Might be used also for parallelization in the
future.  Cells are mapped to identified cells in the neighboring
skeletons."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NEIGHBORS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "NEIGHBORS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-IDENTIFY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Rule for refining reference cells.  Those rules are
stored in the refine-info slot of the cell class."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAMES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "NAMES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "Names identifying the rule.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "Reference cell for this refinement rule.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOUNDARY-REFINEMENT-RULES" :PACKAGE-NAME "FL.MESH" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "BOUNDARY-REFINEMENT-RULES" :PACKAGE-NAME "FL.MESH" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION
       "Refinement rules for the sides required by this rule.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFINEMENT-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "REFINEMENT-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Vector of refinement information for the children.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Finds the refinement rule for @arg{cell} defined by the @arg{id}.  This
@arg{id} can be a number (position of the rule, T (meaning 0), or some
symbol which is contained in the names of some rule.  Two values are
returned: the rule and its position in the refinement-rule vector.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GET-REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RULE-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-SUBCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a vector filled with all children of the subcells of
@arg{cell}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINE-CELL-INTERIOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFINFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SUBCELL-REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Refines @arg{cell} by filling the first position of the vector
@arg{subcell-refinements} with freshly generated children.  The other
positions should already be filled with the refinements of the cell's
boundary.  Returns a vector of children.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns the refinement of @arg{cell} in @arg{skeleton} as two values:
the rule and the children.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the refinement rule of @arg{cell} in @arg{skel}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "CHILD-VEC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "PARENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKELETON->REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAMES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Setup the refinement rule from a refined skeleton.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "<CHILD-INFO>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This structure contains information about the children, their factor
simplices, and how to find their boundary sides.  The slots are:

class:  the child's cell-class

barycentric-corners:
   A list of the child's corners in barycentric coordinates

boundary-paths:
   For each side of the child this list contains a path in the form (i_1,
..., i_l, j): here i_1, ..., i_l are positions in subsequent boundary lists
starting from the boundary of the child's parent, and j is the position in
the refine-info vector of the boundary's parent.

transform-A, transform-b:  determine the transformation mapping for the child"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BARYCENTRIC-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOUNDARY-PATHS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TRANSFORM-A" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TRANSFORM-B" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-<CHILD-INFO>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "REFERENCE-CELL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM382" :PACKAGE-NAME NIL :EXTERNALP NIL))
       ((:NAME "REQUIRED-ARGUMENT" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)))
      (((:NAME "BARYCENTRIC-CORNERS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM383" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "BOUNDARY-PATHS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM384" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "TRANSFORM-A" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM385" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "TRANSFORM-B" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM386" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "CHILD-INFO-VEC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINE-INFO->REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAMES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "This generates a refinement-rule from the older refine-info data.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REFCELL-REFINEMENT-MEMOIZE-DEPTH*" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "Depth up to which we store the refinements of the reference cell.  The
levels 0 and 1 are always memoized, becuause these are needed for
refinement operations.  NIL indicates no additional memoization beyond
levels 0 and 1, T indicates infinite depth."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REFCELL-REFINEMENT-TABLE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :DOCUMENTATION "Table where refinements of reference cells are memoized."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST 'EQUAL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INDUCED-REFINEMENT-OF-SUBCELL-REFCELLS" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SUBCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "A refinement rule on refcell induces a refinement of all its subparts.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFCELL-REFINEMENT-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 1)
      ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 0)
      (:NAME "REINIT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns an LEVEL times refined skeleton of REFCELL.  It is partially
memoized, see the documentation of *REFCELL-REFINEMENT-MEMOIZE-DEPTH*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a vector of all children of the subcells of @arg{cell} in
@arg{skeleton}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INNER-REFCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the children of refcell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the children for refcell and subcells.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Generates the transformation mappings.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REFINE-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINED-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINED-REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "This local refinement function is used to assemble a
global refinement mapping which is represented by the skeleton
`refinement'.  It needs and ensures that the boundary of `cell' is
already refined.  An existing refinement of `cell' is simply kept.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFINE-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "REFINED-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "REFINED-REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFINE-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "REFINED-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "REFINED-REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This after method ensures the refinement of identified cells and
identifies the children.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UPDATE-REFINEMENT!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINED-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "HIGHEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Low-level interface to refinement.  @arg{region} is
either NIL or a skeleton giving the region to be refined.  @arg{indicator}
is a function returning the refinement rule for each cell.  In the skeleton
@arg{refined} the actually refined cells can be collected, and
@arg{highest} determines if the indicator gives refinement for every cell
or only the highest-dimensional cells.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-REFINEMENT!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "REFINED-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REFINED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "HIGHEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REFINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Refines @arg{skel} either locally or globally depending
on the @function{indicator}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "CONSTANTLY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "HIGHEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "DECOUPLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Refines the cells of @arg{skel} indicated by @arg{indicator}.  Returns
two values: the first is the refined skeleton, the second is the refinement
which is a skeleton for the old mesh referencing the refinement vectors.
This refinement algorithm usually makes sense only for global refinements.
Local refinements should be done with hierarchical-mesh structures.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SKELETON-REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<MAPPED-VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "At the moment, this class is not needed because vertices
are not mapped."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Returns the empty boundary for vertices.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Returns the empty boundary for vertices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-VERTEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "General vertex constructor.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Copy constructor for vertex.  The vertex position is freshly allocated.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CELL-MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "For vertices, this returns a <special-function> evaluating to the vertex
position.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-COORDINATES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-GRADIENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Same as local->global for vertices.")
    (:TYPE :METHOD :SYMBOL (:NAME "L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Not perfect, should take mapping into account.")
    (:TYPE :METHOD :SYMBOL (:NAME "G2L" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL->LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL->LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COORDINATES-INSIDE?" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-COORDINATES-OF-MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Construction of the refinement information which is to copy the vertex.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CELL-FROM-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Creates a cell of class CELL-CLASS having the given VERTICES.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Creates a cell of class CELL-CLASS having the given CORNERS.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REFERENCE-VERTEX*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :DOCUMENTATION "The reference vertex." :INITIAL-VALUE
     "(LET ((FL.MESH::REFCELL (FL.MESH:MAKE-VERTEX (FL.MATLISP:DOUBLE-VEC))))
  (FL.MESH::INITIALIZE-CELL-CLASS FL.MESH::REFCELL NIL)
  FL.MESH::REFCELL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-VERTEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "A mixin for simplicial cells." :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLEX-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EUCLIDEAN->BARYCENTRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-COORDINATES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-GRADIENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the linear transformation defined by the coordinates of the
simplex corners.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COORDINATES-INSIDE?" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-COORDINATES-OF-MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CELL-MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "For non-mapped simplices, the cell mapping is linear.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TWO-SORTED-PARTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns all partitions of {1,...,n} which consist of two sorted
parts.  This is used in Freudenthal/Bey's simplex refinement.
Example: (two-sorted-parts 2) -> ((() (1 2)) ((1) (2)) ((2) (1)) ((1 2) ()))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FREUDENTHAL-REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns all sub-simplices resulting from regular refinement of an
n-dimensional simplex by Freudenthal's algorithm.  The simplices are
given by their corners in barycentric coordinates (multiplied by 2 to
work with integer coordinates).
Example: (freudenthal-refinement 1) -> ((#(2 0) #(1 1)) (#(1 1) #(0 2)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUB-CELLS-OF-CHILD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHILD-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUB-CELLS-OF-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-PATH-CREATE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNERS-OF-SUB-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CREATE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the path (see the description in the definition of <child-info>) to
the sub-simplex given by its corners in barycentric coordinates.  Additionally,
if the sub-simplex cannot be found, it generates a new entry in the refine-info
vector and fills the barycentric-corners field.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-BOUNDARY-PATHS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create the boundary-paths for the <child-info> entry in the refine-info
vector.  We assume that the ordering of the simplex boundaries is opposite to
the ordering of the corners.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Allocates an empty vector of children which is then filled calling
GET-PATH-CREATE and CREATE-BOUNDARY-PATHS.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLEX-CORNER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "I" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates the i-th corner of a simplex of dimension dim.  The 0-th corner is
the zero-vector.  The others are equal to (unit-vector dim 1-i).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REFERENCE-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Constructs a reference simplex of the given dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLEX-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAPPED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DISTORTED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the n-simplex class.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the reference simplex of the given dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the reference simplex of the given dimension.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-INTERVAL*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(FL.MESH::ENSURE-SIMPLEX 1)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-TRIANGLE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(FL.MESH::ENSURE-SIMPLEX 2)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-TETRAHEDRON*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(FL.MESH::ENSURE-SIMPLEX 3)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Short form of creating a simplex given its boundary.  An alternative is
creating it from its vertices, see the functions MAKE-CELL-FROM-VERTICES
and INSERT-CELL-FROM-CORNERS.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FROM-VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TO-VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Creates a line given its endpoints.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "A mixin for simplex-product cells."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT-CELL-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Generates the product-cell product of cell1 and cell2.  The
boundary is taken from the list of lower-dimensional products supplied in
table.  The tensor product boundary is in the order de1 x e2, e1 x de2.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "CELL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT-TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SKEL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CARTESIAN-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "OBJ2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Computes the cartesian product of two skeletons.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CARTESIAN-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "CELL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CARTESIAN-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "CELL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CARTESIAN-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SKEL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SKEL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PROPERTY-COMBINER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Computes the cartesian product of two skeletons.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CARTESIAN-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SKEL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SKEL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PROPERTY-COMBINER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Computes the cartesian product of two skeletons.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "VTX2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "VTX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "CELL2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PSEUDO-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "FACTOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PSEUDO-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "FACTOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BARYCENTRIC-COORDINATES-FACTORS" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACTORS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compute a vector of weights which gives the global position by taking
the scalar product with the list of corners.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-COORDINATES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WEIGHT-LISTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SIMPLICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "A list of weights for several simplices at once.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WEIGHT-LISTS-GRAD-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "The result of this function are weight-lists with each weight-list
corresponding to the weights for a partial derivative.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WEIGHT-LISTS-GRAD-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BARYCENTRIC-GRADIENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-COORDINATES-OF-MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COORDINATES-INSIDE?" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-BOUNDARY-PATHS-OF-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Create the boundary-paths for the <child-info> entry in the
refine-info vector.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GENERATE-REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "REFCELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Allocates refine-info vector with barycentric-corners, then fills the
boundary paths.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REFERENCE-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "FACTOR-DIMS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT-CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACTOR-DIMS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAPPED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DISTORTED" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-SIMPLEX-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FACTOR-DIMS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the reference product-cell for the given factor dimensions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the reference cube of dimension dim.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBE-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns T iff CELL is a cube.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBE-INDEX->SIMPLEX-INDEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "I" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Transforms an index in the vertex field of the cube into the
corresponding vertex index in the simplex.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBE-INDEX->PRODUCT-CELL-INDEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIMS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "I" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Transforms an index in the vertex field of the cube into the
corresponding vertex index in the product-cell with the dimension DIMS of its
factors.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL->CUBE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Transforms a product-cell into a degenerated cube with the same vertices.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-QUADRANGLE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(FL.MESH:N-CUBE 2)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-CUBE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "(FL.MESH:N-CUBE 3)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-PRISM-1-2*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.MESH:ENSURE-SIMPLEX-PRODUCT '(1 2))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-PRISM-2-1*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.MESH:ENSURE-SIMPLEX-PRODUCT '(2 1))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PRODUCT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKELETON-WITHOUT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL-TO-REMOVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Removes a cell from a skeleton such that the rest remains a skeleton.
Warning: does not handle identifications yet.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYNCHRONIZE-IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NEW-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Synchronizes identification information between @arg{new-skel} and
@arg{skel}.  @arg{table} is a hash-table mapping cells from new-skel to
skel.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Copies a skeleton.  Properties is a list of properties to be copied.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINED-SKELETON-COPY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) 0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNERS->CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CREATE-SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Creates a cell of type cell-class with corners given by corners.
corners->cell has to be an equalp hash-table mapping corners to the
corresponding cell.  It is updated by this function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRUCTURED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "H" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CORNERS->CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a uniform box skeleton consisting of N_1 x ... x N_dim cubes of
dimensions h_1 x ... x h_dim.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKELETON-DISJOINT-UNION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SKELS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Builds a disjoint union skeleton of all skeletons.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKEL-ADD!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SKEL-1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "SKEL-2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OVERRIDE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "ACTIVE-SKEL-1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Adds @arg{skel-2} to @arg{skel-1} destructively for @arg{skel-1}.
Overlaying cells are identified.  @arg{override} is a list of properties
which are copied from skel-2 on the overlap.  @arg{active-skel-1} is used
for hierarchical-meshes for selecting a level to which @arg{skel-2} is
added.  This function returns three values: the first is @arg{skel-1}, the
second is @arg{skel-2}, the third is a hash-table mapping overlapping cells
from @arg{skel-2} to their counterpart in @arg{skel-1}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Transforms the cell according to the transformation.
Note that this will not work, if unmapped cells are transformed
nonlinearly.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Default method returns @arg{cell}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Default method returns @arg{cell}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORMED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Transforms skel by transforming the cell mappings resp. vertex
positions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEARLY-TRANSFORMED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "A" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Transforms skel by transforming the vertex positions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHIFT-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "SHIFT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Shifts skel by vec.  vec has to be a vector of dimension
(embedded-dimension skel).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBSKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TELESCOPE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LEFT-SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LEFT->RIGHT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SKELETON-BUILD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "A @class{<domain>} is a special @class{<skeleton>}.  We
call its cells @emph{patches}, and the properties of a patch carries
geometric information.  Properties supported up to now are:

@itemize
@item @code{IDENTIFIED}: @emph{list of identified patches}
@item @code{EXTENSION}: @emph{extender}
@item @code{METRIC}: @emph{metric tensor function}
@item @code{VOLUME}: @emph{volume function}
@end itemize

Metric and volume should be functions depending on keyword arguments like
@code{:LOCAL} and @code{:GLOBAL} and allowing arbitrary other keys."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLASSIFIERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A list of functions of two arguments -patch and classifications so
far- which are called from the right to classify the patch.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOMAIN-BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "The boundary of the domain as a skeleton.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOMAIN-SUBSTANCE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "The substance of the domain as a hash-table of cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOMAIN-SUBSTANCE-BOUNDARIES" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "The boundaries of the substance cells as a hash-table of cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STANDARD-CLASSIFIER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-SECONDARY-INFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Preliminary.  Maybe it would be better to update the boundary
automatically when inserting cells.  Unfortunately, it is not clear
how this could be done in an easy way.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "When a domain is constructed from a list of cells, we assume that its
definition is finished and setup the boundary slot.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS" :PACKAGE-NAME "COMMON-LISP"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sometimes a skeleton is transformed into a domain by change-class.
Usually, this means that the definition is finished such that we can
compute the boundary afterwards.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATCH-CLASSIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a list of classifications for @arg{patch} in @arg{domain}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-CONDITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLASSIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Test if @arg{condition} holds for @arg{classifications}.
@arg{condition} should be a logical combination of the keyword symbols in
the list @arg{classification}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "CLASSIFIERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Searches for a patch of @arg{domain} having the given list
@arg{classifiers}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CLASSIFIER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CLASSIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a classifier for patches.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOMAIN-CHARACTERISTICS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a property list of characteristics.  The property curved means
that curved patches exist.  The property exact is set to t if the domain
mappings are exact.  Otherwise, only the boundary of the domain should be
assumed to be provided in an exact form.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DESCRIBE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-SIMPLEX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLEX-PRODUCT-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIMS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates a product-cell domain for the given factor dimensions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLASSIFY-TOP-BOTTOM-LATERAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BOTTOM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 0.0)
      ((:NAME "TOP" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 1.0)
      ((:NAME "LEFT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 0.0)
      ((:NAME "RIGHT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 1.0))
     :DOCUMENTATION
     "Returns a classifier for identifying top, bottom, and lateral parts of a
cube domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :DOCUMENTATION
     "If @arg{domain} is an integer, return the corresponding
@arg{n-cube-domain}, if @arg{domain} is a domain return it unchanged,
otherwise signal an error.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION "Generates a box domain for the given dimensions.  Here,
dimensions is expected to be a list of 2-element lists denoting
the interval along the respective axis.  The algorithm works by
copying the unit cube and modifying the coordinates of the
vertices of the copy.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Generates an n-dimensional cell domain which is a n-dimensional unit
cube with its opposite sides identified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-BALL-PHI" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-BALL-DPHI" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-BALL-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Generates an n-dimensional ball domain with 2^n simplex patches.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ROTATED-SQUARE-DOMAIN*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LET ((FL.MESH::CENTER
       (FL.MESH:MAKE-VERTEX (COERCE '(0.0 0.0) 'FL.MATLISP:DOUBLE-VEC)))
      (FL.MESH::EAST-VTX
       (FL.MESH:MAKE-VERTEX (COERCE '(1.0 0.0) 'FL.MATLISP:DOUBLE-VEC)))
      (FL.MESH::NORTH-VTX
       (FL.MESH:MAKE-VERTEX (COERCE '(0.0 1.0) 'FL.MATLISP:DOUBLE-VEC)))
      (FL.MESH::WEST-VTX
       (FL.MESH:MAKE-VERTEX (COERCE '(-1.0 0.0) 'FL.MATLISP:DOUBLE-VEC)))
      (FL.MESH::SOUTH-VTX
       (FL.MESH:MAKE-VERTEX (COERCE '(0.0 -1.0) 'FL.MATLISP:DOUBLE-VEC))))
  (LET ((FL.MESH::SEG-CE (FL.MESH:MAKE-LINE FL.MESH::CENTER FL.MESH::EAST-VTX))
        (FL.MESH::SEG-CN
         (FL.MESH:MAKE-LINE FL.MESH::CENTER FL.MESH::NORTH-VTX))
        (FL.MESH::SEG-CW (FL.MESH:MAKE-LINE FL.MESH::CENTER FL.MESH::WEST-VTX))
        (FL.MESH::SEG-CS
         (FL.MESH:MAKE-LINE FL.MESH::CENTER FL.MESH::SOUTH-VTX)))
    (LET ((FL.MESH::SEG-EN
           (FL.MESH:MAKE-LINE FL.MESH::EAST-VTX FL.MESH::NORTH-VTX))
          (FL.MESH::SEG-NW
           (FL.MESH:MAKE-LINE FL.MESH::NORTH-VTX FL.MESH::WEST-VTX))
          (FL.MESH::SEG-WS
           (FL.MESH:MAKE-LINE FL.MESH::WEST-VTX FL.MESH::SOUTH-VTX))
          (FL.MESH::SEG-ES
           (FL.MESH:MAKE-LINE FL.MESH::EAST-VTX FL.MESH::SOUTH-VTX)))
      (LET ((FL.MESH::TRI-1
             (FL.MESH:MAKE-SIMPLEX
              (VECTOR FL.MESH::SEG-EN FL.MESH::SEG-CN FL.MESH::SEG-CE)))
            (FL.MESH::TRI-2
             (FL.MESH:MAKE-SIMPLEX
              (VECTOR FL.MESH::SEG-NW FL.MESH::SEG-CW FL.MESH::SEG-CN)))
            (FL.MESH::TRI-3
             (FL.MESH:MAKE-SIMPLEX
              (VECTOR FL.MESH::SEG-WS FL.MESH::SEG-CS FL.MESH::SEG-CW)))
            (FL.MESH::TRI-4
             (FL.MESH:MAKE-SIMPLEX
              (VECTOR FL.MESH::SEG-ES FL.MESH::SEG-CS FL.MESH::SEG-CE))))
        (MAKE-INSTANCE 'FL.MESH:<DOMAIN> :CELLS
                       (LIST FL.MESH::TRI-1 FL.MESH::TRI-2 FL.MESH::TRI-3
                             FL.MESH::TRI-4))))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIANGLE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CORNER1" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNER2" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CORNER3" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBE-WITHOUT-CORNER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a domain by cutting out one cube from the uniform refinement of
the unit cube.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "L-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Creates an L-domain by cutting out cubes from the uniform refinement of
the unit cube.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :DOCUMENTATION
     "A <mesh> is a special <skeleton> mapping cells to
property lists with properties of the cell.  The most important property of
a cell is its patch in the domain.  Another one could be a list of possibly
identified cells.  The slot parametric determines which kind of cell
mappings are used for approximating the domain.  These can be the nonlinear
mappings used in the domain definition, but also arbitrary approximations,
to those mappings, e.g. isoparametric mappings.  The special value NIL
means that multilinear mappings are used for all cells outside the
boundaries."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The domain of the mesh.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "When a mesh is constructed from a domain its dimension is taken as the
domain dimension by default.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ANALOG" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATCH-OF-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATCH-OF-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-PATCH-PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the value of the property.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GET-PATCH-PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the value of the property.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSION-OF-PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parts of a skeleton can be named with the property @symbol{:part}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFINE-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "REFINED-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "REFINED-REGION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This :AFTER-method for cell refinement copies the domain patch to the
children.  For meshes approximating smooth boundaries, the mappings from
interior children are abandoned and finer parametric ones for the boundary
neighbors are generated.")
    (:TYPE :METHOD :SYMBOL (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Performs some additional checks for mesh.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MESHSIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Computes a meshsize.  Please refer to the method
documentations for the exact definition.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MESHSIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Computes a meshsize as the size of the longest edge in the mesh.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MESHSIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION
     "Computes a meshsize as the size of the longest edge in the mesh.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Hierarchical-meshes are those meshes which will be used
most often, because they remember the refinement history and therefore
allow for refinement and coarsening.  The slot levels is an array of
skeletons containing the cells for different levels."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LEVELS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "LEVELS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "DESCRIBE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELLS-ON-LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-LEVELS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOTTOM-LEVEL-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-LEVEL-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "MM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HIERARCHICAL-MESH-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLAT-MESH-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LEVEL-OF-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the level of @arg{cell} in the hirearchical mesh @arg{h-mesh}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS" :PACKAGE-NAME "COMMON-LISP"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "One constructor for an h-mesh is by changing the class of a one-level
mesh.  This method definition fills the level slot appropriately.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REFINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "CONSTANTLY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Refine a hierarchical-mesh.  When the argument 'test' is supplied, all
cells satisfying the test are refined.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFINEMENT-INTERFACE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the refined boundary subcells of unrefined cells in a skeleton.
Those cells are found as all refined cells which are not part of the domain
boundary.  At the moment, this is a global operation.  Later on, it should
probably be localized.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HIERARCHICALLY-ORDERED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "WHERE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "SURFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sorts the cells up to the given level (defaulting to the last
level) hierarchically for use in something similar to the nested
disection method.  Returns a list of the sorted cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FOR-EACH-CELL-OF-HIGHEST-DIMENSION-ON-SURFACE" :PACKAGE-NAME
      "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calls func for each cell on the hierarchical-mesh surface.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SURFACE-CELLS-OF-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function returns the surface cells of a locally refined
hierarchical-mesh structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SURFACE-CELLS-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function returns the surface cells of highest dimension of a
locally refined hierarchical-mesh structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-SURFACE-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HIERARCHICAL-SEARCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Hierarchical search for a subtree of cells in @arg{h-mesh} satisfying
@arg{test}.  A leaf cell is returned, if successful, otherwise NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CELL-ON-PATCH-WITH-MIDPOINT" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FIND-CELL-FROM-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "POS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Hierarchical search for a leaf cell containing the given position.  A
result of NIL is given if no cell covering @arg{pos} is found.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALLOW-CHILD-PATCH-CHANGE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "When T it is allowed for a child to have a different patch from its
father.  This is used at the moment for homogenization of porous domains,
but it is not a standard situation."
     :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION "Performs some additional checks for hierarchical meshes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "More tests can be found in meshgen.lisp.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Transforms a domain which is specified sufficiently well
into a mesh.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This function creates a mesh on the domain skeleton.  The mesh either
uses the nonlinear mappings of the domain patches (for parametric =
:from-domain) or approximates those with polygonal (parametric = nil) or
isoparametric mappings.  Note that the boundary always uses the domain
mappings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Copies a mesh.  Properties copied are only patch and identification.  If
necessary, one might add further properties to be copied as a keyword
argument.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFORMLY-REFINED-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates a mesh by refining the domain partition uniformly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPECIAL-MESH-ON-BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PATCH->MESH-SIZES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a uniform mesh consisting of N_1 x ... x N_dim cells on a box
domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFORM-MESH-ON-BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "N" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a uniform mesh consisting of N_1 x ... x N_dim cells on a box
domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISOTROPIC-MESH-ON-RECTANGLE-DOMAIN" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Generates a rather isotropic mesh on a domain consisting of rectangular
patches.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-HIERARCHICAL-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Construct a hierarchical-mesh from a domain.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-HIERARCHICAL-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Construct a hierarchical-mesh from a domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIFORMLY-REFINED-HIERARCHICAL-MESH" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE-LEXICOGRAPHICALLY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUZZY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 1.e-12)
      (:NAME "DIRECTION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a function which compares two vectors lexicographically.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORT-LEXICOGRAPHICALLY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELIST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUZZY" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 1.e-12))
     :DOCUMENTATION
     "Sorts a cell list lexicographically by the coordinates of their
midpoint.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIANGULIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Transforms a product-cell mesh into a simplex mesh.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-MESHGEN" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<BOUNDARY-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<STANDARD-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "This cell is only fuzzily defined.  Its use is mostly
for defining domains by their boundary.  The slot @slot{midpoint} can be
useful for the graphical output of the cell, the slot @slot{holes} contains
a list of points lying inside holes.  This is intended as help for
triangulation programs."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HOLES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "HOLES" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<BOUNDARY-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<BOUNDARY-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSFORM-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "<BOUNDARY-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIANGULATE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Triangulate @arg{domain} by successively building a mesh on the domain
skeleton starting from the 0-dimensional patches.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EXTEND-TRIANGULATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Extend an existing triangulation on the
@arg{dim}-1-skeleton to the @arg{dim}-skeleton.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTEND-TRIANGULATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-RASTER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THRESHOLD" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 0.08)
      (:NAME "MESHSIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "INDICATOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PATCH->RASTER" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "MINIMAL-DEPTH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) 0)
      ((:NAME "MAXIMAL-DEPTH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes a curvature-adapted raster on a curved line.  @arg{threshold}
is controlling the allowed deviation from linearity, @arg{meshsize} is a
maximally allowed mesh width.  The user may also pass an @arg{indicator}
which should be a function of patch, local position and meshwidth, or a
function @arg{patch->raster} mapping patches to complete rasters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIX-IDENTIFICATION-FOR-POSITIVE-DIMENSION" :PACKAGE-NAME "FL.MESH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Copies domain identification to cells of dimension larger 0.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTEND-TRIANGULATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 1))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Generates a mesh on the 1-skeleton for domain.  Identification is taken
care of.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TRIANGULATE-2D" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Extends the mesh on the 1-skeleton to the 2-skeleton
using @arg{program}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTEND-TRIANGULATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 2))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       (:NAME "TRIANGLE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "VERTEX-TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Calls the generic @function{triangulate-2d} which dispatches on the
triangulation program.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTEND-TRIANGULATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 2))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Does the setup of isoparametric mapping of boundary cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-TRIANGULATE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRIANGLE-PATHNAME*" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :DOCUMENTATION "Pathname of the @program{triangle} binary." :INITIAL-VALUE
     "(OR
 (FL.MACROS:AAND FL.START::*TRIANGLE-PATH*
                 (PROBE-FILE (PATHNAME FL.MACROS:IT)))
 (FL.PORT:FIND-EXECUTABLE \"triangle\")
 (PROBE-FILE #P\"FEMLISP:EXTERNAL;TRIANGLE;TRIANGLE\"))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MESHES-PATHNAME" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Returns the pathname of the directory for @femlisp{} meshes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MESH-FILE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KIND" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the pathname for the mesh component @arg{kind} which may be
:poly, :edge, :node, :element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-1D-SKELETON-TO-POLY-FILE" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Writes out the 1d-skeleton for @arg{mesh} to a @code{.poly}-file.
Returns a hash-table mapping the cells mesh to ids, a vector mapping ids to
vertices and a vector mapping ids to lines.  @arg{vertices} is a list of
vertices defining the correct ordering of vertices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-TRIANGLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Calls Shewchuk's triangle program.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-NEXT-UNCOMMENTED-LINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Reads the next line from @arg{stream} which does not begin with
@code{#}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TRIANGLE-MESH-FOR" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "INTERIOR-PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION "Extends @arg{mesh} by the output from Triangle for meshing
@arg{interior-patch}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRIANGULATE-2D" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TRIANGLE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VERTEX-TABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Calls @program{triangle} for each 2D patch of the domain.  @arg{mesh}
should already be generated for 0 and 1-dimensional patches.  The mesh
should not cover any 2-dimensinal patches.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-TRIANGLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTEND" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
       ((:NAME "CONSTANTLY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Extends a mesh on all extensible cells for which test ---if provided---
yields T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STANDARD-EXTENDER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ORIGINAL-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "REPLACEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extension function replacing an original-cell with a replacement.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBE-EXTENDER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DOMAIN-CUBE" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL)
      (:NAME "DIRECTION" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Makes domain-cube ---which should be a cube in a domain--- extensible in
the given direction.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-EXTEND" :PACKAGE-NAME "FL.MESH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "N-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INSIDE-CELL?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-HIERARCHICAL-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH"
     :EXTERNALP T)
    (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "GET-CELL-PROPERTY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FIND-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "COPY-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-ADD!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TOP-LEVEL-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ETABLE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*UNIT-QUADRANGLE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ENSURE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TRIANGULATE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "UNIFORMLY-REFINED-HIERARCHICAL-MESH" :PACKAGE-NAME "FL.MESH"
     :EXTERNALP T)
    (:NAME "SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TRIANGLE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "LINEARLY-TRANSFORMED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP
     T)
    (:NAME "LOCAL-COORDINATES-OF-MIDPOINT" :PACKAGE-NAME "FL.MESH" :EXTERNALP
     T)
    (:NAME "COPY-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FIND-PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<DOMAIN>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SPECIAL-MESH-ON-BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "STRUCTURED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FOR-EACH-CELL-OF-HIGHEST-DIMENSION-ON-SURFACE" :PACKAGE-NAME
     "FL.MESH" :EXTERNALP T)
    (:NAME "FIND-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*UNIT-INTERVAL*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MEMBER-OF-SKELETON?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "HIERARCHICALLY-ORDERED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TEST-CONDITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "COMPARE-LEXICOGRAPHICALLY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "PATCH-CLASSIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INSERT-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "VERTEX-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-MESH-FROM-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FIND-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TELESCOPE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKELETON-BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SURFACE-CELLS-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DOMAIN-CHARACTERISTICS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "PRINT-VERTEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "BOTTOM-LEVEL-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "IDENTIFY-UNIT-CELL-FACES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INSERT-CELL!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MESHSIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-CELL-FROM-VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-SIDES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TOP-LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "IDENTIFIED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "N-SIMPLEX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-FOR-EACH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-MAP" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-EMPTY-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "PATCH-OF-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TRIANGULIZE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELLS-ON-LEVEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-SIMPLEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-SUBCELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ETABLES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "EXTENSIBLE-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAPPED-CELL-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "N-CUBE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "N-CUBE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-VERTEX" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MARK-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-SURFACE-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "UNIFORM-MESH-ON-BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "LEVEL-OF-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "UNIFORMLY-REFINED-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "EXTENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ETABLE-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "L2DG" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "N-CELL-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INNER-REFCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "GLOBAL->LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ACCUMULATED-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELL->CUBE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "VERTEX-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFERENCE-CELL-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SUBCELL-CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DIAMETER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "VERTICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFCELL-REFINEMENT-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INSERT-CELLS!" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "STANDARD-EXTENDER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SUBSKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DIMENSION-OF-PART" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INVERT-REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "COMBINE-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINE-INFO" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKELETON-WITHOUT-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ENSURE-SIMPLEX-PRODUCT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "GLOBAL->EMBEDDED-LOCAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-REF" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "PARENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*UNIT-TRIANGLE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "L2G" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "EXTEND" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ITERATE-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-CLASSIFIER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "INITIALIZE-REFINED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-CELL-FROM-CORNERS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SIMPLEX-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*UNIT-CUBE*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "IDENTIFY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "ORIGIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "GET-REFINEMENT-RULE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MULTIPLE-LOCAL->GLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FIND-CELL-FROM-POSITION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELLS-OF-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "BOX-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKELETON-REFINEMENT" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELL-MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "FACTOR-SIMPLICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<BOUNDARY-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SURFACE-CELLS-OF-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "IDENTIFIED-CELLS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CHECK" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAPPED-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DOSKEL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "TRANSFORMED-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CUBE-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MAKE-LINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "BOUNDARY-IDENTIFICATIONS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "NR-OF-LEVELS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "KEY-IS-SUBCELL-P" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELLS-OF-HIGHEST-DIM" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SHIFT-SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*REFERENCE-VERTEX*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINE-HIERARCHICAL-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINED-SKELETON-COPY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKELETON-DISJOINT-UNION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SKEL-FULL-MAP" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "*UNIT-TETRAHEDRON*" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MESHES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MESH->HIERARCHICAL-MESH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "L-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "DOMAIN-BOUNDARY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "N-BALL-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "VERTEX?" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SIMPLEX-CLASS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SIMPLEX-PRODUCT-DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "REFINEMENT-INTERFACE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "MULTIPLE-LOCAL->DGLOBAL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CUBE-EXTENDER" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CHILDREN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "G2L" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "CELL-IDENTIFICATION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "<MAPPED-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SORT-LEXICOGRAPHICALLY" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "EMBEDDED-DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.PROBLEM" :FULL-NAME "FL.PROBLEM" :DOCUMENTATION
   " The @package{FL.PROBLEM} package introduces the
general class @class{<problem>} and some subclasses.  The most interesting
subclass is @class{<pde-problem>}.  A @class{<pde-problem>} is defined on a
domain and provides a table mapping the domain patches to property lists
containing the coefficient functions.

Several subclasses of @class{<pde-problem>} are defined in own packages,
e.g. @class{<cdr-problem>} in @package{FL.CDR},
@class{<elasticity-problem>} in @package{FL.ELASTICITY} and
@class{<navier-stokes-problem} in @package{FL.NAVIER-STOKES}."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Base class for all problems." :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LINEAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Predicate determining if a problem is linear or nonlinear.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENSURE-RESIDUAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Ensures that the field :RESIDUAL is computed and that
the flag :RESIDUAL-P is set on the blackboard.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Ensures that the field :SOLUTION is set on the
blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Default method throws an error.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Default method throws an error.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "This :around method takes the field :SOLUTION from the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-RESIDUAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "This default method handles nonlinear problems by linearizing them and
computing the residual for it.  The resulting problem is additionally
stored in a field :LINEAR-PROBLEM.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Standard form of a linear system of equations." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Constructs a standard LSE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LINEARIZE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Linearize the nonlinear problem PROBLEM at the point
SOLUTION.  The result should be a linear problem.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEARIZE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method throws an error for nonlinear problems and is the
identity on linear problems.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEARIZE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "This default method throws an error for nonlinear problems and is the
identity on linear problems.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-RESIDUAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Class for nonlinear problems.  The linearization
contains a function returning a linear problem."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LINEARIZATION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A function linearizing the problem.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "An approximation to the solution.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LINEARIZE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NLPB" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<NLSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Class for nonlinear system of equations." :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NLSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Constructs a standard NLSE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<COEFFICIENT>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "The coefficient class." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "COEFFICIENT-NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The dimension of the cell on which this coefficient is
active.  The value T means that it is active on all cells lying on the
patch.  The default value NIL means that it is active on cells with the
same dimension as the patch.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "A list indicating which information the evaluation
function needs.  Possible choices depend on problem and discretization,
e.g. @code{:local}, @code{:global}, @code{:fe}, @code{:cell} are possible
choices.  One element can also be a list starting with the keyword
@code{:fe-parameters} and followed by symbols indicating names of finite
element functions on the discretization blackboard.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "COEFF-EVAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The evaluation funtion.  It accepts a list of
keyword parameters which should correspond to the list in DEMANDS.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESIDUAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "T means evaluation for computing the residual.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "JACOBIAN" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "T means evaluation for computing the Jacobian.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<COEFFICIENT>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Prints the coefficient name.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<COEFFICIENT>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      ((:NAME "INPUT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "The pairing between coefficient and input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COEFFS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Get coefficient @arg{name} from the list @arg{coeffs}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "COEFFS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns unified demands for all coefficients in the list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTANT-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-VALUES" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a coefficient which takes the given value.  Several values can
be passed which is needed, for example, for returning also the type of a
boundary condition.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRAINT-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a coefficient function which sets Dirichlet zero boundary
conditions for all components of a PDE system.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ZERO-CONSTRAINTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a coefficient function which constrains all
system components to zero.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO-CONSTRAINTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZERO-CONSTRAINTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFICATION-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "MASTER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MAPPING" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "A special coefficient used for identifying parts of the domain.  The
  coefficient evaluation returns the master coordinates.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFICATION-COEFFICIENT-P" :PACKAGE-NAME "FL.PROBLEM"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRAINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIGMA-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-PARAMETER-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DEMAND" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PARA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-ORDER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PARA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPRESS-FE-PARAMETERS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PARAS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REQUIRED-FE-FUNCTIONS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "COEFFS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a list of finite element functions required by the coefficients
in the property list @arg{coeffs}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-FE-PARAMETERS-DEMAND" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "NEW-PARAS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Adds a list of fe-functions to the demands.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOLUTION-DEPENDENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COEFFS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FX->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "The function argument @arg{func} is transformed into a coefficient
depending on global coordinates.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FU->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "The function argument @arg{func} is transformed into a coefficient
depending on the solution.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FXU->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "The function argument @arg{func} is transformed into a coefficient
depending on position and solution.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUNCTION->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns @arg{obj} if it is a coefficient, converts @arg{obj} into a
coefficient depending on the space variable if @arg{obj} is a function;
otherwise, @arg{obj} is made into a constant coefficient.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "An instance of this class describes a problem posed on
@slot{domain} with coefficients given on each patch of the domain.  The
slot @slot{multiplicity} is a positive integer which denotes the number of
right-hand sides and solutions (e.g. when computing several eigenvectors at
once)."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION "A list whose elements are lists of the form
(symbol dim) or (symbol dim type) or (symbol subcomponents) describing
the components occuring in the pde.  Alternatively, this slot can contain a
function/dictionary mapping patches to such lists.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "Multiplicity of the right-hand side.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A function mapping patches to coefficient lists.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-SYMBOL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COMP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COMP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-LENGTH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COMP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COUNT-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COMPS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Counts the total number of components.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "COMPS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks if comps is of the correct form, see the documentation of the
slot @slot{components} in @class{domain-problem}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACTION-INFORMATION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "COMPONENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "If @arg{component} is in @arg{components}, a triple consisting of
position, length, and a flag is returned.  The flag is true, if the
component is a scalar.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-POSITION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "COMP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Translates a symbol denoting a component to a position.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATCH->COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Checks @slot{components}, does @slot{coefficients} setup when the
problem specification is given as a list in @arg{patch->coefficients}, and
finally memoizes @slot{coefficients}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOMAIN-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DESCRIBE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the number of components for @arg{problem}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION "Counts the number of components.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION "Counts the number of components.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENTS-OF-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reader for the components of @arg{problem} on @arg{patch}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMPONENTS-OF-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Writer for the components of @arg{problem} on @arg{patch}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COMPONENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the components of @arg{problem} on @arg{cell}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COEFFICIENTS-OF-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reader for the coefficients of @arg{patch} for @arg{problem}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COEFFICIENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the coefficients of @arg{problem} on @arg{cell}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COEFFICIENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method, returns the coefficients of the associated patch.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COEFFICIENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method, returns the coefficients of the associated patch.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILTER-APPLICABLE-COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COEFFS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONSTRAINTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Filters out the applicable coefficients for the respective cell with the
given patch.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<INTERPOLATION-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Interpolation problem on a domain.  The function which
is to be interpolated is given as a coefficient with key FUNCTION in the
coefficient list."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Base-class for a pde-problem." :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLASSIFY-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Classifies a problem.  The result is written in its property list.
Unfortunately, this is rater crude at the moment.  Ideally, it could also
classify some cases of coerciveness automatically.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LINEAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LINEAR-P-SUPPLIED" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
      ((:NAME "COERCIVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "COERCIVE-SUPPLIED" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
      ((:NAME "CLASSIFY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DUAL-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FUNCTIONAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the dual problem for @arg{problem} with the
right-hand side given by @arg{functional}.  The solution of this problem
measures the sensitivity of @arg{functional} applied to the solution of
problem with respect to errors in the solution.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Returns two values.  The first says if @arg{problem} is
self-adjoint, the second says if that value has really been checked.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default method says that @arg{problem} is not self-adjoint and
that no check has been performed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default method says that @arg{problem} is not self-adjoint and
that no check has been performed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PDE-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "EVALUATOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Generates a coefficient while dispatching on problem and
coefficient name.  May return a single coefficient or a list of several
coefficients.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-FROM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "FROM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "NCOMPS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SCALAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "INDEX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Extracts numbers or subvectors from the solution vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-FROM-GRADIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
      (:NAME "FROM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "NCOMPS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extract a numbers or subvectors from the solution vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREPARE-COEFFICIENT-ARGUMENTS" :PACKAGE-NAME "FL.PROBLEM"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Prepares arguments for the given coefficient function.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "COEFF-NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "A local @mac{coeff} defines a coefficient function inside
@mac{setup-coefficients}.  It is defined here at the toplevel such that the
Lisp editor indents the definitions correctly.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "A local @mac{coeff} defines a coefficient function inside
@mac{setup-coefficients}.  It is defined here at the toplevel such that the
Lisp editor indents the definitions correctly.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SELECT-ON-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SETUP-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATCH-DEFINITIONS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Defines components dispatching on @arg{patch}.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SETUP-COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATCH-DEFINITIONS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION "Defines coefficients dispatching on @arg{patch}.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CREATE-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
       (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) 1)
       (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a PDE problem.  @arg{type} is the type of the problem which
can be the name of a problem class or a list of class names.  @arg{domain}
is the domain for this problem, @arg{multiplicity} is the multiplicity of
the solution, e.g. the number of eigenvectors we search for.  In
@arg{body}, patch-dependent coefficients should be defined with
@mac{setup-coefficients}.  It is also possible to define patch-dependent
components with @mac{setup-components}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PDEF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<EVP-MIXIN>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "A mixin for eigenvalue problems."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The multiplicity of the eigenspace.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EIGENVALUES" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The current approximation of the eigenvalues.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MU" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The multiplier for the system matrix.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<EVP-MIXIN>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<EVP-MIXIN>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Standard class for discrete eigenvalue problems."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LS-EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :DOCUMENTATION
     "Generalized eigenvalue problem for matrices." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STIFFNESS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "STIFFNESS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSEVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<LS-EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates the mass bilinear form for a generalized eigenvalue problem.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENERGY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates the energy bilinear form for a generalized eigenvalue problem.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENERGY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENERGY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "X" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-EVP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<TIME-DEPENDENT-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin which should be used together with a
<PDE-PROBLEM> in a call to MAKE-PROGRAMMATIC-INSTANCE."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL)
       (:NAME "<TIME-DEPENDENT-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATIONARY-PROBLEM-CLASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TDP" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL))
     :DOCUMENTATION
     "Finds the stationary pde problem for the time-dependent problem TDP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-TIME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "DUAL-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "GET-PROPERTY" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
    (:NAME "ENERGY" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "DEMANDS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SETUP-COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COEFFICIENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COEFFICIENT-NAME" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "FU->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "CONSTRAINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "CREATE-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "DOMAIN-DIMENSION" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<COEFFICIENT>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "STATIONARY-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COEFFICIENTS" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "FX->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SETUP-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "CONSTRAINT-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<LS-EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<TIME-DEPENDENT-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "STIFFNESS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "FXU->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "PATCH->COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "EXTRACT-FROM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "PATCH-IF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ENSURE-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COMPONENTS-OF-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COMPONENT-POSITION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "GET-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "REQUIRED-FE-FUNCTIONS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ENSURE-SOLUTION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "IDENTIFICATION-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP
     T)
    (:NAME "ALPHA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "*EMPTY-COEFFICIENT-INPUT*" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ZERO-CONSTRAINTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COEFFICIENTS-OF-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "FILTER-APPLICABLE-COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM"
     :EXTERNALP T)
    (:NAME "<SOLVER>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "INITIAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COMPONENTS-OF-CELL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "PREPARE-COEFFICIENT-ARGUMENTS" :PACKAGE-NAME "FL.PROBLEM"
     :EXTERNALP T)
    (:NAME "NLSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "CONSTANT-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "CONSTRAINT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<DOMAIN-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "STATIONARY-PROBLEM-CLASS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SIGMA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COERCIVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "EIGENVALUES" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COPY-COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "SELECT-ON-PATCH" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "LINEARIZE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ENSURE-RESIDUAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MU" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<NLSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<EVP-MIXIN>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "LINEAR-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "<INTERPOLATION-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "FUNCTION->COEFFICIENT" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "EXTRACTION-INFORMATION" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
    (:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ADD-FE-PARAMETERS-DEMAND" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "MAP-COEFFICIENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.ELLSYS" :FULL-NAME "FL.ELLSYS" :DOCUMENTATION
   "This package contains the problem definition of systems
of convection-diffusion-reaction equations.  The system is given in the
following form which is suited for a fixed-point iteration:

@math{-div(a(x,u_old,nabla u_old) nabla u)
 - div(b(x,u_old,nabla u_old) u) +
 + c(x,u_old,nabla u_old) nabla u +
 + r(x,u_old,nabla u_old) u
= f(x,u_old, nabla u_old) 
- div(g(x,u_old, nabla u_old))
- div(a(x,u_old,nabla u_old) h(x,u_old, nabla u_old)) }

where @math{u:G to R^N}.  Note that the last two terms are introduced in
the variational formulation and imply a natural Neumann boundary condition
@math{derivative{u}{n} = (g+a h) cdot n} at boundaries where no Dirichlet
constraints are posed."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Systems of convection-diffusion-reaction equations.  The
coefficients should be vector-valued functions in this case."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISOTROPIC-DIFFUSION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a sparse diagonal diffusion tensor with isotropic diffusion in
each component.  @arg{value} should be a vector or a number and contains
the amount of diffusion in each component.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISOTROPIC-DIFFUSION-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIAGONAL-REACTION-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLSYS-ONE-FORCE-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NR-COMPS" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIT-VECTOR-FORCE-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIRECTION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLSYS-MODEL-PROBLEM" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "A" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "C" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "D" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "R" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "F" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "G" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "H" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      ((:NAME "DIRICHLET" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DIRICHLET-P" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL))
      (:NAME "INITIAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "SIGMA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "EVP" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "DERIVED-CLASS" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates a rather general elliptic problem on the given domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEARIZATION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REACTION-JET" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a list of two functions namely @math{u mapsto R(u)-DR(u)u}
and @math{u mapsto -DR(u)} which can be used directly in the
discretization as source and reaction term.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LINEARIZATION-FACTOR*" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
     :DOCUMENTATION
     "Damping factor used for linearizing nonlinear right-hand sides.  0.0
yields the fixed point iteration, 1.0 is full Newton approximation."
     :INITIAL-VALUE "1.0")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
       (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "NONLINEAR-F" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ELLSYS" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "ELLSYS-ONE-FORCE-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP
     T)
    (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
    (:NAME "LINEARIZATION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
    (:NAME "DIAGONAL-REACTION-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP
     T)
    (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
    (:NAME "ELLSYS-MODEL-PROBLEM" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)
    (:NAME "ISOTROPIC-DIFFUSION-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS"
     :EXTERNALP T)
    (:NAME "UNIT-VECTOR-FORCE-COEFFICIENT" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP
     T)
    (:NAME "ISOTROPIC-DIFFUSION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.CDR" :FULL-NAME "FL.CDR" :DOCUMENTATION
   "Defines convection-diffusion-reaction problems" :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
     :DOCUMENTATION "Convection-diffusion-reaction problem." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELF-ADJOINT-P" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)))
     :DOCUMENTATION
     "The problem is assumed to be self-adjoint if there is no convection
coefficient.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DUAL-PROBLEM" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      (:NAME "CELL->RHS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION
     "Dual problem of a cdr problem.  At the moment it works only for
selfadjoint problems with the functional of interest being the load
functional.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCALAR-DIFFUSION" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCALAR-SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCALAR-REACTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-1-COMPONENT-TENSOR" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-TENSOR-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-1-COMPONENT-VECTOR" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-VECTOR-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-DIRICHLET-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJ" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CDR-MODEL-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIFFUSION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DIFFUSION-P" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
      ((:NAME "SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SOURCE-P" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
      ((:NAME "DIRICHLET" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DIRICHLET-P" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))
      (:NAME "GAMMA" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "CONVECTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "REACTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "SIGMA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "INITIAL" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "EVP" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      ((:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) 1)
      (:NAME "PROPERTIES" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Generates a convection-diffusion-reaction model problem.  Defaults are
identity diffusion, right-hand-side equal 1, and Dirichlet zero boundary
conditions.  Ordinary function are converted into coefficient functions
depending on a global coordinate.  The first argument can be either a
domain or an integer n which is interpreted as the n-dimensional unit
cube.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CDR-NONLINEAR-RHS-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "F" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "REACTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns the Newton linearization @math{-Delta u + F'(u) u = F'(u) u -
F(u)} for the nonlinear problem @math{-Delta u +F(u) =0}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "DIFFUSION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ISOTROPIC-DIFFUSION" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP
          T))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "CONVECTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "NC-CONVECTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SCALAR-SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "REACTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SCALAR-NONLINEAR-SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP
          NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SCALAR-CONSTRAINT" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "INITIAL-VALUE" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRATU-REACTION-JET" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Returns a function which computes the jet (value and derivative) of the
Bratu reaction term.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRATU-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns a linearization for the Bratu problem @math{-Delta u +e^u =0}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-CDR" :PACKAGE-NAME "FL.CDR" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "CDR-NONLINEAR-RHS-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "ENSURE-TENSOR-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "BRATU-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "ENSURE-DIRICHLET-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "SCALAR-SOURCE" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "ENSURE-VECTOR-COEFFICIENT" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "CDR-MODEL-PROBLEM" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "SCALAR-REACTION" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "IDENTITY-DIFFUSION-TENSOR" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)
    (:NAME "SCALAR-DIFFUSION" :PACKAGE-NAME "FL.CDR" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.ELASTICITY" :FULL-NAME "FL.ELASTICITY"
   :DOCUMENTATION "Defines elasticity problems." :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<ELASTICITY-PROBLEM>" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
     :DOCUMENTATION "An elasticity problem is a special instance of an
elliptic sytems."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHARED-INITIALIZE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
       (:NAME "<ELASTICITY-PROBLEM>" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
        T))
      (:NAME "SLOT-NAMES" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISOTROPIC-ELASTICITY-TENSOR" :PACKAGE-NAME "FL.ELASTICITY"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
      (:NAME "LAMBDA" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MU" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION
     "Returns the tensor corresponding to the Lam'e constants @math{lambda}
and @math{mu}, i.e.:

@math{A_{ij}^{kl} = lambda delta_{ik} delta_{jl} + mu (delta_{ij}
delta_{kl} + delta_{kj} delta_{il})}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-ELASTICITY-TENSOR" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "TENSOR" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
      (:NAME "DIM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THRESHOLD" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL) 1.e-6))
     :DOCUMENTATION "Checks the symmetries in the elasticity tensor.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISOTROPIC-ELASTICITY-TENSOR-COEFFICIENT" :PACKAGE-NAME
      "FL.ELASTICITY" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LAMBDA" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 1.0)
      ((:NAME "MU" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "LAMBDA" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-MODEL-PROBLEM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LAMBDA" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 1.0)
      ((:NAME "MU" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) 1.0)
      (:NAME "FORCE" :PACKAGE-NAME "FL.MACROS" :EXTERNALP T)
      ((:NAME "DIRICHLET" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DIRICHLET-P" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ELASTICITY" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "ELASTICITY-MODEL-PROBLEM" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
     T)
    (:NAME "CHECK-ELASTICITY-TENSOR" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
     T)
    (:NAME "ISOTROPIC-ELASTICITY-TENSOR-COEFFICIENT" :PACKAGE-NAME
     "FL.ELASTICITY" :EXTERNALP T)
    (:NAME "ELASTICITY-UNIT-VECTOR-FORCE" :PACKAGE-NAME "FL.ELASTICITY"
     :EXTERNALP T)
    (:NAME "<ELASTICITY-PROBLEM>" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP T)
    (:NAME "ISOTROPIC-ELASTICITY-TENSOR" :PACKAGE-NAME "FL.ELASTICITY"
     :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.NAVIER-STOKES" :FULL-NAME "FL.NAVIER-STOKES"
   :DOCUMENTATION "Defines incompressible Navier-Stokes problems as a
special case of general elliptic systems."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
     :DOCUMENTATION "Navier-Stokes problem." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHARED-INITIALIZE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      (:NAME "SLOT-NAMES" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NO-SLIP-BOUNDARY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRESSURE-BOUNDARY-CONDITIONS" :PACKAGE-NAME "FL.NAVIER-STOKES"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAVIER-STOKES-VISCOSITY-COEFFICIENT" :PACKAGE-NAME
      "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAVIER-STOKES-PRESSURE-AND-CONTINUITY-COEFFICIENT" :PACKAGE-NAME
      "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALPHA*" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
     :DOCUMENTATION
     "Weight for the convective part in the Quasi-Newton linearization of the
Navier-Stokes equation."
     :INITIAL-VALUE "1.0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BETA*" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
     :DOCUMENTATION
     "Weight for the reactive part in the Quasi-Newton linearization of the
Navier-Stokes equation."
     :INITIAL-VALUE "1.0")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAVIER-STOKES-INERTIA-COEFFICIENTS" :PACKAGE-NAME
      "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Yields a quasi-Newton linearization of the term @math{u . grad u} which
has the form
@math{a Re u0 . grad u + b Re u . grad u0 = (a + b - 1) Re u0 . grad u0}
a and b are given by the values of the special variables @var{*alpha*} and
@var{*beta*}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STANDARD-NAVIER-STOKES-PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 1.0)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 0.0)
      (:NAME "FORCE" :PACKAGE-NAME "FL.MACROS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "FORCE" :PACKAGE-NAME "FL.MACROS" :EXTERNALP T))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PRESCRIBED-VELOCITY" :PACKAGE-NAME "FL.NAVIER-STOKES"
          :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "NO-SLIP" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-COEFFICIENTS-FOR" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      ((:NAME "COEFF" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PRESSURE-BC" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP
          NIL))))
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "EVAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DRIVEN-CAVITY-UPPER-BOUNDARY" :PACKAGE-NAME "FL.NAVIER-STOKES"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SMOOTH-P" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DRIVEN-CAVITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 1.0)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 0.0)
      (:NAME "SMOOTH-P" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OSCILLATING-FORCE" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERIODIC-CAVITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 1.0)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 0.0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-PRESSURE-BOUNDARY-CONDITIONS" :PACKAGE-NAME
      "FL.NAVIER-STOKES" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "DIR" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function is a preliminary version which works only for boundaries
lying in a coordinate hyperplane.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUBIC-CHANNEL" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VISCOSITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 1.0)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 0.0)
      ((:NAME "DIRECTION" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "The channel is a simple test problem which has for every Reynolds number
a Hagen-Poiseuille solution with linear pressure.  The corresponding
velocity profile is a solution to @math{-Delta u = constant}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-NAVIER-STOKES" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "NAVIER-STOKES-VISCOSITY-COEFFICIENT" :PACKAGE-NAME
     "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "STANDARD-NAVIER-STOKES-PROBLEM" :PACKAGE-NAME "FL.NAVIER-STOKES"
     :EXTERNALP T)
    (:NAME "DRIVEN-CAVITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "NO-SLIP-BOUNDARY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "NAVIER-STOKES-INERTIA-COEFFICIENTS" :PACKAGE-NAME
     "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "PERIODIC-CAVITY" :PACKAGE-NAME "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "NAVIER-STOKES-PRESSURE-AND-CONTINUITY-COEFFICIENT" :PACKAGE-NAME
     "FL.NAVIER-STOKES" :EXTERNALP T)
    (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
     :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.ITERATION" :FULL-NAME "FL.ITERATION" :DOCUMENTATION
   "The @package{FL.ITERATION} package includes the
definition for the abstract classes @class{<solver>},
@class{<iterative-solver>}, as well as the generic functions
@function{iterate} and @function{solve} which constitutes the interface for
linear and non-linear solving.  Both functions work on a blackboard which
is passed together with the iteration used as argument.

Several instances of iterative solvers are implemented, e.g. Gauss-Seidel,
SOR, ILU (in @file{linit.lisp}) and CG (in @file{krylow.lisp}).  A larger
block of code is contained in a separate package @package{FL.MULTIGRID} and
contains the multigrid iteration.  From this class, an algebraic multigrid
iteration is derived in @file{amg.lisp} and a geometric multigrid iteration
in a separate file @file{geomg.lisp} and package @package{FL.GEOMG}."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The iteration base class."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The initform depends on the subclass.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OUTPUT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A boolean indicating if output is to be done.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUCCESS-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A form specifying a success criterion.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FAILURE-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A form specifying a failure criterion.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "START-TIME" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Start time of the iteration.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUCCESS-IF-FN" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Compiled success-if form.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FAILURE-IF-FN" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Compiled failure-if form.")))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ITERATION-DEPTH*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :DOCUMENTATION "Depth of nested iteration." :INITIAL-VALUE "0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OUTPUT-DEPTH*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :DOCUMENTATION "Maximum iteration depth for which status output is done."
     :INITIAL-VALUE "0")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OUTPUT-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Determines if status output is done.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OUTPUT-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Checks if @var{*iteration-depth*} is smaller or equal
@var{*output-depth*}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OUTPUT-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Checks if @var{*iteration-depth*} is smaller or equal
@var{*output-depth*}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INDENTED-FORMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTROL-STRING" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TIME-OBSERVE*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :DOCUMENTATION
     "Observe time during an iteration.  This should be used as element in the
observe list of an iteration."
     :INITIAL-VALUE "(LIST \"   CPU\" \"~6,1F\"
      #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
          (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :TIME)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-TERMINATION-TEST" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TEST" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compiles a given list expression TEST into a test function acting on a
blackboard.  Keywords are replaced by macros accessing the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NAME" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Name of the iteration.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Often the iteration uses another iteration in its loop.
In this case, this routine returns this inner iteration.  Usually, this
will be another reader function for some slot.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method returns nil, i.e. there is no inner iteration.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method returns nil, i.e. there is no inner iteration.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Performs initial operations.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Is called after initialization and after each step.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TERMINATE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Tests terminating conditions.  Returns either NIL or
:success or :failure.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FINALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Performs final operations.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Does a step of the iteration.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ITERATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Iterates on the data in the blackboard according to the
iteration iter.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ITERATION-NAME*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :DOCUMENTATION "One of (:class-name :object :all)." :INITIAL-VALUE
     ":CLASS-NAME")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAME" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)))
     :DOCUMENTATION
     "The default name of an iteration is either its class name or the class
name together with the name of the inner iteration.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Reset data on the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Default method.  Prints the header line for observed quantities.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Default method.  Prints observed quantities.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TERMINATE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Default method evaluating success-if and failure-if expressions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Increment step counter.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FINALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Setup a report and ensures fresh line on output.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ITERATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Default method for performing an iteration.  Increases indentation level
and calls initialization, termination check, stepping, and finalization in
the correct order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ITERATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "The <linear-iteration> class.  Linear iterations are
e.g. <gauss-seidel> or <multigrid>."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DAMP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Store decomposition for multiple applications.")))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ITERATOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An <iterator> object contains functions doing iteration
work or flags indicating which work has or has not to be done for calling
that iterator.  It is generated by the generic function make-iterator."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The matrix on which the iterator is working.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INITIALIZE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "NIL or an initialization function which is called with the
matrix as argument.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ITERATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION "A function of
the arguments solution, rhs, and residual which performs an update step.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESIDUAL-BEFORE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION "T if the
residual has to be up-to-date before the iteration step.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESIDUAL-AFTER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION "T if the
residual is updated through the iteration step.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LINIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Constructs an iterator object given a linear iteration
and a matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-RESIDUAL" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "R" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method for residual computation.  Should work for everything for
which the blas operations copy! and gemm! are defined.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<MULTI-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "One step of this iteration performs nr-steps of the base
iteration."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BASE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION "Base iteration.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NR-STEPS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Number of steps with which the base iteration
is performed.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ITERATOR" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "NR-STEPS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns an iterator which does several steps of the given iterator.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MULTI-ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<MULTI-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Construct an iterator for a multi-iteration.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "A linear iteration interface for the LU exact solver."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LINIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<LU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Default method for lu iteration.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ILU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Incomplete LU iteration.  omega is the modification
parameter, eta is the diagonal enhancement."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OMEGA" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ETA" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDERING" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LINIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ILU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method for ILU iteration.  Works only for our sparse matrices.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<JACOBI>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "JAC" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<JACOBI>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "JAC" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<JACOBI>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNDAMPED-JACOBI*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(MAKE-INSTANCE 'FL.ITERATION:<JACOBI>)")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OMEGA" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPARE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Comparison function (COMPARE MAT I J) for
sorting matrix indices I and J.  The result is used as unknown ordering for
the iteration.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "STANDARD-MATRIX" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GAUSS-SEIDEL>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)) :DOCUMENTATION
     "The Gauss-Seidel iteration is SOR with omega=1." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INSTANCE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<GAUSS-SEIDEL>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GAUSS-SEIDEL*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(MAKE-INSTANCE 'FL.ITERATION:<GAUSS-SEIDEL>)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-LINIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Most tests can be found in linsolve.lisp.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Subspace correction scheme generated by collecting
overlapping blocks of unknowns."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Iteration which is used to solve for each block.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDERING" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "ORDERING" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "STORE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION "T if diagonal can be stored.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BLOCKIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Setup routine for determining the blocking of unknowns.
Returns a list of blocks where each block is a vector of keys.  May return
a second value which is a list of pair.  Each pair is of the form
start-index/end-index and can be used to filter out different fe
components.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BLOCKIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION
     "If a setup function is provided, it is called.  The default is to use
the standard blocking introduced by the block sparse matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BLOCKIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION
     "A default around method for block setup does debugging output.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Parallel subspace correction scheme." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Successive subspace correction scheme." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OMEGA" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SETUP-BLOCKS-MIXIN>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Executes the given function for determining the block
decomposition."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BLOCK-SETUP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Contains NIL or a function which is called for block setup.")))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<CUSTOM-PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SETUP-BLOCKS-MIXIN>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
       NIL)
      (:NAME "<PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "PSC with custom BLOCK-SETUP function slot." :SLOT-LIST
     NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<CUSTOM-SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SETUP-BLOCKS-MIXIN>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
       NIL)
      (:NAME "<SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "SSC with custom BLOCK-SETUP function slot." :SLOT-LIST
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BLOCKIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SETUP-BLOCKS-MIXIN>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
        NIL))
      ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION "Use the setup function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-BLOCK-INVERSE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "KEYS" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "RANGES" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-BLOCK-INVERSES" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLOCKS" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
      (:NAME "RANGES" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "SMAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GRADIENT-METHOD>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Gradient-method.  Better use CG." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LINIT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<GRADIENT-METHOD>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Iterator for the gradient method.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<CG>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Preconditioned conjugate gradient iteration" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRECONDITIONER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CG" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<CG>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Standard method for the preconditioned conjugate-gradient iteration.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<BI-CGSTAB>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Preconditioned Bi-CGStab iteration" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRECONDITIONER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "IT" :PACKAGE-NAME "FL.MACROS" :EXTERNALP T)
       (:NAME "<BI-CGSTAB>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Standard method for the preconditioned conjugate-gradient iteration.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-KRYLOW" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SOLVER>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "The base class of linear, nonlinear and whatever
iterative solvers."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OUTPUT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "OUTPUT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Solve a problem specified on the blackboard.  Returns a
modified blackboard.  The returned blackboard is guaranteed to contain at
least the fields :solution and :status.  :status is one of the values
:success or :failure.

SOLVE can also be called as (SOLVE blackboard) and will then try to figure
out a suitable solver itself.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
      (:NAME "<SOLVER>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Base class of all iterative solvers and solution
strategies."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITSOL" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Selects a solver for OBJECT.  OBJECT is usually a
problem with certain characteristics.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "If a solver is on the blackboard, use it.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Selects a linear solver for OBJECT.  OBJECT is usually a
matrix or a linear problem with certain characteristics.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "This method does a more specific search for linear problems by calling
@function{select-linear-solver}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SELECT-LINEAR-SOLVER*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "If this variable is non-nil, it is funcalled for selecting a linear
solver.  An alternative way of handling this could be given by Pascal
Costanza's @code{AspectL}."
     :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "If a linear solver is on the blackboard, use it.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DISCRETE-ITERATIVE-SOLVER-OBSERVE*" :PACKAGE-NAME "FL.ITERATION"
      :EXTERNALP T)
     :DOCUMENTATION "Standard observe quantities for iterative solvers."
     :INITIAL-VALUE "(LIST
 (LIST \"Step\" \"~4D\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :STEP)))
 (LIST \"||residual||\" \"~12,5,2E\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :DEFNORM)))
 (LIST \"res[k]/res[k-1]\" \"   ~12,5,2E\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :STEP-REDUCTION))))")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "The base class of solvers for discrete linear and
nonlinear problems."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RESIDUAL-NORM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "RESIDUAL-NORM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITSOL" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Ensure an initial guess for the solution after other initializations
have been done.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAFE-DIVIDE-BY-ZERO" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Before printing information in the main method we ensure that the defect
and its norm are up-to-date.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FINALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Put convergence rate into report.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
       :EXTERNALP NIL))
     :DOCUMENTATION "Class for linear iterative solvers." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
        (:NAME "ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The inner iteration.")))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SAFE-LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "If failure occurs, object of this class try an
alternative iteration.  Usually this will be a direct decomposition."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FALLBACK" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FALLBACK" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The fallback iteration.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FALLBACK-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FALLBACK-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SAFE-LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ITSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Stepping for a linear solver.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TERMINATE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ITER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SAFE-LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
        T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "If failure occurs we continue iterating with a direct decomposition.
Note that no other parameters on the blackboard are changed.  Thus, success
and failure have to be chosen more or less independent of the size of :step
and :time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "OUTPUT-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)))
     :DOCUMENTATION "LU decomposition without pivoting.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Default method selects LU decomposition.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LSE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<LSE>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Select linear solver based on the matrix.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SPECIAL-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "If you happen to have a problem-adapted solver given as
a function, you may use this base class."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLVER-FUNCTION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SOLVER-FUNCTION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SPECIAL-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SOLVER-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOLVE-IT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<SOLVER-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MAT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOL" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "RES" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "OUTPUT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      ((:NAME "RESIDUAL-NORM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NORM" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
      ((:NAME "THRESHOLD" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) 1.e-12)
      (:NAME "REDUCTION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      ((:NAME "MAXSTEPS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) 100)
      (:NAME "SUCCESS-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
      (:NAME "FAILURE-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Old and deprecated interface for solving linear problems.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-LINSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Linear solving on different types of vector/matrix representations.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<NONLINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<DISCRETE-ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION"
       :EXTERNALP NIL))
     :DOCUMENTATION "Class for general nonlinear iterative solvers." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LINEAR-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "LINEAR-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "The linear solver for solving the linearization.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INNER-ITERATION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "NLSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<NONLINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<NEWTON>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<NONLINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Class for the Newton iteration." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NEWTON" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
       (:NAME "<NEWTON>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Simply calls the linear solver on the linearized problem.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<NONLINEAR-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-NLSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<EVP-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<NONLINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "General class for a solver of eigenvalue problems."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<WIELANDT-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<EVP-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Wielandt iteration." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "WIELANDT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<WIELANDT-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
        NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Simply calls the linear solver on the linearized problem.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LOBPCG>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<EVP-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION "Knyazev's LOBPCG iteration." :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GRAM-SCHMIDT" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TOLERANCE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL) 0.0))
     :DOCUMENTATION
     "Orthogonalizes the columns of X wrt to the bilinear form given by the
symmetric matrix B.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GRAM-SCHMIDT-NEW" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Unfortunately, this routine squares a bad condition number of X.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "LOBPCG" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<LOBPCG>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EVP-SUCCESS*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(AND (> :STEP 2) (>= :STEP-REDUCTION 1.0)
      (>= (FL.UTILITIES:VECTOR-LAST :EIGENVALUES)
          (FL.UTILITIES:VECTOR-LAST :PREVIOUS-EIGENVALUES)))")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
       (:NAME "<EVP>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-EVPSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "<MULTI-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<GRADIENT-METHOD>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "MAKE-BLOCK" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "NEWTON" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<BLOCK-SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "COMPUTE-RESIDUAL" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<BI-CGSTAB>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "*DISCRETE-ITERATIVE-SOLVER-OBSERVE*" :PACKAGE-NAME "FL.ITERATION"
     :EXTERNALP T)
    (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "FINALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "FUNC-IMAGE-DIMENSION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<JACOBI>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<BLOCK-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<CUSTOM-BLOCK-GAUSS-SEIDEL>" :PACKAGE-NAME "FL.ITERATION"
     :EXTERNALP T)
    (:NAME "<CUSTOM-PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "BLOCKS" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
    (:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<SPECIAL-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "LINSOLVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<CG>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<DIFFERENTIABLE-FUNCTION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP
     T)
    (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
    (:NAME "<SOLVER-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<ILU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<ITERATOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "*UNDAMPED-JACOBI*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "*TIME-OBSERVE*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<GAUSS-SEIDEL>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "FUNC-DOMAIN-DIMENSION" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<SAFE-LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<CUSTOM-SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "ITERATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "FAILURE-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "*GAUSS-SEIDEL*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "*OUTPUT-DEPTH*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "TERMINATE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<LINEAR-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<LU>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<SOR>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "<NEWTON>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "PRODUCT-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "EVALUATE-GRADIENT" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "<PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "INTERVAL-METHOD" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T)
    (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "SUCCESS-IF" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
    (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.MULTIGRID" :FULL-NAME "FL.MULTIGRID" :DOCUMENTATION
   "This package contains the definition of the multigrid
iteration including algebraic multigrid (AMG)."
   :SYMBOL-LIST
   ((:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Select a suitable smoother depending on multigrid
iteration and matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Returns the Gauss-Seidel method as default smoother.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION "Returns the Gauss-Seidel method as default smoother.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "The multigrid iteration is a linear iteration specially
suited for the solution of systems of equations with elliptic terms.  In
ideal situations, it solves such systems with optimal complexity.  It is a
complicated linear iteration, which consists of applying simple linear
iterators as smoothers on a hierarchy of grids.  This grid hierarchy is
obtained either by discretizing on successively refined meshes (geometric
multigrid) or it is constructed from matrix information alone (algebraic
multigrid).

The <mg-iteration> is not intended to be used directly.  Only incorporating
mixins like <correction-scheme> or <fas> results in concrete classes like
<algebraic-mg>."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRE-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "PRE-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRE-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "PRE-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POST-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "POST-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POST-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "POST-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GAMMA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "GAMMA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BASE-LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "BASE-LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COARSE-GRID-ITERATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
        T)
       :ACCESSORS NIL :READERS
       ((:NAME "COARSE-GRID-ITERATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
         T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "FMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMBINATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "COMBINATION-TYPE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "Switch between additive and multiplicative
combination of corrections from different levels.  The additive version
should be used as a preconditioner.")))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This is a mixin-class which yields the correction
scheme.  It should be merged !before! <mg-iteration> for standard CLOS
class precedence."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FAS>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This is a mixin-class for <mg-iteration> which yields
the behaviour of Brandt's FAS scheme.  It should be merged !before!
<mg-iteration> or the derived class <geometric-mg> when using standard CLOS
class precedence."
     :SLOT-LIST NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "A_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "I_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "R_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SOL_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RHS_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RES_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PRE-SMOOTHER_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "POST-SMOOTHER_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RESIDUAL-P_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "FAS-R_" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CURRENT-LEVEL-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOLS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Anaphoric, because it works with the MG-DATA symbol.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MULTILEVEL-DECOMPOSITION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "The central generic function constructing the multilevel
hierarchy.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENSURE-MG-RESIDUAL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Ensure residual on current-level.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENSURE-SOL-RHS-RES" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Ensure allocation of sol/rhs/res on level.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PROLONGATE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Prolongation from current level.  The current level is
incremented after the operation.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESTRICT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Restriction from current level.  The current level is
decremented after the operation.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SMOOTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "WHICH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Smooth on current level.  The argument which should be
one of the keywords :pre or :post and determines which smoothing is
to be performed.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LMGC" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Performs an lmgc cycle on current level.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "F-CYCLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Performs an F-cycle on current level.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-MG-RESIDUAL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SMOOTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "WHICH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENSURE-SOL-RHS-RES" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESTRICT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "The basic method for restriction restricts the residual, decrements the
level and clears the residual-p flag.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESTRICT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESTRICT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESTRICT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<FAS>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROLONGATE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROLONGATE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<FAS>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "This version of FAS prolongation uses the res_ field on the coarser
level for computing the correction to be prolongated.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROLONGATE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LMGC" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "F-CYCLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "MG-DATA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "MG-IT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      ((:NAME "A" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION
     "This is the method for a multigrid iteration on a uniformly refined
grid, or an algebraic multigrid iteration.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*AMG-CG-MAX-SIZE*" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :DOCUMENTATION "Maximum size of the coarse grid in the AMG algorithm."
     :INITIAL-VALUE "1000")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
      (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
     :DOCUMENTATION "The algebraic multigrid iteration is a multigrid
iteration where the hierarchy of problems is derived from the fine-grid
matrix.  Usually, an algebraic multigrid will use the same iterator as its
geometric counterpart."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAX-DEPTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "MAX-DEPTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CG-MAX-SIZE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "CG-MAX-SIZE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OUTPUT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTILEVEL-DECOMPOSITION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is the standard method for building up an AMG hierarchy.  Thus, it
should be usable by a large variety of AMG algorithms.  Its purpose is to
repeat coarsening steps until either max-depth is larger than the given
value or the size of the problem is smaller than min-size.  The generic
function 'coarsen' is called to do a single coarsening step.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COARSEN" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Given AMG and matrix, this generic function returns
coarse-grid matrix, interpolation and restriction matrices for one coarsening
step.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PREPROCESS-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Eliminates Dirichlet or slave degrees of freedom which
can be handled well by smoothing.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Computes a prolongation matrix from amg and mat.  This
is often the essence of an AMG method.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESTRICTION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "PROL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Compute a restriction matrix from amg, mat and
prolongation.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COARSE-GRID-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
      (:NAME "RESTRICTION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
     :DOCUMENTATION "Computes a coarse-grid matrix from amg, mat,
prolongation and restriction.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COARSEN" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is the default method for AMG coarsening.  It performs the following steps:

1. (prolongation) Build up a prolongation P.  Its domain is the coarse-grid.

2. (restriction) Compute a restriction R.  Usually this will be R=I^t.

3. (compute-coarse-grid-matrix) Build the coarse-grid matrix A_C by computing
the Galerkin product A_C = I^t A I.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLAVE-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks if nothing depends on key and if key depends on other keys.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRICHLET-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks if key does not depend on other keys, so that it can be kept on
the fine grid.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLAVE-OR-DIRICHLET-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Checks if key is a hanging node or a Dirichlet node.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREPROCESS-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Default method which eliminates slave nodes and Dirichlet nodes for
sparse matrices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILTERED-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Precondition: items :matrix.  Postcondition: :matrix and
:filtered-matrix.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHOOSE-COARSE-GRID" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Pre-condition: an item :matrix has to be supplied on
@arg{blackboard}.  Post-condition: Items :matrix and :coarse-grid in the
result.  In the case of selection-amg this will be a set of selected
indices of the fine-grid matrix graph.  In the case of amg of aggregation
type, this is a set of mutually disjoint sets of fine-grid indices.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TENTATIVE-PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Precondition: the items :matrix and
:coarse-grid-nodes have to be supplied on the blackboard.  Post-condition:
Items :matrix and :tentative-prolongation on the blackboard.  In the case
of selection-amg this will usually be injection, in the case of
aggregation-amg this will be the piecewise constant prolongation.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IMPROVED-PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Precondition: items :mat and :prol in the rest
parameters.  Postcondition: same.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "General definition for construction of a prolongation.  For
incorporating other AMG algorithms, you should first try to keep this
routinge as it is and define modifications for the called generic
functions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESTRICTION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "PROL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "This is the default method for defining the restriction in AMG algorithms as
the transpose of the prolongation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GALERKIN-PRODUCT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "R" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Builds the Galerkin product R A P.  This function works for every type
of matrices for which the row- and column-loop macros are defined.  This
procedure should be inlined into an environment where types are known for
avoiding generic arithmetic.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COARSE-GRID-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      ((:NAME "A" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      ((:NAME "P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      ((:NAME "R" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION
     "This is the standard method of generating a coarse-grid matrix.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "This variant of algebraic multigrid coarsens in a
special way by selecting coarse-grid nodes from the fine-grid nodes.  This
selection is kept in a table, which is then used by the method build-ip to
build the actual interpolation matrix."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TENTATIVE-PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Simply injection, i.e. P_{CC}=Id_{CC}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IMPROVED-PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Define P_{FC} in a Stueben like manner.  For the fine grid point i we
have to solve for e_i in

$$ a_{ii} e_i = - sum_{j in N_i} a_{ij} e_j $$

with N_i being the neighborhood of $i$.  Now $sum_{j in N_i} a_{ij} e_j$
is replaced by $alpha sum_{j in P_i} a_{ij} e_j$ where $alpha$ is
chosen as

$$ alpha = frac{sum_{j in N_i} a_{ij}}}{sum_{j in P_i} a_{ij}} $$

to make the prolongation exact for constant functions.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<AGGREGATION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<ALGEBRAIC-MG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "This variant of algebraic multigrid coarsens in a
special way by collecting fine-grid nodes into aggregates.  These are put
into a set which is then used by the method build-ip to build the actual
interpolation matrix."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<STUEBEN>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
     :DOCUMENTATION "This provides something like Stueben's variant for
selection amg.  The original Ruge-Stueben algorithm was developed further
since 1987 by Klaus Stueben and collaborators.  These developments are
published in ....  The algorithm implemented here uses their ideas, but
does not claim to be equivalent to their code which can be bought at SCAI,
St. Augustin, Germany.  At this point, I want to thank Tanja Clees
for several discussions on AMG."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THETA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "THETA" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MIN-IN-ROW" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MAT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "ROW" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILTERED-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<STUEBEN>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Special filtering used by Ruge-Stueben.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Objects of this class are a dictionary for object/priority
pairs.  It allows to pop objects of maximum or minimum priority.  Objects can
also be deleted.

Internally, table is an adjustable vector with fill-pointer being either 0 or
larger than 0, if there is an entry in the doubly-linked list at the
corresponding index."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "PT-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DICTIONARY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "PT-DICTIONARY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PT-INSERT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "OBJ" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "INDEX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Puts an object in the priority-table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADAPT-FILL-POINTER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PT-REMOVE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "OBJ" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Removes a node from the priority table.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PT-SHIFT-PRIORITY" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "OBJ" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
      (:NAME "SHIFT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION "Changes the priority of some node.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PT-POP" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "PT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Gets the node with the highest priority from the priority table.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PT-IN-TABLE-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "PRIORITY-TABLE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
      (:NAME "OBJ" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHOOSE-COARSE-GRID" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
       (:NAME "<STUEBEN>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Ruge-Stueben coarse grid selection.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-STUEBEN" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "<FAS>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "DIRICHLET-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "RESTRICTION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "GALERKIN-PRODUCT" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "POST-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "PREPROCESS-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "POST-SMOOTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "SLAVE-OR-DIRICHLET-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
     T)
    (:NAME "SLAVE-DOF-P" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "CG-MAX-SIZE" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "<CLUSTER-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "PRE-SMOOTH" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "<STUEBEN>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "COARSE-GRID-ITERATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "MULTILEVEL-DECOMPOSITION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
     T)
    (:NAME "PRE-STEPS" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "COARSE-GRID-MATRIX" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "BASE-LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "FMG" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "COARSEN" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
    (:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.DISCRETIZATION" :FULL-NAME "FL.DISCRETIZATION"
   :DOCUMENTATION "The @package{FL.DISCRETIZATION} package defines
@class{<discretization>} as an abstract class and
@class{<fe-discretization>} as a concrete derived class.

The key for local assembly is given by the generic function
@function{get-fe}, which yields a suitable finite element for a given cell.
The value of @function{get-fe} is a class @class{<fe>} for scalar problems
or @class{<vector-fe>} for vector-valued problems which contains
information on base functions and node functionals.  Another generic
function @function{quadrature-rule} computes memoized quadrature rules for
those finite elements.

Obviously, also non-standard finite element discretizations like hp-methods
would fit into this scheme.  The key for local assembly is given by the
generic function @function{get-fe}, which yields a suitable finite element
for a given cell.  The value of @function{get-fe} is a class @class{<fe>}
for scalar problems or @class{<vector-fe>} for vector-valued problems which
contains information on base functions and node functionals.  Another
generic function @function{quadrature-rule} computes memoized quadrature
rules for those finite elements.

The file @path{lagrange.lisp} provides Lagrange finite elements of
arbitrary order.  The evaluation points for the node functionals may be
chosen either uniformly distributed or at the Gauss-Lobatto points.  The
latter choice of points yields better stability properties but is
restricted to cube meshes.  Also functions for constructing cell mappings
by pointwise evaluation of the domain boundary are provided here, which may
be used to construct isoparametric domain approximations.

In the file @path{fedisc.lisp}, the function @function{fe-discretize} is
defined.  This function performs the standard steps for finite element
discretization: interior assembly, assembly and elimination of hanging-node
and essential-boundary constraints.  It works on a blackboard as explained
in Section @ref{Blackboards} and can reuse already available matrix-vector
structure.  There is a somewhat less flexible interface provided by the
funtion @function{discretize-globally} which calls
@function{fe-discretize}.

In the files @path{ellsys-fe.lisp}, @path{elasticity-fe.lisp} and
@path{navier-stokes.lisp} one can find methods for local assembly for the
different problems.  They are defined in own packages which use both the
package @package{FL.DISCRETIZATION} and the package for the particular
problem."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Discretization base class." :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the order of the discretization.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Default value is @code{:variable}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Default value is @code{:variable}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DISCRETIZE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Calculates matrix and right-hand side for the
@var{discretization} and the @var{problem}.  Further parameters are
provided inside the @var{blackboard}.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SUGGESTED-DISCRETIZATION-ORDER*" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP T)
     :DOCUMENTATION
     "The suggested order of discretization.  In non-nil, this value should be
taken into account by methods to @arg{select-discretization}."
     :INITIAL-VALUE "NIL")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Select a discretization for the given @var{problem}
depending on the parameters on the @var{blackboard}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Forces the use of a discretization on the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Forces the use of a discretization on the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "<IP>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "WEIGHT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COORDS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-<IP>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "WEIGHT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM0" :PACKAGE-NAME NIL :EXTERNALP NIL))
       ((:NAME "REQUIRED-ARGUMENT" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)))
      (((:NAME "COORDS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1" :PACKAGE-NAME NIL :EXTERNALP NIL))
       ((:NAME "REQUIRED-ARGUMENT" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<INTEGRATION-RULE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INTEGRATION-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "WEIGHTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INTEGRATION-WEIGHTS" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGRATE-MONOMIAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "MONO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGRATE-OVER-REFERENCE-SIMPLEX" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Integrates a polynomial over the reference simplex.  This is done by
splitting into monomials and computing
 int_S(n) x^alpha = (alpha1! alpha2! ...) / (n+alpha1+...)!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGRATE-MONOMIAL-OVER-SIMPLEX-PRODUCT" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MONO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DIMS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGRATE-OVER-REFERENCE-PRODUCT-CELL" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FACTOR-DIMS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JACOBI-POLYNOMIAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "ALPHA" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "BETA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LEGENDRE-POLYNOMIAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ZEROS-OF-SEPARATING-FAMILY" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FAMILY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ACCURACY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function works on the assumption that p_0=const and the zeros of
p_n-1 together with the interval boundaries separate the zeros of p_n.
Then an interval method is performed.  Of course, accuracy problems may
occur for the inexact arithmetic.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-POINTS-FOR-WEIGHT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BETA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WEIGHTS-FOR-GAUSS-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BETA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ZEROS" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-RULE-FOR-WEIGHT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-RULE-FOR-SIMPLEX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "QUADRATURE-RULES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Computes a product rule for several lower-dimensional quadrature rules.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FACTOR-DIMS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns an s-point Gauss integration rule.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-LOBATTO-FAMILY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-LOBATTO-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GAUSS-LOBATTO-POINTS-ON-UNIT-INTERVAL" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-QUADRATURE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Degree of freedom in a finite element.  It is defined as a functional
defined by integration over a sub-cell or by evaluation at a local
coordinate of a sub-cell of a reference cell. "
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "Index of the dof in the cell-dof array")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUBCELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-SUBCELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Reference subcell on which the dof is defined")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUBCELL-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-SUBCELL-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
         T))
       :WRITERS NIL :DOCUMENTATION
       "Index of the reference subcell on which the dof is defined")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IN-VBLOCK-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-IN-VBLOCK-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "Index of the dof in the subcell vblock")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-COORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "Local coordinate of the dof in the reference subcell")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GCOORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-GCOORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "Global coordinate of the dof on the reference cell")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTIONAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-FUNCTIONAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
         T))
       :WRITERS NIL :DOCUMENTATION
       "A functional for functions defined on the reference cell")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "FE-FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERIOR-DOF?" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "A dof of a vector finite element." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "DOF-COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The component in the solution vector to which this @class{dof} belongs.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEW-VECTOR-DOF-FROM-DOF" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "SUBCELL-OFFSETS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Generates a vector-dof from a scalar dof.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Abstract base class for finite elements." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REFCELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "REFERENCE-CELL" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "A finite element <fe> is given for each reference cell,
e.g. <2-simplex>.  dofs are the degrees of freedom associated with the
cell, basis is the dual basis to dofs in some polynomial space.
subcell-ndofs is the number of ndofs on each subcell.  subcell-indices is a
list of indices for all subcells with dofs.  Usually, the <scalar-fe> will occur
as values of a procedure or as values in a hash-table with the reference
cells as keys."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FE-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The associated dofs.  These are Lagrange
functionals associated to the basis functions used for interpolating smooth
functions.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FE-BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The fe's basis functions.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-INNER-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBCELL-NDOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INNER-DOF-INDICES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DOF-AND-SHAPE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DOF" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Finite element for vector functions.  Components is a
vector of scalar finite elements.  Subcell-offsets is an array consisting
of arrays which yield such an offset for every subcell."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FE-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FE-BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-INNER-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "COMP" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-VECTOR-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBCELL-OFFSETS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reader for subcell-offsets.  This is an array of length the number of
components.  Each component is an array giving the offset of this component
in a sparse vector value block corresponding to the subcell.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "QUADRATURE-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Computes the quadrature rule to be used for the finite
element @arg{fe}.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*QUADRATURE-ORDER*" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :DOCUMENTATION
     "Quadrature order to be used.  NIL determines the order automatically."
     :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL
     (:NAME "QUADRATURE-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION "Standard quadrature rule for fe.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INTERPOLATION-FUNCTION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Assserts a correct form of @arg{func} for
interpolation with the finite element @arg{fe}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERPOLATION-FUNCTION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Returns a function for the component of @arg{dof}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERPOLATION-FUNCTION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Returns a function for the component of @arg{dof}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERPOLATION-FUNCTION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Asserts a scalar value of @arg{func}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERPOLATION-FUNCTION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Asserts a scalar value of @arg{func}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERPOLATE-ON-REFCELL" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Interpolates @arg{function} on the reference cell of the finite element
@arg{fe}.  Returns a standard-matrix corresponding to the block in the
sparse vector.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IP-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a vector of ip values for @arg{obj} which may
be a vector of integration points or a quadrature rule.  Note that this
function is memoized using an :around method.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IP-VALUES-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Unmemoized ip-values for a single position.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "POSITIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a list of nr-ip float-matrices of dimension (n-basis x 1).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "POSITIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Returns a list of positions of length components.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "QRULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<INTEGRATION-RULE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Return the fe values for the integration points of qrule.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IP-GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a vector of local gradient matrices for
@arg{obj} which may be a vector of integration points or a quadrature rule.
Note that this function is memoized using an :around method.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IP-GRADIENTS-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Unmemoized ip-gradients for a single position.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS-AT-POINT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "POSITIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a list of nr-ip float-matrices of dimension (n-basis x dim).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "POSITIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IP-GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "QRULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<INTEGRATION-RULE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Return the fe values for the integration points of qrule.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRUCT-COEFF-INPUT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "GLOBAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DPHI" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE-PARAMETERS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructs a coefficient input list from FE data @arg{cell} is the cell,
@arg{global} is the global coordinate of the integration point,
@arg{values} and @arg{gradients} the values and gradients of the shape
functions at the ip, and @arg{fe-parameters} are the corresponding data of
fe-functions to be evalutated.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "P-NOMIALS-OF-DEGREE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SIMPLEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DEG" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Returns a list of monomials of degree = deg or <= deg for a simplex.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCAPSULATE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Encapsulates @var{item} @var{dim} times.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "Q-NOMIALS-OF-DEGREE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DEG" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Builds the Qn = Pn-Pn-Pn ... on a product-cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GRAM-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VECTORS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FUNCTIONALS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PAIRING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the Gram matrix of vectors and functionals wrt pairing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-DUALS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VECTORS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FUNCTIONALS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PAIRING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Combines a set of vectors such that they are dual to a set of
functionals wrt a given pairing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROJECTION-COEFFICIENTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PAIRING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the coefficients for a basis representation of a projection of vector
on the subspace given by basis wrt the scalar product pairing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROJECT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PAIRING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Projects vector on the subspace given by basis orthogonal to the
scalar product in pairing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-CELL-GEOMETRY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "SAMPLE-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WEIGHTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "METRIC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "VOLUME" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "N" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "SAMPLE-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
         NIL))))
     :DOCUMENTATION
     "Collects cell geometry information at @arg{sample-points} inside a
property list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "<DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       T))
     :DOCUMENTATION "FE discretization base class." :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the finite element for the given discretization
and reference cell.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<STANDARD-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       T))
     :DOCUMENTATION "Finite element discretization where the finite element
depends only on the cell (usually via its reference cell)."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CELL->FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A function mapping a cell to a finite element. Usually this
will be a closure memoized over the reference cell.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<STANDARD-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SCALAR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<STANDARD-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
       :EXTERNALP T))
     :DOCUMENTATION "Class for scalar fe discretizations." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<STANDARD-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
       :EXTERNALP T))
     :DOCUMENTATION "Vector FE discretization class." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "If the slot @symbol{cell->fe} is unbound, it is derived from the
components vector.")
    (:TYPE :MACRO :SYMBOL (:NAME "MEMOIZING" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "FUNC29" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "MEMOIZING-LET" :PACKAGE-NAME NIL :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KEY-EXPRS27" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE-BODY28" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "VECFE-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VECFE-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FEDISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "I" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FEDISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "I" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "A finite element ansatz space is determined by finite
element discretization, mesh and problem.  The constraints are stored in
the slot @var{properties}."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The finite element class for this ansatz space.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The proplem for this ansatz space which determines essential constraints.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION
       "The mesh for this ansatz space which determines hanging-node constraints.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HIERARCHICAL-MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        T)))
     :DOCUMENTATION
     "h-mesh accessor for ansatz-space.  Use it for emphasizing that you work
with a hierarchical mesh.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NR-OF-COMPONENTS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Constructor of @class{<ansatz-space>}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SET-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Computes the constraint matrices for this ansatz-space.
Constraints arise partially because of the discretization, e.g. hanging
nodes, and partially because of essential boundary conditions.  Of course,
these matrices change when mesh or discretization are adapted.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL) 1)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UNIFORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "A constructor for a problem-dependent Lagrange fe.  Here, the number of
components may vary with the respective patch.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-COORDS-1D" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LAGRANGE-INNER-COORDS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VTX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VERTEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LAGRANGE-INNER-COORDS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SIMPLEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SIMPLEX>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LAGRANGE-INNER-COORDS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<PRODUCT-CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-BASIS-SIMPLEX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes the Lagrange basis for a cell.  Should be applied only for
simplices, because for product-cells the basis can be computed as a tensor
product which is faster.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHAPES-AND-DOF-COORDS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACTOR-SIMPLICES" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes simulataneously shapes and dof-coords for a product-cell as a
tensor product.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes the Lagrange basis for a product-cell accelerated.  The idea is to
construct the shapes with their associated dof-coordinates as a product of
lower-dimensional shapes and coordinates.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL-LAGRANGE-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a Lagrange fe depending on reference cell, an order (which
can be number or vector), and a type symbol.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NR-COMPS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL) 1)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UNIFORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Constructor for Lagrange fe.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-BASIS-BOUNDARY" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-BASIS-INNER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-BOUNDARY-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-REFERENCE-PARAMETERS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REFCELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes an energy-minimizing extension to the interior for the
boundary lagrangian.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-POLYNOMIAL-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a vector of polynomials representing the isoparametric mapping.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAGRANGE-MAPPING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UNIFORM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a function which maps a cell by a polynomial which is obtained
by interpolating the boundary map via Lagrange interpolation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-LAGRANGE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*IPT-TOLERANCE*" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :DOCUMENTATION
     "Entries in interpolation, projection, and transfer matrices below this
threshold are dropped."
     :INITIAL-VALUE "1.e-10")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHILDREN-OFFSETS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the offsets for each component in the children's data block.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COMPUTE-LOCAL-IMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns a local interpolation matrix as a sparse matrix
with standard-matrix entries.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-IMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SHAPE-DISTORTION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LOCAL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "This function computes a local interpolation matrix for the coarse
finite element @arg{fe}, the refinement rule @arg{rule} and the
discretization @arg{child-disc} of the children.  For each refined interior
degree of freedom, it evaluates the corresponding degree of freedom on the
basis polynomials of the father cell which yields the entry in the local
interpolation matrix.  @arg{shape-distorion} allows to modify the shape
which can be used for implementing problem-dependent finite elements.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-IMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      ((:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LOCAL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes an interpolation matrix for the refinement rule @arg{rule} and
the vector finite element @arg{vecfe}.  The algorithm evaluates the nodal
functionals of the children on the parent shape functions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-IMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LOCAL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Memoized call of compute-local-imatrix.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LOCAL-INTERPOLATION-MATRIX*" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "If non-NIL, it should be a function of the arguments cell, mesh, and
finite element class.  This function is called for computing an
interpolation matrix."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-INTERPOLATION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a local interpolation matrix for interpolating the given
@arg{fe-class} from @arg{cell} to its children in @arg{h-mesh}.  If
@arg{type} is :local, interpolation extends only to the interior children.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COMPUTE-LOCAL-PMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Computes a local projection matrix as a sparse vector
with standard-matrix entries.  Note that projection is not as canonic as
interpolation.  We implement here the injection of dof functionals,
i.e. each degree of freedom is evaluated for the refined fe function.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-PMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "This function computes a local projection matrix for Lagrangian finite
cells and maybe others.  For each interior degree of freedom, it finds the
child cell where the support of the node functional is contained and
evaluates it on the basis polynomials of the child which yields the entry
in the local projection matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-PMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "VECFE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "CHILD-DISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes a local projection matrix for vector finite elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-PMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Memoized call of compute-local-pmatrix.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LOCAL-PROJECTION-MATRIX*" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "If non-NIL, it should be a function of the arguments cell, mesh, and
finite element class.  This function is called for computing a projection
matrix."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-PROJECTION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Returns a local projection matrix for projecting the given
@arg{fe-class} from the children of @arg{cell} in @arg{h-mesh} to
@arg{cell}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-TRANSFER-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE-FROM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE-TO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes a local transfer matrix between different FE spaces.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FETRANSFER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL-KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "If cell is identified, its identification is the key.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "KEY-CELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "If cell is identified, its identification is the key.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "KEY->SIZE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "PROPERTY-MIXIN" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Mixin for objects to which an ansatz-space is associated."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HIERARCHICAL-MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SURFACE-CELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ANALOG" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASO" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
       :EXTERNALP NIL)
      (:NAME "<HT-SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP NIL))
     :DOCUMENTATION "A sparse vector which is interpreted as the ansatz-space
for a specific fe-class on a given mesh."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "KEY->SIZE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Deprecated.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPECIAL-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "RANDOM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "VALUE" :PACKAGE-NAME "FL.MULTIPROCESSING" :EXTERNALP T) 1.0))
     :DOCUMENTATION
     "Returns a ansatz space vector for @arg{ansatz-space} filled with
constant or random entries.  Essential constraints are satisfied.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANDOM-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a ansatz space vector for @arg{ansatz-space} filled with random
entries.  Essential constraints are satisfied.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHOOSE-START-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION "Choose a reasonable start vector for some strategy.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHOOSE-START-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default method chooses a random guess for eigenvalue problems and
0 otherwise.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHOOSE-START-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default method chooses a random guess for eigenvalue problems and
0 otherwise.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mapping between two ansatz-spaces." :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DOMAIN-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "IMAGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ROW-KEY->SIZE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COL-KEY->SIZE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "KEYS->PATTERN" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DOMAIN-IMAGE-MIXIN>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "DOMAIN-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IMAGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        T)
       :ACCESSORS NIL :READERS
       ((:NAME "IMAGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION"
         :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ANSATZ-SPACE-MORPHISM" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN-AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAGE-AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "M*" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "M*-PRODUCT-INSTANCE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "M*-TN-PRODUCT-INSTANCE" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
       :EXTERNALP T)
      (:NAME "<ANSATZ-SPACE-OBJECT>" :PACKAGE-NAME "FL.DISCRETIZATION"
       :EXTERNALP NIL))
     :DOCUMENTATION "A automorphism of an ansatz space." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DOMAIN-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "IMAGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ANSATZ-SPACE-AUTOMORPHISM" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTENDED-EXTRACT" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "SKEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ROW?" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "COL?" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Extracts a sub-matrix from a sparse matrix.  This routine could be
accelerated by taking member-checks out of the loop.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-DOMAIN-VECTOR-FOR" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-IMAGE-VECTOR-FOR" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MULTIPLICITY" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INTERPOLATION-TYPE*" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "Default value for interpolation type.  @code{:local} means that
interpolation extends only to the direct children, which is reasonable for
standard interpolation of Lagrange finite elements.  @code{:global}
interpolates from highest-dimensional cells and forms an average."
     :INITIAL-VALUE ":LOCAL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERPOLATION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "REGION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*INTERPOLATION-TYPE*" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP NIL)))
     :DOCUMENTATION
     "On each cell of the skeleton @arg{region} or on all cells of level
@arg{level} of the mesh of @arg{ansatz-space}, a local interpolation matrix
is collected into an interpolation matrix.  @arg{type} is the interpolation
type having a default value @var{*interpolation-type*}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROJECTION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "REGION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "The algorithm works as follows: On each cell of the provided cell list
or the whole refinement a local projection matrix computed on the reference
finite element is copied into the global projection matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "C-DIRICHLET-DOF-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "C-SLAVE-DOF-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "C-FIND-MASTER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "CONSTRAINTS-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Does work only for Lagrange fe.  Otherwise there may be several
masters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSFER-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOMAIN-AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAGE-AS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NO-SLAVES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Builds a transfer matrix from domain-as to image-as.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Select a suitable solver depending on the pde problem.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SPARSEAS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Generates a local vector for local discretization.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AS1" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL1" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "AS2" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "AS1" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
      ((:NAME "CELL2" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "CELL1" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Generates a local matrix discretization for the given ansatz-space(s).")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILL-LOCAL-FROM-GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Copies the region in global-vec determined by cell to
local-vec.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-LOCAL-FROM-GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Maps the region in global-vec determined by cell to a
local vector.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SET-GLOBAL-TO-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the region in global-vec determined by cell to the
values of the local vector array.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INCREMENT-GLOBAL-BY-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Increments the region in global-vec determined by cell
to the values of the local vector array.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GLOBAL-LOCAL-VECTOR-OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Performs an operation interfacing global to local values.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-LOCAL-FROM-GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Maps the region in the global stiffness matrix
determined by cell to a local matrix array.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SET-GLOBAL-TO-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the region in global-mat determined by cell to the
values of the local matrix array.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILL-LOCAL-FROM-GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Copies the region in global-mat determined by cell to
local-mat.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INCREMENT-GLOBAL-BY-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Increments the region in global-mat determined by cell
to the values of local-mat.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GLOBAL-LOCAL-MATRIX-OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAGE-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IMAGE-SUBCELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "DOMAIN-SUBCELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Performs some operation interfacing global to local values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-SECONDARY-INFORMATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes for a (vector) finite element the secondary information which
is important when extracting data from ansatz-space vectors and matrices.
For each dof in the fe, the access information to the global matrix in the
form vblock/in-vblock-index and the access information to the local matrix
in the form component-index/in-component-index is computed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-EXTRACTION-INFORMATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "INDICES" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
     :DOCUMENTATION
     "Computes information for extracting components out of a vector finite
 element.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL-LOCAL-VECTOR-OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SVEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-LOCAL-FROM-GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SVEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-LOCAL-FROM-GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SVEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-GLOBAL-TO-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SVEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INCREMENT-GLOBAL-BY-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "SVEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-VECTOR>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-LAGRANGE-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sets an ansatz-space-vector to interpolate a given function.  This is
still a suboptimal implementation for vector functions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIPLE-EVALUATE-LOCAL-FE" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "SHAPE-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates the vector given in @arg{local-vec} at multiple points.  Here
@arg{local-vec} should be a data vector obtained with
@function{get-local-from-global-vec} and @arg{ip-values} should be a vector
obtained from @function{ip-values}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXTRACT-IP-DATA" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "QRULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "PROPERTY-LIST" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts all ansatz-space objects in the parameters list into local
value arrays corresponding to the finite element.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL-LOCAL-MATRIX-OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "IMAGE-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "OPERATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "IMAGE-SUBCELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "DOMAIN-SUBCELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-LOCAL-FROM-GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-LOCAL-FROM-GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-GLOBAL-TO-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INCREMENT-GLOBAL-BY-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T))
      (:NAME "LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DOMAIN-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-SPARSEIF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-LOCAL-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates a finite element function in @arg{cell} at @arg{local-pos}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "GLOBAL-POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Evaluates a finite element function at @arg{global-pos}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-LOCAL-GRADIENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates a finite element gradient on @arg{cell} at @arg{local-pos}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-GRADIENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Evaluates a finite element gradient at point pos.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CELL-INTEGRATE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "COMBINER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "M+!" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "COEFF-FUNC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Integrates the ansatz-space vector @arg{x} on @arg{cell}.  If
@arg{coeff-fun} is set it should be a function which expects keyword
arguments @code{:solution} and @code{:global}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-INTEGRATE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "COMBINER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "M+!" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Integrates a finite element function over the domain.  key is a
transformer function, as always (e.g. #'abs if you want the L1-norm).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UPDATE-CELL-EXTREME-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "MIN/MAX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION
     "Computes the extreme values of @arg{x} on @arg{cell}.  Note that the
current implementation works correctly only for Lagrange finite elements,
and even for those only approximate extrema are obtained.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FE-EXTREME-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "SKELETON" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION
     "Computes the extreme values of a finite element function over the domain
or some region.  The result is a pair, the car being the minimum values and
the cdr the maximum values.  Each part is a matrix of the format ncomps x
multiplicity.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ESSENTIAL-BOUNDARY-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "WHERE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "INTERFACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Computation of essential constraints.  Should probably
be incorporated into the ansatz-space definition.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-ESSENTIAL-BOUNDARY-CONSTRAINTS" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "WHERE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "SURFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "INTERFACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Maybe there will be a general solution somewhen, but for the moment we
delegate it to the specialized assembly.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTRAINED-INTERPOLATION-MATRIX" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "WHERE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LOCAL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "The multigrid algorithm needs an interpolation which satisfies the
constraints like essential or periodic boundary conditions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELIMINATE-HANGING-NODE-CONSTRAINTS-FROM-MATRIX" :PACKAGE-NAME
      "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIRECTIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LEFT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
         (:NAME "RIGHT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONSTRAINTS-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Eliminates the constraints destructively from A.  directions is a list
consisting of the two symbols :left and :right which determine if
elimination is done wrt row or column indices.  Returns t if constraints
have been eliminated.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-LOCAL-PART!" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "INDEX-TABLE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIRECTIONS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LEFT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
         (:NAME "RIGHT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))))
     :DOCUMENTATION
     "Adds the parts for the specified indices from B to A.  This operation is
destructive for A!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HANGING-NODES-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "These are inter-level constraints.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFICATION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REGION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IMAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates the interpolation matrix for identifying boundaries or other
parts of the domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTIFICATION-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "IP-TYPE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns inter-level constraints between level and level+1.  ip-type=t
sets the constraint matrix to identity for the level-unknowns.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINED-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OLD-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OLD-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "OLD-R" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "NEW-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "NEW-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "NEW-R" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructs a combined constraint tuple given old and new constraints.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSEMBLE-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELIMINATE-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "CONSTRAINTS-P" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-Q" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "CONSTRAINTS-R" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ASSEMBLE-LOCALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       NIL)
      (:NAME "INCLUDE-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
       NIL))
     :DOCUMENTATION "Constraints are given by an equation:  P x = Q x + r

Here x in V, P is an orthogonal projection on a subspace V_P of V, Q maps
some other space which may have nonempty intersection with V_P to V_P.
With S we denote the mapping Id-P.  This function returns the matrix for a
Galerkin method on the constrained space.  It is used for treating hanging
nodes and essential boundary conditions.  When assemble-locally is t the
sparse structure of mat is used instead of the sparse structure of the
hanging node interface.  When include-constraints is non-nil, the
constraints are included in matrix and rhs.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DISCRETIZE-LOCALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "COEFFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "QRULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE-GEOMETRY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "LOCAL-U" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "LOCAL-V" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE-PARAMETERS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION "Computes a local stiffness matrix and right-hand side.
The algorithm will usually work as follows:

@enumerate
@item Get coefficient functions for the patch of the cell.
@item Compute geometry information for all ips (values and gradients of the shape functions).
@item Loop over integration points ip:
  @enumerate
    @item If necessary, compute input for coefficient functions.
          This input may contain values of finite element function in the
          property list @arg{fe-parameters}.
    @item Evaluate coefficient functions at ips.
    @item Add the contributions for matrix and right-hand side to @arg{local-mat} and @arg{local-rhs}.
  @end enumerate
@end enumerate

If @arg{local-u} and @arg{local-v} are set, then
@arg{local-v}*@arg{local-mat}*@arg{local-u} and
@arg{local-v}*@arg{local-rhs} is computed.  This feature may be used later
on for implementing matrixless computations.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSEMBLE-CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASSEMBLE-INTERIOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "WHERE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "SURFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
     :DOCUMENTATION
     "Assemble the interior, i.e. ignore constraints arising from boundaries
and hanging nodes.  Discretization is done using the ansatz space
@arg{ansatz-space} on level @arg{level}.  The level argument will usually
be @code{NIL} when performing a global assembly, and be equal to some
number when assembling coarse level matrices for multigrid.  The argument
@arg{where} is a flag indicating where assembly is to be done.  It should
be one of the keywords @code{:surface}, @code{:refined}, @code{:all}.  The
arguments @arg{matrix}, @arg{rhs} should contain vectors/matrices where the
local assembly is accumulated.  Boundary conditions and constraints are not
taken into account within this routine.

In general, this function does most of the assembly work.  Other steps like
handling constraints are intricate, but usually of lower computational
complexity.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-DISCRETIZE-LINEAR-PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Finite element discretization for a linear problem or the linearization
of a nonlinear problem.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FE-DISCRETIZE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Finite element discretization for an ansatz space provided on the
blackboard.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISCRETIZE-GLOBALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "H-MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      (:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION
     "Discretize @arg{problem} on the hierarchical mesh @arg{h-mesh} using
finite elments given by @arg{fe-class}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FEDISC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "<FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "General discretization interface for FE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ESSENTIAL-CONSTRAINTS-FOR-KEY" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ESSENTIAL-BOUNDARY-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
      ((:NAME "WHERE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL)
       (:NAME "SURFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "INTERFACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "NR-OF-INNER-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "MAKE-ANSATZ-SPACE-MORPHISM" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "CELL-INTEGRATE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DOF-IN-VBLOCK-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "DOF-FUNCTIONAL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "QUADRATURE-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "FE-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INTERPOLATION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "MAKE-ANSATZ-SPACE-AUTOMORPHISM" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "DOF-GCOORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<IP>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CONSTRUCT-COEFF-INPUT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "*QUADRATURE-ORDER*" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "MULTIPLE-EVALUATE-LOCAL-FE" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "PROJECTION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "MAKE-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "SORT-KEYS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<STANDARD-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "SET-GLOBAL-TO-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "GAUSS-LOBATTO-POINTS-ON-UNIT-INTERVAL" :PACKAGE-NAME
     "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "GET-LOCAL-FROM-GLOBAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "DISCRETIZATION-ORDER" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "<SCALAR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INTEGRATION-POINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "LOCAL-PMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DOMAIN-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "HIERARCHICAL-MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CONSTRAINTS-ON-LEVEL" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "CONSTRAINED-INTERPOLATION-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INNER-DOF-INDICES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "IMAGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "LOCAL-TRANSFER-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "DOF-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INCREMENT-GLOBAL-BY-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "LOCAL-IMATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CHOOSE-START-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "<DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "ASSEMBLE-INTERIOR" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "GAUSS-RULE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DOF-COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DO-DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DOF-COORD" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INTEGRATION-WEIGHTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "FE-INTEGRATE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "ESSENTIAL-BOUNDARY-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "LAGRANGE-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<SCALAR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "IP-GRADIENTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "SUBCELL-NDOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "GET-LOCAL-FROM-GLOBAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "CELL->FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "IP-WEIGHT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CELL-LAGRANGE-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "*SUGGESTED-DISCRETIZATION-ORDER*" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "MAKE-FE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "FE-DISCRETIZE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "FE-CELL-GEOMETRY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INTERPOLATE-ON-REFCELL" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "FE-EXTRACTION-INFORMATION" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "SPECIAL-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "SET-GLOBAL-TO-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "FE-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "TRANSFER-MATRIX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<ANSATZ-SPACE-MORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "DISCRETIZE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "ELIMINATE-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "FE-LOCAL-GRADIENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "GET-FE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "FE-BASIS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "SUBCELL-OFFSETS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "IP-COORDS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "MAKE-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "DISCRETIZE-GLOBALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "IP-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<VECTOR-FE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DOF-SUBCELL-INDEX" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "DISCRETIZE-LOCALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "ASSEMBLE-CONSTRAINTS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "FE-GRADIENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INTERIOR-DOF?" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<CELL-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "REPRESENTATIVE" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
    (:NAME "SURFACE-CELLS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "LAGRANGE-ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "FE-EXTREME-VALUES" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
     T)
    (:NAME "DECOMPOSE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "MAKE-LOCAL-MAT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "INCREMENT-GLOBAL-BY-LOCAL-VEC" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "NR-OF-DOFS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CELL-KEY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "CELL->MATRIX-VALUE-BLOCKS" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "DOF" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<ANSATZ-SPACE>" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "FE-LOCAL-VALUE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "RANDOM-ANSATZ-SPACE-VECTOR" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "LAGRANGE-MAPPING" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
    (:NAME "<VECTOR-FE-DISCRETIZATION>" :PACKAGE-NAME "FL.DISCRETIZATION"
     :EXTERNALP T)
    (:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.ELLSYS-FE" :FULL-NAME "FL.ELLSYS-FE" :DOCUMENTATION
   "Finite element discretization of a general second order
elliptic system, see the description in the ELLSYS package.  The result is
a local matrix A and local rhs b.  They will usually depend on u_old which
is stored in the solution vector."
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-M-MATRIX-PROPERTY" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "MAT" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Problematic, because it discretizes convection only with first order
accuracy.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UPWINDING*" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
     :DOCUMENTATION "Discretizes convection with upwinding when set to T."
     :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCRETIZE-LOCALLY" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
      (:NAME "COEFFS" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "VECFE" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "QRULE" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "FE-GEOMETRY" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "MASS-MATRIX" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
      (:NAME "LOCAL-U" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "LOCAL-V" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "RESIDUAL-P" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "FE-PARAMETERS" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Local discretization for a pde system of the form described in the
documentation of the package @package{ELLSYS}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISCRETIZE-ELLSYS" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "NR-COMPS" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Discretizes an elliptic system with @arg{nr-comps} components on the
@arg{dim}-dimensional unit cube with Lagrange fe of @arg{order}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLSYS-FE-TESTS" :PACKAGE-NAME "FL.ELLSYS-FE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS NIL)
  (:TYPE :PACKAGE :NAME "FL.ELASTICITY-FE" :FULL-NAME "FL.ELASTICITY-FE"
   :DOCUMENTATION "This package specializes the discretization for systems
of elasticity.  Since elasticity is a special case of elliptic systems
which are handled in @path{ellsys-fe.lisp}, not much remains to do."
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "DISCRETIZE-ELASTICITY" :PACKAGE-NAME "FL.ELASTICITY-FE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.ELASTICITY-FE" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.ELASTICITY-FE" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.ELASTICITY-FE" :EXTERNALP NIL))
     :DOCUMENTATION "Local routine for testing purposes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-FE-TESTS" :PACKAGE-NAME "FL.ELASTICITY-FE" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS NIL)
  (:TYPE :PACKAGE :NAME "FL.NAVIER-STOKES-FE" :FULL-NAME "FL.NAVIER-STOKES-FE"
   :DOCUMENTATION "This package specializes the finite element
discretization for Navier-Stokes problems.  Up to now, we use only
generalized Taylor hood elements."
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "NAVIER-STOKES-LAGRANGE-FE" :PACKAGE-NAME "FL.NAVIER-STOKES-FE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.NAVIER-STOKES-FE" :EXTERNALP NIL)
      (:NAME "DIM" :PACKAGE-NAME "FL.NAVIER-STOKES-FE" :EXTERNALP NIL)
      (:NAME "DELTA" :PACKAGE-NAME "FL.NAVIER-STOKES-FE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a generalized Taylor-Hood element @math{(Q^{k+delta})^d/Q^k} of
order @math{k} in dimension @math{d}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-DISCRETIZATION" :PACKAGE-NAME "FL.DISCRETIZATION"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAVIER-STOKES-FE-TESTS" :PACKAGE-NAME "FL.NAVIER-STOKES-FE"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "NAVIER-STOKES-LAGRANGE-FE" :PACKAGE-NAME "FL.NAVIER-STOKES-FE"
     :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.GEOMG" :FULL-NAME "FL.GEOMG" :DOCUMENTATION
   "The @package{FL.GEOMG} package contains iterations which
depend on geometric information, obtained for example from the
discretization.  At the moment, these are the geometric multigrid
iteration, an AMG-like scheme for preconditioning high-order
discretizations with low-order ones, and some block smoothers with
overlapping blocks."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-BLOCKING-MIXIN>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Determines if the block choice is centered on cells or
vertices.  The latter choice can be shown to be robust in the order p for
finite elements of Lagrange type [Pavarino 1994]."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-PSC>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<GEOMETRIC-BLOCKING-MIXIN>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
       NIL)
      (:NAME "<PSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "PSC with geometry-based block choice." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-SSC>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<GEOMETRIC-BLOCKING-MIXIN>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
       NIL)
      (:NAME "<SSC>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "SSC with geometry-based block choice." :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GEOMETRIC-PSC" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Constructor of a geometric parallel subspace correction.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GEOMETRIC-SSC" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Constructor of a geometric successive subspace correction.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-VERTEX-CENTERED-BLOCK" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "VERTEX-KEY" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "ASA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Collects a block of keys for cells containing the vertex.  Handles
identification and hanging nodes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CONNECTED-BLOCKS-IN-TABLE" :PACKAGE-NAME "FL.GEOMG"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TABLE" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "ASA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BLOCKIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<GEOMETRIC-BLOCKING-MIXIN>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
        NIL))
      ((:NAME "ASA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Collects blocks consisting either of all subcells of cells in the
cell-centered case or all cells to which a vertex belongs in the
vertex-centered case.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<VANKA>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "<GEOMETRIC-SSC>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T))
     :DOCUMENTATION "Vanka-like smoother for @math{Q^{k+1}/Q^k}
discretizations of Navier-Stokes."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTENDED-BLOCK" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ASA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "KEYS" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Collect the next layer around keys in the matrix graph of asa.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SETUP-BLOCKS" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VANKA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<VANKA>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T))
      ((:NAME "ASA" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION
     "Adds to the usual vertex centered blocks all surrounding velocity
degrees of freedom.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-MG>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<MG-ITERATION>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
     :DOCUMENTATION "The geometric multigrid iteration is a multigrid
iteration where the hierarchy of problems is obtained by discretizing on a
sequence of refined meshes.  It is an abstract class and should be merged
with either <correction-scheme> or <fas>."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLUTION" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "SOLUTION" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GALERKIN-P" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "GALERKIN-P" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      ((:NAME "MATRIX" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION
     "Choose the smoothing method as either Gauss-Seidel or SSC depending on
discretization order.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)))
     :DOCUMENTATION
     "This method is called in the case of higher-order discretizations, such
that we choose an SSC smoother by default.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-SMOOTHER" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T)))
     :DOCUMENTATION
     "For discretized Navier-Stokes system, we use Vanka type smoothing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTEND-HORIZONTALLY" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "SURFACE-MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION "Adds one layer from surface-mat to mat.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTEND-LEVEL-MATRIX" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INITIAL-MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "SURFACE-MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LAYERS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Extends initial-mat by several layers from surface-mat.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTILEVEL-DECOMPOSITION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "MGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<GEOMETRIC-MG>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
      ((:NAME "MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION
     "Assemble all levels below the top-level.  The top level should have been
already assembled.  Works only for uniformly refined meshes.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-CS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<CORRECTION-SCHEME>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
      (:NAME "<GEOMETRIC-MG>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION "Geometric multigrid of correction scheme type." :SLOT-LIST
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GEOMETRIC-CS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY-ARGS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructor of a geometric multigrid iteration of correction scheme
type.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LOCAL-MG>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<GEOMETRIC-CS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T))
     :DOCUMENTATION "Local geometric multigrid of correction scheme type."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-MG" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY-ARGS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructor of a geometric multigrid iteration of correction scheme
type.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GEOMETRIC-FAS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FAS>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
      (:NAME "<GEOMETRIC-MG>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION "Brandt's FAS scheme approximates the unknowns on every
level instead of using corrections.  This requires slightly more work, but
is better suited for handling nonlinear problems and local refinements."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY-ARGS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructor of a geometric multigrid iteration of FAS type.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MULTILEVEL-DECOMPOSITION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "MGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<GEOMETRIC-FAS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION
     "Add the vector of FAS restrictions to the output of this method for
<geometric-mg>.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<S1-REDUCTION>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<SELECTION-AMG>" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T))
     :DOCUMENTATION "This class is useful for reducing a higher-order FE
discretization to a first-order FE discretization.  This can afterwards be
treated by ordinary AMG steps.  Even if it has the structure of a
<selection-amg>, it is far from being a pure algebraic multigrid."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROLONGATION" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AMG" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<S1-REDUCTION>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T))
      ((:NAME "MAT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION "Transfer to S1 finite elements.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<S1-COARSE-GRID-ITERATOR>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<LINEAR-ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Calls LU directly, if the matrix was not reduced to S1
which may happen if there are only Dirichlet vertices."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ITERATOR" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "S1-CGIT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<S1-COARSE-GRID-ITERATOR>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP
        T))
      ((:NAME "A" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
       (:NAME "<SPARSE-MATRIX>" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "S1-REDUCTION-AMG-SOLVER" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      (:NAME "REDUCTION" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL)
      ((:NAME "MAXSTEPS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) 100))
     :DOCUMENTATION
     "This is an AMG solver which works also for Lagrange fe of order p by
reducing them to P^1 first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-GEOMG" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "<VANKA>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<GEOMETRIC-FAS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "FAS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<S1-REDUCTION>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<GEOMETRIC-PSC>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<GEOMETRIC-CS>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "GEOMETRIC-PSC" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<S1-COARSE-GRID-ITERATOR>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "<GEOMETRIC-SSC>" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "GEOMETRIC-SSC" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "S1-REDUCTION-AMG-SOLVER" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)
    (:NAME "GEOMETRIC-CS" :PACKAGE-NAME "FL.GEOMG" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.GRAPHIC" :FULL-NAME "FL.GRAPHIC" :DOCUMENTATION
   "This package provides a low-level interface to external
graphic software; at the moment both IBM's @code{OpenDX} and @code{Gnuplot}
are supported."
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-GRAPHIC-PROGRAM*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP
      T)
     :DOCUMENTATION "Default graphics program." :INITIAL-VALUE ":DX")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IMAGES-PATHNAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Pathname of the directory for @femlisp{} images.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPHIC-INPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL))
     :DOCUMENTATION "Return the input stream for the graphic program.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPHIC-OUTPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL))
     :DOCUMENTATION "Return the output stream for the graphic program.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return a filename for the data of this plot.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYSTEM-P" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "This around-method handles the system-p flag: if true,
@function{graphic-file-name} returns a filename suitable for use in
external programs.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYSTEM-P" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "This around-method handles the system-p flag: if true,
@function{graphic-file-name} returns a filename suitable for use in
external programs.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Write the data file for @arg{program} to
@arg{stream}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns commands for plotting to be sent to the graphics
program.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEND-GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Routine for sending commands to the graphics server.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-OUTPUT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Calls the generic graphic interface in appropriate order.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DX-PATHNAME*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION "Pathname of the @program{DX} binary." :INITIAL-VALUE
     "(OR (FL.MACROS:AAND FL.START::*DX-PATH* (PROBE-FILE (PATHNAME FL.MACROS:IT)))
    (FL.PORT:FIND-EXECUTABLE \"dx\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DX-PROCESS*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION "The current @program{dx} process." :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-DX-PROCESS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-INPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DX-INPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DX-OUTPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DX-TOGGLE*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION
     "Depending on @var{*dx-toggle*} the cache option is switched on/off.
This is a trick to make @arg{dx} redraw the picture."
     :INITIAL-VALUE "0")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns the output file for @program{dx}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-OUTPUT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WAIT-FOR-DX" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DX-COMMANDS-MESH" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "TUBES" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "GLYPHS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "GLYPH-SCALE" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "BACKGROUND" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DX-COMMANDS-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FOREGROUND" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       (:NAME "WHITE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "SHAPE" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "RANGE" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DX-BUG-WORKAROUND*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION
     "If T switches on hardware rendering.  This variant is problematic,
although it gets rid of black lines in dx pictures in some situations.
E.g. it does not do xy-graphs correctly and fails for @lisp{(plot (n-cube
1))}.  It can also kill the Xwindows interface on some computers."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SHOW-DX-WINDOW*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION
     "Show the DX window when something is plotted.  This may be useful on
Laptops when the window is hidden."
     :INITIAL-VALUE "T")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "BACKGROUND" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       (:NAME "BLACK" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "RESOLUTION" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL) 480)
      ((:NAME "WIDTH" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL) 480)
      ((:NAME "HEIGHT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL) 480)
      (:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FILENAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "WINDOW" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       "femlisp-image")
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GNUPLOT-PATHNAME*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION "Pathname of the @program{Gnuplot} binary." :INITIAL-VALUE
     "(OR
 (FL.MACROS:AAND FL.START::*GNUPLOT-PATH* (PROBE-FILE (PATHNAME FL.MACROS:IT)))
 (FL.PORT:FIND-EXECUTABLE \"gnuplot\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GNUPLOT-PROCESS*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :DOCUMENTATION "The current @program{Gnuplot} process." :INITIAL-VALUE
     "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-GNUPLOT-PROCESS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-INPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GNUPLOT-INPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GNUPLOT-OUTPUT-STREAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GNUPLOT-TICS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FILENAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns the output file for @program{Gnuplot}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WAIT-FOR-GNUPLOT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEFT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "RIGHT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "TOP" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      (:NAME "BOTTOM" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
      ((:NAME "BORDER" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TICS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TERMINAL" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL) "x11")
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP NIL) "gnuplot.ps")
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
    (:NAME "GRAPHIC-OUTPUT" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
    (:NAME "GRAPHIC-FILE-NAME" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
    (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
    (:NAME "*DEFAULT-GRAPHIC-PROGRAM*" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
    (:NAME "SEND-GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.PLOT" :FULL-NAME "FL.PLOT" :DOCUMENTATION
   "This package provides a high-level interface to
plotting.  It defines a generic function @code{PLOT} which can be used to
plot several types of objects, e.g. cells, meshes, finite element and
coefficient functions."
   :SYMBOL-LIST
   ((:TYPE :GENERIC :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Plot is a generic function which dispatches depending on
the type of object it receives.  Its behaviour can additionally be modified
by keyword parameters.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PLOT*" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :DOCUMENTATION
     "If set to NIL, plotting is disabled.  If set to :message, a message is
printed to *trace-output* instead of plotting."
     :INITIAL-VALUE "(IF FL.GRAPHIC::*DX-PATHNAME*
    T
    :MESSAGE)")
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Handles the *plot* parameter.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VERTEX-INDEX-TABLE" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a hash-table vertices->indices for refinement skeletons of
reference cells.  This is needed for plotting.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFCELL-REFINEMENT-VERTICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the vertices of the @arg{level}-refinement of the reference
cell of @arg{cell} as a vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REFCELL-REFINEMENT-VERTEX-POSITIONS" :PACKAGE-NAME "FL.PLOT"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NR-OF-REFINEMENT-VERTICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-KEY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "LOCAL-VTX" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a suitable hash-table key for the vertex of cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-POSITION-INDICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Collects all vertices of surface cells into a hash-table and indexes
them.  When type is :continuous, then the key is the vertex, otherwise the
key is the pair cell/vertex, which allows for the plotting of functions
that are discontinuous across cell boundaries.  @arg{depth} can be a number
representing the number of cell subdivisions, or a function which yields
this number for the actual cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONNECTIONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "POSITION-INDICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the connections in a list.  Each list item is again a list
consisting of cell and vertex indices.  @arg{depth} can be a number
representing the number of cell subdivisions, or a function which yields
this number for the actual cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-ALL-POSITION-VALUES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "POSITION-INDICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "CELL->VALUES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Computes the values at the positions.  @arg{depth} can be a number
representing the number of cell subdivisions, or a function which yields
this number for the actual cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POSITION-ARRAY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "POSITION-INDICES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Collects all positions in the hash-table POSITION-INDICES into an
array.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-POSITIONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION-ARRAY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "HEADER" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Write a header and all positions to the stream.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DX-BUG-TRANSFORMATION*" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :DOCUMENTATION
     "Transformation which drops the ugly line occuring for me due to some bug
either in DX or Mesa."
     :INITIAL-VALUE "(MAKE-INSTANCE 'FL.FUNCTION:<LINEAR-FUNCTION> :A
               (LET ((FL.PLOT::EPS 1.e-5))
                 (FL.MATLISP:MAKE-REAL-MATRIX
                  `((,(COS FL.PLOT::EPS) ,(- (SIN FL.PLOT::EPS)))
                    (,(SIN FL.PLOT::EPS) ,(COS FL.PLOT::EPS))))))")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "CELL->VALUES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "RANK" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) 0)
      (:NAME "SHAPE" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 0)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Rather general plotting procedure writing data to a file.  Plots in
Gnuplot format in 1D, to DX format in 2D and 3D.  Can plot data either
discontinuous or continuous at the cell boundaries when coefficient
functions are involved.  cell->values has to be either nil --meaning no
data-- or some function mapping cells to a list of corner values.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION "Default gnuplot plotting command.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-POLYGONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "POLYGONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DESTRUCTURE-POLYGON" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "POLYGON" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extracts name and type of @arg{point-set}.  This can be either a list of
points which is interpreted as a polygon, or a list of pairs of points
which is interpreted as a vector field.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "POLYGONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Can handle either a single list of points, or a single list of the form
(string . points) or a list of such lists which is interpreted as multiple
graphs.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLYGONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LINEWIDTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 1)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "POLYGONS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GNUPLOT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "CELL->VALUES" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Writes data in gnuplot format to a stream.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PLOT-GNUPLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLOT-DIMENSION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLOT-TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "The default plot transformation is simply a projection on R^3.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CELL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<CELL>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CELLS-P" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
      (:NAME "PART" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Plots a mesh. If provided, @arg{cells} should be 1-cells.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-MESHPLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-EVALUATION-MATRIX" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FE" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SOLUTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a local evaluation matrix for the refcell-refinement-vertices of
the given depth.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PLOT-CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PLOT-CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PART" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PLOT-CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "H-MESH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<HIERARCHICAL-MESH>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PART" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PLOT-CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PLOT-CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "SKEL" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<SKELETON>" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "INDEX" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 0)
      ((:NAME "COMPONENT" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T) 0)
      (:NAME "KEY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "RANK" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) 0)
      (:NAME "SHAPE" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "PART" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Plots a certain component of the ansatz space vector @arg{asv},
e.g. pressure for Navier-Stokes equations.  @arg{index} chooses one of
several solutions if @arg{asv} has multiplicity larger 1.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASV" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<PDE-PROBLEM>" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      ((:NAME "REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) 0)
      ((:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 0)
      ((:NAME "KEY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "COEFFICIENT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "RANK" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T) 0)
      (:NAME "SHAPE" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Plots a coefficient function for the problem on the given mesh.  Does
handle coefficients depending on finite element functions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-COEFFPLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "F" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<FUNCTION>" :PACKAGE-NAME "FL.FUNCTION" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELLS" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
      ((:NAME "DEPTH" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL) 0)
      ((:NAME "KEY" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) 0)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Plots @arg{function} on the given cell list @arg{cells}.  If @arg{cells}
is empty, the highest-dimensional cells of @arg{mesh} are used.  If this is
NIL, then a temporary mesh on @arg{domain} is creatend and refined up to
level @arg{refinements}.  Each cell is additionally refined @arg{depth}
times.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FUNCTION-PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-COMMANDS" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRAPHIC-WRITE-DATA" :PACKAGE-NAME "FL.GRAPHIC" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ASA" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "PROGRAM" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ASA" :PACKAGE-NAME "FL.PLOT" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-AUTOMORPHISM>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS ((:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.STRATEGY" :FULL-NAME "FL.STRATEGY" :DOCUMENTATION
   "This package provides methods for solving problems by
adaptive FEM."
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ITERATIVE-SOLVER>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "A strategy is an iteration for solving a problem defined
on a blackboard."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Solves the problem on the blackboard using the given strategy.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UPDATE-I-P-SOL" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "For a given local refinement this updates interpolation and projection
operators on the blackboard and interpolates the solution to the new
surface.  This is used in the strategy package.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An error estimator is used as first argument in the
generic functions local-estimate, global-estimate, and estimate which work
on a blackboard."
     :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOCAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ERROR-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Puts a hash-table of local error contributions on the
blackboard.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GLOBAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ERROR-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Puts an estimate for the total error on the blackboard.
Will usually need the result of the local estimate.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ERROR-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Yields both local and global estimate.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Executes local and global error estimation in sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ETA->P2-VEC" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ETA" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "MESH" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
     :DOCUMENTATION
     "Maps eta into a P2 ansatz function.  This is used for plotting the error
distribution.  Note that for tetrahedra, no cell contributions are shown.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION "For this form of error estimator the local estimate is
further decomposed in the steps project-solution, compute-weight-function,
and compute-local-estimate, all of them acting on the blackboard."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-ERROR-APPROXIMANT" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-WEIGHT-FUNCTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DIFFERENCE-WITH-PROJECTION>" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This is a mixin to <standard-error-estimator> which
adapts project-solution to compute the difference between the solution and
its projection to a coarser level in the quantity :solution-increment on
the blackboard."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-ERROR-APPROXIMANT" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<DIFFERENCE-WITH-PROJECTION>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Computes solution-increment computed as difference solution on the
finest mesh and a projection to the next-coarser level.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GLOBAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This is a mixin to <standard-error-estimator> which
leads to computation of a p-norm of the local contributions.  If global-p
is :identity a simple summation is performed."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GLOBAL-P" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "<GLOBAL-AND-LOCAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<GLOBAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION "This is a mixin to <standard-error-estimator> which
computes a local cell norm."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LOCAL-P" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<GLOBAL-AND-LOCAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<GLOBAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Computes the global error from the local error contributions.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-117" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LOOP-HASHTAB-NEXT-135" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<PROJECTION-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<DIFFERENCE-WITH-PROJECTION>" :PACKAGE-NAME "FL.STRATEGY"
       :EXTERNALP NIL)
      (:NAME "<GLOBAL-AND-LOCAL-NORM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       NIL)
      (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
       :EXTERNALP NIL))
     :DOCUMENTATION "Estimates the error by measuring the difference between
the solution and a projected solution in a hierarchical mesh by a certain
norm given by local-p and global-p."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SETUP-ENRICHED-ANSATZ-SPACE>" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin leading to the assembly of interpolated
solution, matrix and rhs in an enriched ansatz space."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-ERROR-APPROXIMANT" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<SETUP-ENRICHED-ANSATZ-SPACE>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Setup of interpolated solution, matrix, and rhs in the enriched ansatz
space.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<SOLVE-DUAL-PROBLEM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin leading to the computation of the solution of
the dual problem for the given functional.  The result is put in
:error-weight-function."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTIONAL" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FUNCTIONAL" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLVER" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-WEIGHT-FUNCTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<SOLVE-DUAL-PROBLEM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Solves a dual problem in an ansatz-space of higher order.  This error
estimator is computationally more intensive than the original problem.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LOCAL-TEST-WITH-DUAL>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A mixin testing the residual with an approximation of a
dual solution.  To localize we subtract a local projection on lower order
polynomials."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMPUTE-LOCAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<LOCAL-TEST-WITH-DUAL>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Evaluates the duality error estimator given the dual solution and the
approximate solution u.  Works only for the :load-functional case at the
moment, because the right-hand side is not assembled for the primal
problem.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GLOBAL-ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ERREST" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<LOCAL-TEST-WITH-DUAL>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DUALITY-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "<SETUP-ENRICHED-ANSATZ-SPACE>" :PACKAGE-NAME "FL.STRATEGY"
       :EXTERNALP NIL)
      (:NAME "<SOLVE-DUAL-PROBLEM>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "<LOCAL-TEST-WITH-DUAL>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       NIL)
      (:NAME "<STANDARD-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
       :EXTERNALP NIL))
     :DOCUMENTATION "Estimates the error by testing the difference z-IPz
against the residual.  Here z is the solution of a dual problem in an
enriched finite element space."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ERROR-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An indicator is used as first argument in the generic
functions indicate which works on a blackboard.  Based on the
quantities computed by an error estimator, i.e. eta, indicate puts a list
of elements to be refined on the blackboard.  When ensure-mesh-quality
is t, the indicator ensures that the difference of mesh widths of
neighboring cells does not become larger than a factor of 4."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ENSURE-MESH-QUALITY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "ENSURE-MESH-QUALITY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Puts a list of elements to be refined on the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "This around-method refines a cell if it detects a side that is refined
more than two times.  Thus, a maximum of two refinement levels between
side-adjacent cells is ensured.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<UNIFORM-REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       T))
     :DOCUMENTATION "Marks all cells for refinement." :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<UNIFORM-REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY"
        :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Marks all cells for refinement which have no parent or for which the
error estimator yields a large eta.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<REGION-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       T))
     :DOCUMENTATION "Marks all cells in a region for refinement." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IN-REGION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "IN-REGION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<REGION-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Marks all cells for refinement which have no parent or for which the
error estimator yields a large eta.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<LARGEST-ETA-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       T))
     :DOCUMENTATION "Puts the fraction of the cells with the largest error
contributions in the refinement table.  Note that a fraction of 1.0 yields
uniform refinement.  Below from-level, global refinement is used.  block-p
indicates that all children of a parent cell have to be refined at once."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FRACTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "FRACTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PIVOT-FACTOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "PIVOT-FACTOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FROM-LEVEL" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FROM-LEVEL" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BLOCK-P" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "BLOCK-P" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<LARGEST-ETA-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Marks all cells for refinement which have no parent or for which the
error estimator yields a large eta.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ERROR-INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ETA-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :DOCUMENTATION "Observe an estimate of the global error." :INITIAL-VALUE
     "(LIST \"      ETA\" \"~9,2,2E\"
      #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
          (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :GLOBAL-ETA)))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FE-APPROXIMATION-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      NIL)
     :DOCUMENTATION "Standard observe quantities for fe approximation."
     :INITIAL-VALUE "(LIST
 (LIST \"Step\" \"~4D\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :STEP)))
 (LIST \" CELLS\" \"~6D\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.MESH:NR-OF-SURFACE-CELLS
            (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :MESH))))
 (LIST \"    DOFS\" \"~8D\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (FL.UTILITIES:WITH-ITEMS (&KEY FL.STRATEGY::SOLUTION)
               FL.UTILITIES:BLACKBOARD
             (AND FL.STRATEGY::SOLUTION
                  (FL.MATLISP:TOTAL-ENTRIES FL.STRATEGY::SOLUTION)))))
 FL.ITERATION:*TIME-OBSERVE*)")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
     :DOCUMENTATION "This class describes iterative finite element
appoximation strategies."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Providing initform for <iteration> slot.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PLOT-MESH" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Plot the mesh at the beginning and after changes.  Can
be a function in which case it is called on the mesh to do the plotting.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       :ACCESSORS NIL :READERS
       ((:NAME "FE-CLASS" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The class of finite element.  If it is not set, it is
automatically chosen.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The error estimator, which computes information on the error
distribution in a hash-table in the :ETA-field on the blackboard, as well
as a global estimate in :GLOBAL-ETA which can be used to terminate the
iteration.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The error indicator which marks cells for local refinement.
Usually, this procedure will be based on the error distribution
approximated in the :ETA-field on the blackboard.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "APPROXIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Compute a finite element approximation within the
setting given on the blackboard.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-ANSATZ-SPACE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Ensures a finite element ansatz space on the blackboard.  If a
discretization is not provided, it is selected depending on the problem.
If a mesh is not provided and if the domain is curved, we use precise cell
mappings if these are available.  Otherwise, an isoparametric approximation
is used with order @math{max(2,p+1)} where p is the discretization order.
This is reasonable, because the dual problem for estimators based on
duality is discretized with @math{p+1}, and because the refinement near the
boundary works significantly better with @math{p>=2}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Ensures a finite element ansatz space and a first approximation to the
solution on the blackboard.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Approximates and estimates the error for the current ansatz-space.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TERMINATE-P" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Sets some variables before passing control to the check of termination
criteria.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Enlarges the ansatz space.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FE-INTERPOLATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
     :DOCUMENTATION "This class implements adaptive finite element
interpolation of the given coefficient function as a variant of finite
element approximation."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COEFFICIENT" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "A coefficient determining the function to be interpolated.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERPOLATE-FUNCTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AS" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOLUTION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION "Interpolates @arg{func} with the ansatz-space @arg{as}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "APPROXIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-INTERPOLATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "Interpolates a given function.  Does only Lagrange interpolation at the
moment.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FE-INTERPOLATION" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MENTRIES-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :DOCUMENTATION "Observe entries for the size of the matrix."
     :INITIAL-VALUE "(LIST \" MENTRIES\" \"~9D\"
      #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
          (FL.MACROS:ACOND
           ((FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :DISCRETIZED-PROBLEM)
            (FL.MATLISP:TOTAL-ENTRIES (FL.PROBLEM:MATRIX FL.MACROS:IT)))
           (T NIL))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STATIONARY-FE-STRATEGY-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP T)
     :DOCUMENTATION
     "Standard observe quantities for stationary finite element strategies."
     :INITIAL-VALUE "FL.STRATEGY::*FE-APPROXIMATION-OBSERVE*")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<STATIONARY-FE-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
      T)
     :SUPER-CLASS-LIST
     ((:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
     :DOCUMENTATION "This class describes some iterative finite element
solution strategies for continuous, stationary PDE problems."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOLVER" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The solver for solving the discretized systems.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "APPROXIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<STATIONARY-FE-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Ensures accuracy of the solution and the error estimate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FE-STATIONARY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<FE-EVP-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "<STATIONARY-FE-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
       T))
     :DOCUMENTATION "This class is a modification of
@class{<stationary-fe-strategy>} for solving PDE eigenvalue problems by a
Wielandt iteration."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "APPROXIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FE-STRATEGY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<FE-EVP-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Ensures accuracy of the solution and the error estimate.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ROTHE-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :DOCUMENTATION "Standard observe quantities for Rothe." :INITIAL-VALUE
     "(LIST
 (LIST \"Step\" \"~4D\"
       (LAMBDA (FL.UTILITIES:BLACKBOARD)
         (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :STEP)))
 FL.ITERATION:*TIME-OBSERVE*
 (LIST \"    Time\" \"~8,2F\"
       (LAMBDA (FL.UTILITIES:BLACKBOARD)
         (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :MODEL-TIME))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MODEL-TIME*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :DOCUMENTATION
     "Contains the model time during the iteration for use in coefficient functions."
     :INITIAL-VALUE "NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "<ITERATION>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
     :DOCUMENTATION "Rothe strategy for time-dependent problems.  The idea of
the Rothe method for solving @math{U_t +A U =f} is to do an ODE
time-stepping scheme in an infinite-dimensional function space.  Therefore,
in every time-step, the solution has to be approximated sufficiently well
in the space variable."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MODEL-TIME" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "MODEL-TIME" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Current time in the time-stepping scheme.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TIME-STEP" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TIME-STEP" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SCHEME" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "TIME-STEPPING-SCHEME" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "Time-stepping scheme,
e.g. @code{:implicit-euler} or @code{:crank-nicolson}.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STATIONARY-SUCCESS-IF" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STATIONARY-FAILURE-IF" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OBSERVE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Providing initform for <iteration> slot.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALLY" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INTERMEDIATE" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Plots the solution initially and after each time step.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT-STEP" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Do one step by solving the stationary problem.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLSYS-INITIAL-VALUE-INTERPOLATION-COEFFICIENTS" :PACKAGE-NAME
      "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "COEFFS" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a coefficient list for the initial value interpolation problem to
be solved at the beginning.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIAL-VALUE-INTERPOLATION-PROBLEM" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a stationary problem for interpolating the initial value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELLSYS-TIME-STEP-COEFFICIENTS" :PACKAGE-NAME "FL.STRATEGY"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
      (:NAME "COEFFS" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a coefficient list for the stationary problem to be solved at
each time step.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TIME-STEP-PROBLEM" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ROTHE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
       (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T))
      ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ELLSYS-PROBLEM>" :PACKAGE-NAME "FL.ELLSYS" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a stationary problem corresponding to a step of the Rothe
method.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*U_1/4-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(LIST (FORMAT NIL \"~19@A\" \"u(midpoint)\") \"~19,10,2E\"
      #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
          (LET* ((FL.STRATEGY::SOL
                  (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :SOLUTION))
                 (FL.STRATEGY::DIM
                  (FL.MESH:DIMENSION
                   (FL.DISCRETIZATION:MESH
                    (FL.DISCRETIZATION:ANSATZ-SPACE FL.STRATEGY::SOL))))
                 (FL.STRATEGY::VAL
                  (FL.DISCRETIZATION:FE-VALUE FL.STRATEGY::SOL
                                              (FL.MATLISP:MAKE-DOUBLE-VEC
                                               FL.STRATEGY::DIM 0.25))))
            (FL.MATLISP:VREF (AREF FL.STRATEGY::VAL 0) 0))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ROTHE-ELLSYS" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<ELASTICITY-PROBLEM>" :PACKAGE-NAME "FL.ELASTICITY" :EXTERNALP
        T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-LINEAR-SOLVER" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<NAVIER-STOKES-PROBLEM>" :PACKAGE-NAME "FL.NAVIER-STOKES"
        :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Select an error estimator.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-ESTIMATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SELECT-INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION "Select a refinement indicator.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "For systems, there is still a problem with multigrid and local
refinements.  Therefore, we do not allow local refinement here.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SELECT-INDICATOR" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
       (:NAME "<CDR-PROBLEM>" :PACKAGE-NAME "FL.CDR" :EXTERNALP T))
      (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION
     "For CDR problems, solving with local refinement works.  If an error is
estimated, we refine those cells within some factor of the maximum error.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SOLVE" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T)
       (:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DUMMY" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP NIL))
     :DOCUMENTATION
     "Implements the simplest interface for problem solving.  Only a
blackboard describing the problem is passed and the solution method is
open."))
   :EXTERNAL-SYMBOLS
   ((:NAME "<STATIONARY-FE-STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<LARGEST-ETA-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<PROJECTION-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY"
     :EXTERNALP T)
    (:NAME "<DUALITY-ERROR-ESTIMATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
     T)
    (:NAME "<UNIFORM-REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY"
     :EXTERNALP T)
    (:NAME "<FE-APPROXIMATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<REFINEMENT-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<REGION-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<ABOVE-THRESHOLD-INDICATOR>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP
     T)
    (:NAME "*ETA-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<FE-INTERPOLATION>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "<STRATEGY>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "INDICATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "ESTIMATE" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)
    (:NAME "*STATIONARY-FE-STRATEGY-OBSERVE*" :PACKAGE-NAME "FL.STRATEGY"
     :EXTERNALP T)
    (:NAME "<ROTHE>" :PACKAGE-NAME "FL.STRATEGY" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.DOMAINS" :FULL-NAME "FL.DOMAINS" :DOCUMENTATION
   "Femlisp package for domain definitions." :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-WITH-CUBIC-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION "Generates an n-cube-domain with an n-cube hole.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-WITH-CUBIC-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates an n-dimensional cell domain with an n-cube hole.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-WITH-ELLIPSOIDAL-HOLE" :PACKAGE-NAME "FL.DOMAINS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "A" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates an n-cube-domain with an ellipsoidal hole satisfying (Ax,x)=1
using n-cube patches.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-WITH-ELLIPSOIDAL-HOLE" :PACKAGE-NAME "FL.DOMAINS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "A" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates an n-dimensional cell domain with an ellipsoidal hole.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-WITH-BALL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.25))
     :DOCUMENTATION
     "Generates an n-cube-domain with an n-ball hole using n-cube patches.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-WITH-BALL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.25))
     :DOCUMENTATION
     "Generates an n-dimensional cell domain with an n-ball hole.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATCH-ON-INNER-BOUNDARY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Checks if the patch is part of the hole boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATCH-ON-N-CUBE-BOUNDARY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns T, if the patch is on the boundary of the n-cube.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-HOLE-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-WITH-CUBIC-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION "Generates an n-cube-domain with an n-cube inlay.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-WITH-CUBIC-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates an n-dimensional cell domain with an n-cube hole.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CUBE-WITH-BALL-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.25))
     :DOCUMENTATION
     "Generates an n-cube-domain with an n-ball inlay using n-cube patches.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "N-CELL-WITH-BALL-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.25))
     :DOCUMENTATION
     "Generates an n-dimensional cell domain with an n-ball inlay.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATCH-IN-INLAY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Checks if the patch is part of the inlay including its boundary.  This
is done by checking if all corners lie in the interior of the unit cell.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-INLAY-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOTTOM-MAPPING" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GRAD-F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OSCILLATING-BOUNDARY-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GRAD-F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      ((:NAME "UPPER" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a domain with an oscillating lower boundary at $x_n=-1$ where
the oscillation is defined by a scaling function $f$ with values in $R^+$.
Usually, also $grad-f$ should be provided, because it makes possible an
enhanced domain approximation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOUNDARY-LAYER-CELL-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GRAD-F" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      ((:NAME "EXTENSIBLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "UPPER" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns the domain generated by oscillating-boundary-domain with
identified lateral faces.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINUSOIDAL-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "AMPLITUDE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.15)
      ((:NAME "SHIFT" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 1.0)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a boundary layer cell with a sinusoidally oscillating lower
boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XSINX-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "AMPLITUDE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL) 0.4)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a boundary layer cell with a sinusoidally oscillating lower
boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLINE-INTERPOLATED-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "HEIGHTS" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL))
     :DOCUMENTATION "Boundary which is interpolated from heights.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BL-PATCH-ON-LOWER-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "BL-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns T if the patch is on the lower oscillating boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BL-PATCH-ON-PELLET-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "BL-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Returns T if the patch is on the pellet.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BL-PATCH-ON-UPPER-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "BL-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION "Returns T if the patch is on the upper boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BL-PATCH-ON-ARTIFICIAL-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BL-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
      (:NAME "PATCH" :PACKAGE-NAME "FL.MESH" :EXTERNALP T))
     :DOCUMENTATION
     "Returns the artificial boundary on which the distributional source
acts.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "N-CUBE-WITH-CUBIC-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "N-CUBE-WITH-BALL-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "PATCH-ON-N-CUBE-BOUNDARY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "OSCILLATING-BOUNDARY-DOMAIN" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "N-CUBE-WITH-ELLIPSOIDAL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "BL-PATCH-ON-LOWER-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "N-CELL-WITH-ELLIPSOIDAL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "SPLINE-INTERPOLATED-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "N-CELL-WITH-BALL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "BL-PATCH-ON-PELLET-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "BL-PATCH-ON-ARTIFICIAL-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS"
     :EXTERNALP T)
    (:NAME "N-CUBE-WITH-CUBIC-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "N-CELL-WITH-CUBIC-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "N-CUBE-WITH-BALL-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "BL-PATCH-ON-UPPER-BOUNDARY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP
     T)
    (:NAME "PATCH-ON-INNER-BOUNDARY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "SINUSOIDAL-BL-CELL" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "PATCH-IN-INLAY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "N-CELL-WITH-CUBIC-HOLE" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)
    (:NAME "N-CELL-WITH-BALL-INLAY" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "FL.APPLICATION" :FULL-NAME "FL.APPLICATION"
   :DOCUMENTATION "This package uses most other Femlisp packages.  It is
meant to be the package a Femlisp user works in."
   :SYMBOL-LIST
   ((:TYPE :METHOD :SYMBOL
     (:NAME "AVERAGE-COEFFICIENT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "ANSATZ-SPACE" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COEFFICIENT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CORRECTION-TENSOR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SOLUTION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T))
      ((:NAME "RHS" :PACKAGE-NAME "FL.PROBLEM" :EXTERNALP T)
       (:NAME "<ANSATZ-SPACE-VECTOR>" :PACKAGE-NAME "FL.DISCRETIZATION"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-ELASTICITY-CORRECTION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "MAT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts the (dim^2)x(dim^2) matrix returned as result of correction
tensor into an (dim x dim)-array with (dim x dim)-matrix entries.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EFFECTIVE-TENSOR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLOT-DIFFUSION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REFINEMENTS" :PACKAGE-NAME "FL.MESH" :EXTERNALP T) 0)
      ((:NAME "DEPTH" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 2)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Plots the first component of the diffusion tensor.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*RESULT*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP T)
     :DOCUMENTATION
     "Special variable used for storing the blackbboard of the last
computation."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "STORING" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Stores the result of @arg{body} in @var{*result*}.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REFINEMENT-DEMOS*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Refine\" :SHORT
                   \"Shows regular refinements of geometric bodies.\" :LONG
                   \"The refinement is done using Freudenthal's algorithm for
simplex refinement generalized to product cells.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DISCRETIZATION-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Discretization\" :SHORT
                   \"Demonstrate discretization aspects\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SOLVER-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Solvers\" :SHORT \"Demonstrate solver aspects\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EQUATION-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Equations\" :SHORT \"Solve several types of pdes\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ADAPTIVITY-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Adaptivity\" :SHORT \"Adaptive solution\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EFFECTIVE-COEFFS-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Homogenization\" :SHORT
                   \"Computing effective coefficients\" :LONG
                   \"In homogenization for periodic media the computation of
effective constants is done via solution of a cell problem in a
representative cell.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INTERIOR-COEFFS-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"interior-coeffs\" :SHORT
                   \"Computing interior coefficients\" :LONG
                   \"The effect of periodical oscillations in coefficients of a
partial differential equation can be replaced up to some error
by an averaged equation.  Computing the coefficients appearing
in these effective equations usually involves solving a cell
problem on a representative cell and averaging the obtained
solution.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BOUNDARY-COEFFS-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"boundary-coeffs\" :SHORT
                   \"Computing boundary law coefficients\" :LONG
                   \"The effect of a periodically oscillating boundary can be
replaced up to some error by including correction terms into the
boundary law.  Computing the coefficients appearing in these
usually involves solving a problem on a semi-infinite
periodicity cell and averaging the obtained solution.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ARTICLES-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Articles\" :SHORT \"Calculations connected to articles\"
                   :LONG
                   \"The main goal of Femlisp is education and research.  In this
part of the demonstrations, we have collected computations which
were done in Femlisp related to some research articles.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BOOKS-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Books\" :SHORT \"Collection of demos for books\" :LONG
                   \"The main goal of Femlisp is education and research.  In this
part of the demonstrations, we have collected computations which
are related to some books.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COURSES-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Courses\" :SHORT \"Collection of demos for courses\"
                   :LONG \"A collection of demos for courses about different
subjects.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TALKS-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Talks\" :SHORT \"Collection of demos for talks\" :LONG
                   \"A collection of demos for talks about different subjects.\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "1D-GRAPH" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LEFT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.0)
      ((:NAME "RIGHT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1.0)
      ((:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0.01))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLOT-LAGRANGE-BASIS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Plots the 1D Lagrange basis of the given order and type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LAGRANGE-BASIS-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODEL-PROBLEM-STIFFNESS-MATRIX" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the stiffness matrix for the @arg{dim}-dimensional
model problem discretized on level @arg{level} with finite
elements of order @arg{order}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISPLAY-STIFFNESS-MATRIX" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Shows the stiffness matrix of the model problem.  Maybe you
will have to use hscroll-mode in your Emacs buffer for
comfortably looking at the matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STIFFNESS-MATRIX-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "MAX-LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MULTIGRID-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"multigrid\" :SHORT
                   \"Demos focused on multigrid as solution technique\" :LONG
                   \"Multigrid is a fast solution technique for problems with
elliptic character.  Here are some demos showing the application
of multigrid.\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLOT-ITERATION-BEHAVIOR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ITERATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NR-STEPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 10))
     :DOCUMENTATION "Plots the propagation of the error for some iteration.  The
iteration is applied to a finite element discretization with
Lagrange finite elements of a given order of the Laplace model
problem in dim space dimensions on a mesh with mesh-width
2^{-level}.  This is done by plotting the approximation starting
with an initial random guess and right-hand side 0.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PLOT-ITERATION-BEHAVIOR-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ITERATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IT-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TWO-GRID-BEHAVIOR-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTHER-PERFORMANCE-TEST" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 2)
      (:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "SIMPLEX" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Tests performance of smoother on a Laplace model problem.
See make-smoother-demo for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTHER-DEMO-EXECUTE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SMOOTHER-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "SMOOTHER-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTHER-GRAPH-EXECUTE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SMOOTHER-PERFORMANCE-GRAPH-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "SMOOTHER-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BPX-DEMO-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SMOOTHER-CLASS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "<JACOBI>" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))))
     :DOCUMENTATION "Performs the BPX demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BPX-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "PROBLEM-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-MULTIGRID-DEMOS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-REFINEMENT-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRANSFORMATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LAPLACE-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"laplace\" :SHORT
                   \"Several problems involving Laplace equation\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HEAT-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"heat\" :SHORT \"Problems involving the heat equation\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CDR-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"cdr\" :SHORT \"convection-diffusion-reaction equations\"
                   :LONG
                   \"Demos for solving convection-diffusion-reaction problems.\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ELASTICITY-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"elasticity\" :SHORT
                   \"Solve problems in linear elasticity\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*NAVIER-STOKES-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"Navier-Stokes\" :SHORT
                   \"Solve Navier-Stokes flow problems\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROBLEM-DISCRETIZATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns stiffness matrix and rhs for a discretization of order
@var{order} on a mesh with a mesh-size 2^@var{-level}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODEL-PROBLEM-DISCRETIZATION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "SIZE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns stiffness matrix and right-hand side for the discretization of
the Laplace model problem on a cube of dimension @var{dim} using a mesh of
meshwidth 1/@var{size} cells in each dimension with Lagrange finite
elements of order @var{order}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ITERATION-TEST" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LINIT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MAXSTEPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 200)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Tests the linear iteration @var{linit} on a model problem specified via
keyword parameters in @var{args}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOLVE-LAPLACE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))))
     :DOCUMENTATION
     "An old routine for solving the Laplace problem.  You should use the
interface provided by @code{solve} which provides automatic and more
general solving together with a more flexible customization.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-H-CONVERGENCE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "MIN-LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "MAX-LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-P-CONVERGENCE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "MIN-ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "MAX-ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ISOPAR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXACT-1D-SOLUTION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The precise value for x=1/2 is easily seen to be 1/8.
On the other hand it is equal to
1/pi^2 (4/pi)^d sum_{k odd} +/- 1/k^3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXACT-2D-SOLUTION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "With the help of Fourier series we obtain the representation
1/pi^2 (4/pi)^d sum_{k_i odd} +/- 1/{k_1 k_2 (k_1^2+k_2^2)}
for the value u(1/2,1/2).
+/- means sin(k_1*pi/2) * sin (k_2*pi/2)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXACT-3D-SOLUTION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "With the help of Fourier series we obtain the representation
1/pi^2 (4/pi)^d sum_{k_i odd} +/- 1/{k_1 k_2 k_3 (k_1^2+k_2^2+k_3^2)}
for the value u(1/2,1/2,1/2).
+/- means sin(k_1*pi/2) * sin (k_2*pi/2) * sin (k_3*pi/2)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MODEL-PROBLEM-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 5.0))
     :DOCUMENTATION "Performs the model problem demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MODEL-PROBLEM-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DOMAIN-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-LAPLACE-MODEL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FURTHER-LAPLACE-TESTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "This function provides further tests for Laplace problems, partially on
non-structured meshes and/or on domains with curved boundary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAPLACE-1D-LOCALLY-REFINED" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BOUNDARY-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "NR-OF-LOCAL-REFINEMENTS" :PACKAGE-NAME "FL.APPLICATION"
       :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-REFINED-LAPLACE-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CELL-SOLVE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PARAMETRIC" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "LU-SOLVER" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))))
     :DOCUMENTATION
     "Solves the given problem and returns a result on a blackboard.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CDR-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM/DOMAIN" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIFFUSION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the cell problem on the n-cell-domain of the given dimension.
Gamma yields dim right hand sides of the form A e_k, i.e. the columns of
the diffusion tensor.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-SQUARE-INLAY-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SMOOTH-COEFFICIENT-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-BALL-INLAY-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "EPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHEQUERBOARD-PROBLEM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "EPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns cell problem on the n-cell-domain of the given dimension with
a chequerboard pattern.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INLAY-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "EPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generates the inlay cell problem.  Parameters are the coefficient of the
inlay and the component of the cell vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POROUS-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.25)
      (:NAME "A" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CDR-INTERIOR-EFFECTIVE-COEFF-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T))
     :DOCUMENTATION
     "Computes an effective diffusion tensor for different configurations.
The approximation is done with isoparametric finite elements.  Uniform
refinement is used, the linear solver is a geometric multigrid scheme used
in a nested iteration fashion.  The solution to the cell problem is a
vector field whose components are plotted one after the other.  The setting
has cubic symmetry, from which one can easily see that the effective tensor
must be a scalar multiple of the identity.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EFFECTIVE-DIFFUSION-DEMO*" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"effective-diffusion\" :SHORT
                   \"Computes an effective diffusion tensor\" :LONG
                   (DOCUMENTATION
                    'FL.APPLICATION::CDR-INTERIOR-EFFECTIVE-COEFF-DEMO
                    'FUNCTION))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EFFECTIVE-DIFFUSION-POROUS-DOMAIN-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EFFECTIVE-DIFFUSION-INLAY-DOMAIN-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HOM-CDR-TESTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOUNDARY-LAYER-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BL-CELL-DOMAIN" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a boundary layer problem for the given boundary layer
cell domain.  We assume that the oscillating boundary on which
Dirichlet nodes are prescribed is identified by $x_n<1$ for its
coordinates, and the patch for which the source is prescribed is
$x_n=0$.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINUSOIDAL-BOUNDARY-LAYER-CELL-PROBLEM" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY-ARGS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a boundary layer problem for a sinusoidally
oscillating domain.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-CBL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CBL-OBSERVE*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION "Observe list for Cbl." :INITIAL-VALUE
     "(LIST \"                Cbl\" \"~19,10,2E\" #'FL.APPLICATION::COMPUTE-CBL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CDR-BL-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM/DOMAIN" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "MAX-LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "PLOT-MESH" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Performs the bl-diffusion demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CDR-BL-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-BL-CDR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-V-CYCLE-CONVERGENCE" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SMOOTHER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "*GAUSS-SEIDEL*" :PACKAGE-NAME "FL.ITERATION" :EXTERNALP T))
      ((:NAME "STEPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 20)
      (:NAME "GALERKIN-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "CR-MAX" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "BASE-LEVEL" :PACKAGE-NAME "FL.MULTIGRID" :EXTERNALP T) 1)
      ((:NAME "COMBINATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "MULTIPLICATIVE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "CG" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Solves with a V-cycle and prints the average convergence rate.  If
cr-max is provided, it is checked if the convergence rate is smaller than
this value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MG-CDR-TESTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*AMG-CDR-DEMO*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"amg-cdr\" :SHORT \"AMG solving of C-D-R eqns\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AMG-CDR-SOLVER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The standard AMG solver for the demos in this file.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-AMG-CDR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*U_1/2-OBSERVE*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LIST
 (LIST (FORMAT NIL \"~19@A\" \"u(midpoint)\") \"~19,10,2E\"
       #'(LAMBDA (FL.UTILITIES:BLACKBOARD)
           (LET* ((FL.APPLICATION::SOL
                   (FL.UTILITIES:GETBB FL.UTILITIES:BLACKBOARD :SOLUTION))
                  (FL.APPLICATION::DIM
                   (FL.MESH:DIMENSION
                    (FL.DISCRETIZATION:MESH
                     (FL.DISCRETIZATION:ANSATZ-SPACE FL.APPLICATION::SOL))))
                  (FL.APPLICATION::VAL
                   (FL.DISCRETIZATION:FE-VALUE FL.APPLICATION::SOL
                                               (FL.MATLISP:MAKE-DOUBLE-VEC
                                                FL.APPLICATION::DIM 0.5))))
             (FL.MATLISP:VREF (AREF FL.APPLICATION::VAL 0) 0)))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRATU-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 5.0)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Function performing the Bratu demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BRATU-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRATU-TESTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LAPLACE-EIGENVALUE-DEMO*" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"eigenvalues\" :SHORT \"Some eigenvalue problems\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAPLACE-EIGENVALUE-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "DIRICHLET" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.0))
     :DOCUMENTATION
     "Function performing the eigenvalue demo for the Laplace operator.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LAPLACE-EIGENVALUE-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DOMAIN-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EVP-CDR-TEST" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEAT-EQUATION-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "STEPS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 20))
     :DOCUMENTATION "Performs the heat equation demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HEAT-EQUATION-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DOMAIN-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-HEAT-EQUATION" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-MODEL-PROBLEM-COMPUTATION" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T))
     :DOCUMENTATION "Performs the model problem demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ELASTICITY-MODEL-PROBLEM-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "DOMAIN-NAME" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-ELASTICITY-MODEL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-CELL-PROBLEM-GAMMA" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a right-hand side for an elasticity cell problem.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-INLAY-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DOMAIN" :PACKAGE-NAME "FL.MESH" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INLAY-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PATCH-IN-INLAY-P" :PACKAGE-NAME "FL.DOMAINS" :EXTERNALP T)))
      ((:NAME "INTERIOR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 100.0))
     :DOCUMENTATION
     "Generates the inlay cell problem.  The coefficient is of the
form @math{A^{ij}_{lambda mu}}$, and the equation to be solved
is in variational form

@math{ 0 = partial_lambda phi^i A^{ij}_{lambda mu}
    (partial_mu N^j_m + Gamma^j_{mu m}) }

With @math{k,nu} being such that @math{m= k n + nu} we have
@math{Gamma^{j_k}{munu}=delta_{jk}delta_{munu}} leading
to matrix-valued functions @math{N_nu} in the notation of
cite{Bakhvalov-Panasenko}.  We should also have
@math{N^{jk}_nu = N^{jnu}_k} because of the symmetries of A.
The correction to the arithmetic average has to be computed as

@math{ A_{corr}^{kr}_{iq} := int_Y A^{kl}_{ij} grad_{x_j}
N^{lr}_q = int_Y div_{x_j} A^{lk}_{ji} N^{lr}_q = F[k*dim+i]
cdot N[r*dim+q].}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INLAY-BLOCK-DECOMPOSITION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BLOCKIT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ASA" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Block decomposition for obtaining a coarse-grid solver which is robust
against the size of the coefficient jump.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELASTICITY-INTERIOR-EFFECTIVE-COEFF-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Computes the effective elasticity for a certain periodic
medium.  The approximation is done with finite elements and
blending.  Uniform refinement is used, the linear solver is a
geometric multigrid scheme used in a nested iteration fashion.
A subtle point here is that the coarse-grid smoother has to
treat the inlay as a block to be robust against the large
coefficient jump.

The solution to this cell problem is a tensor field of rank 3
with dim^3 components which are plotted one after the other.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EFFECTIVE-ELASTICITY-DEMO*" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"effective-elasticity\" :SHORT
                   \"Computes an effective elasticity tensor\" :LONG
                   (DOCUMENTATION
                    'FL.APPLICATION::ELASTICITY-INTERIOR-EFFECTIVE-COEFF-DEMO
                    'FUNCTION))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EFFECTIVE-ELASTICITY-POROUS-DOMAIN-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EFFECTIVE-ELASTICITY-INLAY-DOMAIN-DEMO" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-HOMOGENIZATION-ELASTICITY" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WATCH-VELOCITY-AND-PRESSURE-AT-POINT" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POINT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VELOCITY-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "PRESSURE-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a observe list for watching the velocity at @arg{point}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WATCH-VELOCITY-AT-POINT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "POINT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a observe list for watching the velocity at @arg{point}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WATCH-DC-CENTER-VELOCITY" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a observe list for watching the velocity at the center of the
driven cavity.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NS-DRIVEN-CAVITY-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DELTA" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      ((:NAME "PLOT-MESH" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      (:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.0)
      (:NAME "SMOOTH-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "WATCH-POINTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
       ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "MAKE-DOUBLE-VEC" :PACKAGE-NAME "FL.MATLISP" :EXTERNALP T)
         (:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.5))))
     :DOCUMENTATION "Performs the driven cavity demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DRIVEN-CAVITY-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "REYNOLDS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-DRIVEN-CAVITY" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NS-CELL-PROBLEM-FORCE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NS-HOLE-CELL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VISCOSITY" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1.0)
      ((:NAME "REYNOLDS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 0.0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERMEABILITY-TENSOR" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "BLACKBOARD" :PACKAGE-NAME "FL.UTILITIES" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STOKES-DARCY-DEMO" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROBLEM" :PACKAGE-NAME "FL.DISCRETIZATION" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "STORE-P" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      ((:NAME "DELTA" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Stokes-Darcy - Computes a Darcy permeability tensor

Computes the effective permeability for Stokes flow in a domain
with periodically distributed ball-shaped holes.  The
approximation is done with finite elements and blending.
Uniform refinement is used, the linear solver is a geometric
multigrid scheme used in a nested iteration fashion.  Smoothing
is done by a Vanka type smoother.

The solution to this cell problem in ~d~ dimensions consists of
~d~ velocity/pressure pairs, i.e. in total ~d~*(~d~+1)
components.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EFFECTIVE-PERMEABILITY-DEMO*" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"effective-permeability\" :SHORT
                   \"Computes a permeability tensor\" :LONG
                   (DOCUMENTATION 'FL.APPLICATION::STOKES-DARCY-DEMO 'FUNCTION))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EFFECTIVE-PERMEABILITY-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIM" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HOM-NS-TESTS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HR-EVALUATION-POINT*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(COERCE '(0.5 2.5) 'FL.MATLISP:DOUBLE-VEC)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HR-GRADX-VALUE*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(* PI 0.5 (SIN (* 0.75 PI)) (SIN (* 2.625 PI)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-RHS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION
     "Smooth rhs for the problem -Delta u = rhs in the H-R article.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-DOMAIN" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HR-DELTA*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION
     "Small positive value which is used for ``smoothing'' the distributional
rhs."
     :INITIAL-VALUE "1.e-12")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-DUAL-PROBLEM-RHS" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CELL" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "FE" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Distributional rhs for the dual problem of the article by
Heuveline&Rannacher.  We distribute it to several points to
ensure that all surrounding cells contribute.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-DUAL-PROBLEM-FE-RHS" :PACKAGE-NAME
      "FL.APPLICATION" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-DUAL-PROBLEM" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Only for testing purposes, otherwise such a problem is
automatically generated inside the error estimator cycle.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEUVELINE-RANNACHER-COMPUTATION" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL) 1)
      (:NAME "PLOT" :PACKAGE-NAME "FL.PLOT" :EXTERNALP T))
     :DOCUMENTATION "Performs the Heuveline-Rannacher demo.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HEUVELINE-RANNACHER-DEMO" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ORDER" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
      (:NAME "LEVELS" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-HEUVELINE-RANNACHER" :PACKAGE-NAME "FL.APPLICATION"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EFFCOEFF-ROOT*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(FL.DEMO:MAKE-DEMO :NAME \"effective-coefficients-demo\" :SHORT
                   \"Calculation of effective coefficients\" :LONG
                   \"Femlisp demos for the talk about computing effective
coefficients.\")"))
   :EXTERNAL-SYMBOLS
   ((:NAME "QUIT" :PACKAGE-NAME "FL.PORT" :EXTERNALP NIL)
    (:NAME "STORING" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP T)
    (:NAME "*RESULT*" :PACKAGE-NAME "FL.APPLICATION" :EXTERNALP T)))))
