
(:TYPE :SYSTEM :NAME "cl-rdfxml" :AUTHOR "Joshua Taylor" :MAINTAINER NIL
 :VERSION "0.9" :LICENCE NIL :DESCRIPTION
 "The CL-RDFXML system provides functionality for processing RDF/XML
serializations of RDF graphs. RDF/XML processes XML using Closure XML
(CXML), and handles URIs using PURI."
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("CXML" "PURI") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-RDFXML" :FULL-NAME "CL-RDFXML" :DOCUMENTATION
   "The cl-rdfxml package provides functionality for processing
RDF/XML representations of RDF graphs. RDF/XML processes XML using
Closure XML (CXML) and handles URIs using PURI."
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "STRCAT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRINGS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "strcat string* => string
strings, string---strings
strcat returns the concatentation of the strings.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DOALIST" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((((:NAME "KEY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "VALUE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "PAIR" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
         ((:NAME "MAKE-SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          "PAIR")))
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "RESULT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION
     "doalist ((key value [pair]) list-form [result-form]) {tag | statement}* => result*
key, value, pair---symbols
list-form, result-form,, statement---forms
tag---a go tag; not evaluated
results---if a return or return from form is executed, the values
passed from that form; otherwise, the values returned by the
result-form or nil if there is no result form.
Doalist iterates over the keys and values (and conses) in an
association list. The body of doalist is like a tagbody. doalist is
similar to a dolist, but rather than binding a single variable to each
element of a list, doalist binds key and value to the car and cdr of
each cons in an association list, and pair to the cdr.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROMPT-FOR-LINE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MESSAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "prompt-for-line message &rest args => line, okp
message---a format control
args---format arguments for message
line---a string
okp---a boolean
Prompt-for-line displays the prompt specified by message and args on
*query-io* and reads a line from *query-io*. If the reading is
successful, the line is returned and okp is true. If reading fails,
say, from an EOF, then line is the empty string, and okp is false.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROMPT-FOR-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "prompt-for-uri => result
result---a list of two values.
prompt-for-uri returns the list of values that result from invoking
prompt-for-line with the message \"Enter a URI:\".")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-NAMESPACE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION
     "The string prefix of RDF terms: http://www.w3.org/1999/02/22-rdf-syntax-ns# ."
     :INITIAL-VALUE "\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-NAMESPACE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION
     "The string prefix of RDFS terms: http://www.w3.org/2000/01/rdf-schema#"
     :INITIAL-VALUE "\"http://www.w3.org/2000/01/rdf-schema#\"")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-PREFIXED-NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "PREFIX" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SUFFIX" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "define-prefixed-name name prefix suffix
name---a symbol, not evaluated
prefix, suffix---evaluated to produce strings
Define-prefixed-term defines name as a constant. The value of the
constant is an interned puri URI generated by concatenating the
strings designated by prefix and suffix.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-RDF-TERM" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SUFFIX" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "define-rdf-term name suffix
name---a symbol, not evaluated
suffix---evaluated to produce a string designator
define-rdf-term defines name as a constant. The value of the new
constant is a PURI uri constructed by concatenating
+rdf-namespace+ and the suffix.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-RDFS-TERM" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SUFFIX" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "define-rdfs-term name suffix
name---a symbol, not evaluated
suffix---evaluated to produce a string designator
define-rdfs-term defines name as a constant. The value of the new
constant is a PURI uri constructed by concatenating
+rdfs-namepsace+ and the string designated by suffix.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-RESOURCE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"Resource\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-LITERAL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"Literal\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-XML-LITERAL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"XMLLiteral\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-CLASS+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"Class\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-PROPERTY+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Property\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-DATATYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"Datatype\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-STATEMENT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Statement\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-BAG+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Bag\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-SEQ+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Seq\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-ALT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Alt\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-CONTAINER+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"Container\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-CONTAINER-MEMBERSHIP-PROPERTY+" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(PURI:INTERN-URI
 (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"ContainerMembershipProperty\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-LIST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"List\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-TYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"type\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-SUBCLASS-OF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"subClassOf\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-SUBPROPERTY-OF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"subPropertyOf\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-DOMAIN+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"domain\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-RANGE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"range\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-LABEL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"label\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-COMMENT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"comment\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-MEMBER+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"member\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-SEE-ALSO+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"seeAlso\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDFS-IS-DEFINED-BY+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDFS-NAMESPACE+ \"isDefinedBy\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-FIRST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"first\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-REST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"rest\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-VALUE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"value\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-SUBJECT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"subject\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-PREDICATE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"predicate\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-OBJECT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"object\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-RDF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"RDF\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-DESCRIPTION+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"Description\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"ID\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-ABOUT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"about\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-PARSE-TYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"parseType\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-RESOURCE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"resource\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-LI+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"li\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-NODE-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"nodeID\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-DATATYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"datatype\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-NIL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"nil\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-BAG-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"bagID\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-ABOUT-EACH+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(PURI:INTERN-URI (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"aboutEach\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+RDF-ABOUT-EACH-PREFIX+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(PURI:INTERN-URI
 (CL-RDFXML::STRCAT CL-RDFXML:+RDF-NAMESPACE+ \"aboutEachPrefix\"))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CORE-SYNTAX-TERM-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "core-syntax-term-p object => boolean
core-syntax-term-p returns true if object is in +core-syntax-terms+.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYNTAX-TERM-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "syntax-term-p object => boolean
syntax-term-p returns true if object is a syntax term (a core syntax
term, rdf:Description, or rdf:li).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OLD-TERM-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)) :DOCUMENTATION
     "old-term-p object => boolean
old-term-p returns true if object is in +old-terms+.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ELEMENT-URI-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       ((:NAME "INTERN-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))))
     :DOCUMENTATION "node-element-uri-p xuri => boolean
xuri---a URI designator
Node-element-uri-p determines whether the designated URI is a valid
node element URI. Node element URIs are all URIs except core syntax
terms, rdf:li, and old RDF terms.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPERTY-ELEMENT-URI-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       ((:NAME "INTERN-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))))
     :DOCUMENTATION "property-element-uri-p xuri => boolean
xuri---a URI designator
Property-element-uri-p determines whether the designated URI is a
valid property element URI. Property element URIs are all URIs except
core syntax terms, rdf:Description, and old RDF terms.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPERTY-ATTRIBUTE-URI-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       ((:NAME "INTERN-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))))
     :DOCUMENTATION "property-attribute-uri-p xuri => boolean
xuri---a URI designator
Property-attribute-uri-p determines whether the designated URI is a
valid property attribute URI. Property attribute URIs are all URIs
except core syntax terms, rdf:Description, rdf:li, and old RDF terms.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RDF-NAMESPACE-PREFIXED-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "rdf-namespace-prefixed xuri => boolean
xuri---a uri designator
Rdf-namespace-prefixed-p returns true if xuri is prefixed with
+rdf-namespace+.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMBERSHIP-PROPERTY-ELEMENT-P" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "membership-property-element-p xuri => boolean
xuri---a uri designator
Membership-property-element-p returns true if the designated URI is
either rdf:li or of the form rdf:_n where n standard for a sequence of
base-10 digits.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMBERSHIP-FRAGMENT-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "FRAGMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "membership-fragment fragment => boolean
fragment---a string or NIL
Membership-fragment-p returns true if fragment is of the form \"_n
where n is a decimal integer greater than zero with no leading
zeros.\" (RDF/XML Syntax Specification, Section 5.1)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RDF-NAME-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)) :DOCUMENTATION
     "rdf-name-p xuri => boolean
xuri---a URI designator
Rdf-name-p returns true if the designated URI is an RDF name,
including the infinite set of rdf:_n names.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERN-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XURI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)) :DOCUMENTATION
     "intern-uri xuri => uri
xuri---a uri designator
uri---a puri:uri
Intern URI is a wrapper around puri:intern-uri that provides a
use-value restart, so that a new uri designator can be provided.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-URIS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "BASE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "merge-uris uri base => interned-uri
uri, base---uri designators
interned-uri---a uri
merge-uris is a convenience function that merges uri and base and
interns the result.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-FRAGMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "BASE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "add-fragment id base => interned-uri
id---a uri fragment id
base---a uri designator
Add-fragment merges \"#<id>\" with base, and returns the result of
interning the merged URI.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "BLANK-NODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "The blank-node class represents blank nodes in a
graph. Blanks nodes are local to a graph, and can be identified within
a graph by their ID. The blank-node id is used for refering to the
same blank node in an RDF/XML document, and so in general, blank-nodes
ought to compared using object equality, i.e., eq."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS
       ((:NAME "BLANK-NODE-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The graph-local ID of the blank-node. This slot is
unbound if the blank node has no id. The id of a blank node is used to
identify the blank node within the scope of a particular graph. That
two blank-nodes happen to have the same ID is not an indication that
they represent the same blank node.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLANK-NODE-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "BLANK-NODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
     :DOCUMENTATION "blank-node-id blank-node => id
blank-node---a blank-node
id---a string
Blank-node-id returns the ID of the blank-node. Blank-node-ids are
intended to be used for readability purposes. Blank-nodes should be
compared directly using object equality. That two blank-nodes have ids
that are string= does not mean that they represent the same RDF
blank-node.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BNODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "BLANK-NODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "print-object bnode stream => bnode
bnode---a blank-node
stream---an output stream
Print-objects prints a representation of the blank node to stream. The
representation is not readable.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BLANK-NODES*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "An equal hash table that is used for `interning' blank node IDs
within the scope of a single graph. Initially nil, but should be bound
for each graph being processed."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BLANK-NODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "IDP" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
      ((:NAME "NAMESPACE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "*BLANK-NODES*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)))
     :DOCUMENTATION "blank-node [id [namespace]] => blank-node
id---a string
namespace---an equal hash-table
Blank-node returns a blank node. If id is specified, then if there is
already a blank node in namespace whose id is equal to id, then that
blank node is returned. Otherwise, a new blank node is created,
inserted into namespace, and returned. If id is not specified, then a
new blank node is returned, and namespace is not modified.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "The literal class is the superclass of both the
plain-literal and the typed literal. Every literal has some lexical
form, and the slot storing this form is defined in the literal class,
and may be read with literal-string."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS
       ((:NAME "LITERAL-STRING" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION "The lexical form of the literal.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LITERAL-STRING" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
     :DOCUMENTATION "literal-string literal => string
literal---a literal
string---a string
Literal-string returns the lexical form of the literal.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)) :DOCUMENTATION
     "The plain-literal class is the class comprising all
plain-literals. These literals have a lexical form, inherited from the
superclass literal, and an optional language tag. The language tag,
when provided, should be of the form specified by RFC 3066, and is
normalized to lowercase."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "LITERAL-LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The language tag associated with a plain literal.
If language is nil, the the plain-literal has no language type. If
language is non-nil, it should be a string that conforms to RDF 3066.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LITERAL-LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
     :DOCUMENTATION "literal-language plain-literal => result
plain-literal---a plain-literal
result---a string or nil
Literal-language return the language tag of the plain-literal, if
there is one, and nil if no language tag is associated with the
literal.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
       (:NAME "PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "print-object plain-literal stream => plain-literal
plain-literal---a plain-literal
stream---an output stream
Print-object prints the plain-literal in a form similar to the W3C RDF
Validation output. The literal string appears with double quotation
marks, and the language-tag, if provided is output with an asperand.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PLAIN-LITERALS*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "An equal hash-table used for interning plain literals, that is,
literals with a string component and an optional language tag."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST 'EQUAL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERN-PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "intern-plain-literal string [language] => plain-literal
string, language---strings
plain-literal---a plain literal
Intern-plain-literal returns a literal with the specified string and
language. Calls to intern-plain-literal with strings that are equal
and languages that are equal return the same literal object.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)) :DOCUMENTATION
     "The typed-literal class is the class comprising all
typed-literals. These literals have a lexical form, inherited from the
superclass literal, and a required datatype. The datatype is a
puri:uri."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DATATYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "LITERAL-DATATYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION
       "The datatype of a typed-literal, which is not
optional, is a URI designating the datatype.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LITERAL-DATATYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
     :DOCUMENTATION "literal-datatype typed-literal => datatype
typed-literal---a typed-literal
datatype---an interned PURI uri
Literal-datatype returns the datatype of a typed-literal. The datatype
URI is interned, and may be compared with eq.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
       (:NAME "TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "print-object typed-literal stream => typed-literal
typed-literal---a typed-literal
stream---an output stream
Print-object prints the typed-literal in a form similar to the W3C RDF
Validation output. The literal string appears with double quotation
marks, and the datatype URI is printed with a ^^ prefix.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TYPED-LITERALS*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "An equal hash-table used for interning typed literals, that is,
literals with a string component and a datatype."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST 'EQUAL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERN-TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATATYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "intern-plain-literal string datatype => typed-literal
string---a string
datatype---a URI designator
typed-literal---a typed literal
intern-typed-literal returns a literal with the specified string and
datatype. Calls to intern-plain-literal with strings that are equal
and designators for the same URI return the same literal object.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+XML-NAMESPACE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION "The string form of the URI XML namespace." :INITIAL-VALUE
     "\"http://www.w3.org/XML/1998/namespace\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ID-NAME-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "id-name-p string => boolean
string---a string
Id-name-p returns true if string is a valid XML NCName, which are the
only valid names attribute values for rdf:ID and rdf:nodeID.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-WHITESPACE-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "xml-whitespace-p string => boolean
string---a string-designator
xml-whitespace-p returns true if every element of the string is an XML
whitespace character (i.e., is #x20, #x9, #xD, or #xA), or if string is
the empty string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PEEK-SKIPPING-COMMENTS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "peek-skipping-comments source => result*
souce---a cxml:source
Peek-skipping-comments returns the same values that klacks:peek
returns, with the exception that if the next event from source is
:comments, the event is consumed. The values of the first non-comment
event are returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSUME-WHITESPACE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "consume-whitespace source => |
source---a cxml source
Consume-whitespace peeks and consumes events from source while the
events are of type :characters and the associated string satisfies
xml-whitespace-p, or if the event is :comment.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENT-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "element-uri source => uri
source---a cxml:source
uri---a URI
Element-uri returns the result of interning the concatenation of the
current element's uri and lname. Element-uri calls klacks:current-uri
and klacks:current-lname, which signal an error if the current event is
not :start-element or :end-element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREFIXP" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PREFIX" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "prefixp prefix sequence => boolean, properp
prefix, string---sequences
properp---a boolean
prefixp returns true if prefix is a prefix of sequence. Elements of
prefix and sequence are compared using test. A second value, properp,
is true when the length of the prefix is less than the length of the
sequence, regardless of whether prefix is actually a prefix of
sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-LANG-ATTRIBUTE-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "xml-lang-attribute-p attribute => boolean
attribute---a sax:attribute
xml-lang-attribute-p returns true if attribute has a local-name
\"name\" and a namespace-uri +xml-namespace+.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-ATTRIBUTE-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "xml-attribute-p attribute => boolean
attribute---a sax:attribute
Xml-attribute-p returns true if attribute has a prefix that begins
with \"xml\", or if the attribute has no prefix and the attribute's
local name begins with \"xml\". or if attribute satisfies
xml-lang-attribute-p.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTRIBUTE-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "attribute-uri attribute source => uri
attribute---a sax:attribute
source---a cxml:source
uri---a PURI uri
Attribute-uri returns the URi associated with the attribute, as
described by Section 6.1.4 Attribute Event in the RDF/XML Syntax
specification. In general this is the concatenation of the namespace
URI with the local name. If no namespace is provided, and the local
name is ID, about, resource, parseType, or type, then the
corresponding RDF term URI is returned. Otherwise, an error is
signalled. ")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ELEMENT-IDS*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "During parsing, an 'equal hash table that functions as a set of the
IDs that have been processed. Duplicate IDs in an RDF/XML document are
prohibited, i.e., it is an error for two elements to have the same
value on an rdf:ID attribute."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIQUE-ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "unique-attributes attributes source => uniques
attributes, uniques---associaation lists
source---a cxml:source
Unique-attributes returns an association list that no entries with the
same key. The entries of the new association list are those of the
original association list, but in the event that a duplicate is
detected, an error of type duplicate-attribute is signalled, and
various options are provided.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-NON-REPEATED-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "ensure-non-repeated-id attributes => new-attributes
attributes, new-attributes---association lists
Ensure-non-repeated-id ensures that if the association list attributes
contains a value for the key rdf:ID, that *element-ids* does not
currently map value to t, that is, that the element has not appeared
on another element. If there is an rdf:ID value and it has already
been specified on another element, restarts include using this value
anyway, ignoring the rdf:ID attribute, and using a different value. In
any of the cases that an ID is eventually specified, *element-ids* is
updated to include the new ID.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENT-ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "element-attributes source => attributes
source---a cxml:source
attributes---an alist
Element-attributes returns an association list whose keys are the
attribute URIs of the attributes of the current element and whose
values are the corresponding values. The attributes used in RDF/XML
are the atributes of the element, except that xml attributes are
removed (those satisfying xml-attribute-p) according to Section 6.1.2
\"Element Event\" in the RDF/XML Syntax Specification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LANGUAGE-TAG-P" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "language-tag-p string => boolean
string---a string
language-tag-p return true if the designated string is in the form
specified by RFC-3066. the general form of such a language tag is
<ALPHA>{1,8} ['-' [<ALPHA> | <DIGIT>]{1,8}]*, that is, a string of at
least 1 and at most 8 alphabetic characters followed by any number of
subtags that are a hypen followed by at least 1 and at most 8
alphabetic or digit characters. RFC-3066 also specifies what
particular strings may appear based on country codes, etc., but these
constraints are not enforced here.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-XML-LANG*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "The most recent xml:lang attribute that was specified in the
RDF/XML text. The initial value is nil, and *current-xml-lang* is
always rebound to nil when document parsing begins."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IMMEDIATE-XML-LANG" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "immediate-xml-lang source => result
source---a cxml:source
result---a string or nil
Immediate-xml-lang returns the value of the xml:lang attribute on the
source. Source's current event should be :start-element. If the
attribute is specified, its value, a string, is returned. If the
attribute is not specified, nil is returned.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-XML-LANG" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LANG" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "with-xml-lang lang form*
With-xml-lang evalutes lang to generate a new language, and evalutes
body with a new binding of *current-xml-lang*. If the result of
evalating lang is null, then *current-xml-lang* is rebound to its
current value, if it is \"\", then *current-xml-lang* is bound to nil,
otherwise, *current-xml-lang* is bound to the new language.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LI-COUNTER*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION
     "A list of li-counters. With each expecting-element', a new counter
is pushed onto *li-counter*, and so incrementing the counter of an
element's parent is done by (incf (cadr *li-counter*))."
     :INITIAL-VALUE "'NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPANDED-LI-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "expanded-li-uri => uri
uri---a puri:uri
Expanded-li-uri returns the uri generated by incrementing the current
element's parent's li counter and adding the fragment _n (where n is
the incremented counter) to the RDF namespace.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-FOR-ILLEGAL-NAMESPACE-NAMES" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "check-for-illegal-namespace-names attributes => |
attributes---a list of attributes
check-for-illegal-namespace-names enforces the restriction of Section
5.1 of the RDF/XML Syntax Specification that states that \"within
RDF/XML documents it is not permitted to use XML namespaces whose
namespace name is the RDF namespace URI reference concatenated with
additional characters.\" If such a namespace binding is encountered,
an error of type illegal-namespace-name is signalled.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "EXPECTING-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "LNAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LNAMEP" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
       ((:NAME "URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "URIP" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "expecting-element (source [lname [uri]]) form*
expecting-element is a wrapper around klacks:expecting element that
ensures proper binding of the *current-xml-lang* variable, so that
plain literals can properly inherit the value of xml:lang attributes.
Within this RDF/XML parser, expecting-element should always be used
rather than klacks:expecting-element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-POSITION" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "current-position source => position
source---a cxml:source
position---a string
Current-position returns a string of the form <line>.<column>
indicating the approximate position of source.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WARN-ON-RDF-PREFIXED-NON-RDF-NAMES*" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP T)
     :DOCUMENTATION
     "According to to Section 5.1, The RDF Namespace and Vocabulary of
the RDF/XML Syntax Specification, warnings SHOULD be generated when a
name is encountered that begins with the RDF namespace name, but is
not an RDF name. If *warn-on-rdf-prefixed-non-rdf-names* is true (the
default), then such warnings are generated, but are muffled otherwise."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WARN-ON-NON-NAMESPACED-NAMES*" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP T)
     :DOCUMENTATION
     "A boolean (whose default value is true) that controls whether a
warning is signalled when a permitted non-namespaced attribute is
encountered. The only attributes which may appear without namespaces
are ID, about, resource, parseType, and type. New documents should not
use unqualified forms, though they may appear in legacy documents. See
Section 6.1.4 of the RDF/XML Syntax Specification."
     :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WARN-ON-PARSE-TYPE-OTHER*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
      T)
     :DOCUMENTATION
     "A boolean (whose default value is false) that controls whether a
warning is signalled when an element is encountered that specifies the
rdf:parseType attribute with a value other than \"Literal\",
\"Resource\", or \"Collection\". Such an element is treated as though
the value were \"Literal\", and this situation is not an error.
Nonetheless, it seems likely that one might be interested in knowing
when it occurs."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COERCE-DATATYPED-EMPTY-PROPERTIES*" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP T)
     :DOCUMENTATION
     "A boolean (whose default value is false) that controls whether an
empty property element that contains a datatype attribute (a case
which is prohibited by the RDF/XML Syntax Specification) is coerced to
a typed literal with the specified datatype and the empty string \"\"
as a lexical form. Also see the condition type
datatyped-empty-property and the keyword argument
coerce-datatyped-empty-properties to the function parse-document."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE-LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "ignore-language [condition] => |
condition---a condition
Ignore-language treats a xml:lang attribute whose value was not a
language tag conforming to RFC 3066 as though the attribute had not
been specified. This occurs by invoking the restart ignore-language.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE-ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "ignore-attribute [condition] => |
condition---a condition
Ignore-attribute attempts to invoke the restart named
ignore-attribute. This is intended for use when an attribute appears
in a place where it is prohibited, but parsing would continue
successfully if the attribute had not been specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE-ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "ignore-attributes [condition] => |
condition---a condition
Ignore-attributes attempts to invoke the restart named
ignore-attributes. This is intended for use when duplicate attributes
are provided and all can be ignored, or when mutually exclusive
attributes appear, and all can be ignored.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE-CHARACTERS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "ignore-characters [condition] => |
condition---a condition
Ignore-characters attempts to invoke the restart named
ignore-characters. This is intended for use when character data
appears in a place that should have been whitespace.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-AS-TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "parsed-as-typed-literal [condition] => |
condition---a condition
parse-as-typed-literal attempts to parse an empty-property-element as
typed literal. This is intended to be used when an rdf:datatype
attribute is present on an empty property element. Strictly speaking,
this is prohibited by the RDF/XML specification (see errata), but some
RDF/XML parses output it anyway.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-URI-NON-STRICTLY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "parse-uri-non-strictly condition => result*
condition---a condition
Parse-uri-non-strictly is a restart function that invokes the restart
named parse-uri-non-strictly. If no such restart is available,
parse-uri-non-strictly returns NIL, otherwise the results of invoking
the restart are returned.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PARSE-URIS-STRICTLY*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :DOCUMENTATION
     "A boolean (whose default value is true) that controls whether URIs
are parsed strictly. This determines whether, within parse-document, a
handler is established for conditions of type puri:uri-parse-error
which will attempt to parse malformed URIs in a non-strict way. Also
see the restart function parse-uri-non-strictly, and the
parse-uris-strictly keyword argument to parse-document."
     :INITIAL-VALUE "T")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-ALIST-RESTARTS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "THING" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "ALIST" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
      (:NAME "RESTARTABLE-FORM" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "with-alist-restarts (thing alist) form &body body
thing---a symbol
alist---an association list
restartable-form---a form
body---forms
With-alist-restarts evaluates restartable form within a dynamic
context in which a restart is established for each entry in alist. If
the restart corresponding to an entry is invoked, then thing is bound
to the entry's cons cell, and body is evaluated, and the result of
body is the result of the form. If restartable-form does not signal an
error, then the result is the result of restartable form.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SUBJECT*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION "The subject of the triples being processed."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PREDICATE*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION "The predicate of the triples being processed."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OBJECT*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL) :DOCUMENTATION
     "The predicate of the triples being processed." :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRIPLE-RECEIVER*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :DOCUMENTATION "A function that receives the triples." :INITIAL-VALUE
     "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMIT-TRIPLE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SUBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "*SUBJECT*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
      ((:NAME "PREDICATE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "*PREDICATE*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
      ((:NAME "OBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "*OBJECT*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)))
     :DOCUMENTATION "emit-triple &key subject predicate object => value*
subject, predicate, object---objects
Emit-triple calls the value of *triple-receiver* with the three values
subject, predicate, and object. subject, predicate, and object, if not
provided, default, respecively, to *subject*, *predicate*, and
*object*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REIFY-TRIPLE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TRIPLE-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "reify-triple triple-uri => |
triple-uri---a PURI URI
Reify-triple emits the four triples that reify the triple <*subject*
*predicate* *object*>. Triple-uri is the URI of the reified triple.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-DOCUMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INPUT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "COERCE-DATATYPED-EMPTY-PROPERTIES" :PACKAGE-NAME "KEYWORD"
         :EXTERNALP T)
        (:NAME "*COERCE-DATATYPED-EMPTY-PROPERTIES*" :PACKAGE-NAME "CL-RDFXML"
         :EXTERNALP T))
       (:NAME "*COERCE-DATATYPED-EMPTY-PROPERTIES*" :PACKAGE-NAME "CL-RDFXML"
        :EXTERNALP T))
      (((:NAME "PARSE-URIS-STRICTLY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "*PARSE-URIS-STRICTLY*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
       (:NAME "*PARSE-URIS-STRICTLY*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T))
      (((:NAME "WARN-ON-RDF-PREFIXED-NON-RDF-NAMES" :PACKAGE-NAME "KEYWORD"
         :EXTERNALP T)
        (:NAME "*WARN-ON-RDF-PREFIXED-NON-RDF-NAMES*" :PACKAGE-NAME "CL-RDFXML"
         :EXTERNALP T))
       (:NAME "*WARN-ON-RDF-PREFIXED-NON-RDF-NAMES*" :PACKAGE-NAME "CL-RDFXML"
        :EXTERNALP T))
      (((:NAME "WARN-ON-NON-NAMESPACED-NAMES" :PACKAGE-NAME "KEYWORD"
         :EXTERNALP T)
        (:NAME "*WARN-ON-NON-NAMESPACED-NAMES*" :PACKAGE-NAME "CL-RDFXML"
         :EXTERNALP T))
       (:NAME "*WARN-ON-NON-NAMESPACED-NAMES*" :PACKAGE-NAME "CL-RDFXML"
        :EXTERNALP T))
      (((:NAME "WARN-ON-PARSE-TYPE-OTHER" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "*WARN-ON-PARSE-TYPE-OTHER*" :PACKAGE-NAME "CL-RDFXML"
         :EXTERNALP T))
       (:NAME "*WARN-ON-PARSE-TYPE-OTHER*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
        T)))
     :DOCUMENTATION "parse-document function input => |
function---a function of three arguments
input---an input suitable for cxml:make-source
Parse-document parses input, binds *triple-receiver* to function, and
calls emit-triple with each triple that can be extracted from the
input. *blank-nodes* is rebound to a new equal hash table and maps
blank node identifiers to their blanks nodes. If the document element
is rdf:RDF, then its children are processed as node elements,
otherwise, the body of the document is parsed as a sequence of node
elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ELEMENT-LIST" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COLLECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "node-element-list source &key collect => [nodes]
source---a cxml-source
Node-element-list processes a node element list, corresponding to
production 7.2.10, ws* (nodeElement ws*)*. If collect is non-nil, then
the nodes are collected and returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ELEMENT-COMPONENTS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "node-element-components source => property-attributes, this
source---a cxml:source
property-attributes---an alist
this---a blank node or a URI
Node-element-components returns an alist of the property-attributes on
the element at which source should be positioned, and a blank node or
URI indicating the object that this node element represents. At most
one of rdf:ID, rdf:nodeID, and rdf:about should be specified, and an
error is signalled if more than one is specified. An error is also
signalled if any the URI of any attribute is not a valid
property-attribute URI.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ELEMENT-SUBJECT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "THIS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "node-element-subject this base => result
this---a cons, or nil
source---a cxml:source
Node-element-subject returns the object designated by this (the second
return value of node-element-attributes) and base. If this is null,
then a blank-node is returned. Otherwise, the car of this should be
either +rdf-node-id+, +rdf-about+, or +rdf-id+, and result is
determined as follows: If the uri is +rdf-node-id+, then a blank node
with an id is returned, where the id is the cdr of this. If the uri is
+rdf-about+, then the cdr of the this is mergedd with base. If uri is
+rdf-id+, then the cdr of this is added as a fragment to base.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "node-element source => node
source---a cxml source
Node-element processes the source's current node. Source should be at
a :start-element, and the element should correspond to a node. Triples
represented in the node will be emitted. The node is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPERTY-ELEMENT-LIST" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "property-element-list source => |
source---a cxml source
Property-element-list processes a property element list, corresponding
to production 7.2.13, ws* (propertyElt ws*)*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "property-element source => |
source---a cxml source
Property-element processes the current property element, according to
production 7.2.14. There are actually a number of different kinds of
property elements that can appear, and so process-property element
processes enough of the element to determine which type, and then
dispatches to more specific property element processing functions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-TYPE-PROPERTY-ELEMENT-ID" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "parse-type-property-element-id source => id
source---a cxml:source
id---a URI or nil
Elements that specify the rdf:parseType attribute may only have one
other attribute, rdf:ID. This function extracts the value of the
rdf:ID attribute if specified and returns a URI which is the base uri
with the value of the ID attribute as a fragment id or nil if there is
no such attribute. An error is signalled if rdf:ID is specified more
than once, or if an attribute other than rdf:parseType or rdf:ID is
specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENT-LITERAL-CONTENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONSUME-END" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "element-literal-content source &key consume-end => content
source---a cxml:source
content---a string
consume-end---a boolean
Element-literal-content returns a string that is the literal content
of the of element at source. The current event of source should be
:start-element of the element whose literal content is to be
extracted. The corresponding :end-element is consumed if consume-end
is non-nil (the default).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-TYPE-LITERAL-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "parse-type-literal-property-element source => |
source---a cxml source
Parse-type-literal-property-element binds *object* to a typed literal
whose type is rdf:XMLLiteral, and whose content is the text content of
the current element. If the current element has an rdf:ID attribute,
then the triple is reified with the ID.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-TYPE-RESOURCE-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "parse-type-resource-property-element source => |
source---a cxml source
parse-type-resource-property-element processes a property element with
parseType Resource, according to production 7.2.18.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-TYPE-COLLECTION-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "parse-type-collection-property-element source => |
source---a cxml source
parse-type-collection-property-element processes the content of a
property element that has parseType=\"Collection\".  Triples are
emitted that describe the sequence of nodes within the property
element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NON-PARSE-TYPE-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "non-parse-type-property-element source => |
source---a cxml:source
If a property element does not specify the rdf:parseType attribute,
then the property-element is parsed with either
resource-property-element, literal-property-element, or
empty-property-element. Resource-property-element matches in the case
that there is a single element within the property-element,
literal-property-element matches when there is only text content
within the property-element, and empty-property-element matches when
there is no content whatsoever within the property-element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOURCE-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "resource-property-element source attributes => |
source---a cxml:source
attributes---an alist
resource-property-element finished the processing of a resource
property element that should have begun with
non-parse-type-property-element. source should be positioned at the
:start-element of the node element within the property-element.
resource-property-element does not consume trailing whitespace after
the node element. The only attribute permitted on the resource
property-element is rdf:ID, and an error is signalled if other
attributes are specified, or rdf:ID is specified more than once.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LITERAL-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "TEXT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "literal-property-element source attributes text => |
source---a cxml:source
attributes---an alist
text---a string
Literal-property-element emits the triple corresponding to the literal
property element. Text is the literal text of the literal property.
Attributes is the alist of attributes of the property-element that
originally contained text.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMPTY-PROPERTY-ELEMENT-COMPONENTS" :PACKAGE-NAME "CL-RDFXML"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION
     "empty-property-element-components source attributes => pattributes, id, thing
source---a cxml:source
attributes, pattributes---association lists
id---a PURI uri or nil
thing---a indicator of the empty property element
Empty-property-element-components returns as multiple values the
property attributes of the element (as an association list), an id
corresponding to the element (which is NIL if no ID was provided), and
an indicator of the element, which is either a plain literal with the
empty string as its lexical component, a blank node, or a URI.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMPTY-PROPERTY-ELEMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP NIL))
     :DOCUMENTATION "empty-property-element source attributes => |
source---a cxml:source
attributes---an alist
Processes an empty property element, emitting the appropriate triples
for property attributes on the element, as well as the triple of which
the empty property is the object. The triple of which the empty
property element is the object is also reified when the ID attribute
is present."))
   :EXTERNAL-SYMBOLS
   ((:NAME "+RDFS-CONTAINER+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-FIRST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "BLANK-NODE-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-SUBCLASS-OF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-LABEL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "NON-NAMESPACED-ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-RDF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "NON-NC-NAME-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-NAMESPACE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-LI+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-MEMBER+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "USE-OLD-VALUE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-ABOUT-EACH+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "BAD-NODE-ELEMENT-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-SUBPROPERTY-OF+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-PREDICATE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "NON-NAMESPACED-NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-DESCRIPTION+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-VALUE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "LITERAL-LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-REST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "RDFXML-WARNING" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-DATATYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-ALT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "IGNORE-ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-RESOURCE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-NIL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "INTERN-PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-PARSE-TYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "RDFXML-ERROR" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-PROPERTY+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "MUTUALLY-EXCLUSIVE-ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP
     T)
    (:NAME "+RDFS-CONTAINER-MEMBERSHIP-PROPERTY+" :PACKAGE-NAME "CL-RDFXML"
     :EXTERNALP T)
    (:NAME "BLANK-NODE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "LITERAL-DATATYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-DOMAIN+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "RDF-PREFIXED-NON-RDF-NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-STATEMENT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "INVALID-LANGUAGE-TAG" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "BAD-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-RANGE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "IGNORE-ATTRIBUTES" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-OBJECT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "INVALID-ATTRIBUTE-VALUE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "PARSE-AS-TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "*WARN-ON-RDF-PREFIXED-NON-RDF-NAMES*" :PACKAGE-NAME "CL-RDFXML"
     :EXTERNALP T)
    (:NAME "+RDF-ABOUT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "PARSE-DOCUMENT" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "DUPLICATE-ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-LITERAL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "IGNORE-CHARACTERS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-COMMENT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "PROHIBITED-ATTRIBUTE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "*WARN-ON-NON-NAMESPACED-NAMES*" :PACKAGE-NAME "CL-RDFXML"
     :EXTERNALP T)
    (:NAME "+RDF-BAG+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-LIST+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "INTERN-TYPED-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-NODE-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-SEE-ALSO+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-CLASS+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "BAD-PROPERTY-ELEMENT-URI" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "OTHER-PARSE-TYPE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-ABOUT-EACH-PREFIX+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "LITERAL-STRING" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "REPEATED-ID" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "CHOOSE-IDENTIFIER" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-SUBJECT+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "*WARN-ON-PARSE-TYPE-OTHER*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-DATATYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "ILLEGAL-NAMESPACE-NAME" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-TYPE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "*COERCE-DATATYPED-EMPTY-PROPERTIES*" :PACKAGE-NAME "CL-RDFXML"
     :EXTERNALP T)
    (:NAME "PLAIN-LITERAL" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "DATATYPED-EMPTY-PROPERTY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "USE-NEW-VALUE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "PARSE-URI-NON-STRICTLY" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-SEQ+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "*PARSE-URIS-STRICTLY*" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "UNEXPECTED-CHARACTERS" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-NAMESPACE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-BAG-ID+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDFS-IS-DEFINED-BY+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-RESOURCE+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "+RDF-XML-LITERAL+" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)
    (:NAME "IGNORE-LANGUAGE" :PACKAGE-NAME "CL-RDFXML" :EXTERNALP T)))))
