
(:TYPE :SYSTEM :NAME "weblocks-stores" :AUTHOR "Olexiy Zamkoviy" :MAINTAINER
 "Olexiy Zamkoviy, Scott L. Burson" :VERSION "0.0.3" :LICENCE "LLGPL"
 :DESCRIPTION "A base for weblocks stores" :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("CLOSER-MOP" "METATILITIES" "WEBLOCKS-UTIL") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "WEBLOCKS-STORES" :FULL-NAME "WEBLOCKS-STORES"
   :DOCUMENTATION "Base for weblocks store drivers" :SYMBOL-LIST
   ((:TYPE :GENERIC :SYMBOL
     (:NAME "OPEN-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE-TYPE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Opens a connection to a store specified by
  'store-type'. This function must return the instance of the
  connection to the store. Methods can accept any number of custom
  keyword parameters. Additionally, the function must set
  *default-store* to the value of newly created store.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSE-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Closes a connection to the store. If the value of
  *default-store* is equal to 'store', *default-store* must be set to
  NIL.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLEAN-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Cleans all the data in the store. This function
  should erase data, but not necessarily any schema information (like
  tables, etc.)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-STORE*" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :DOCUMENTATION
     "The default store to which objects are persisted.  Bound while a
  webapp is handling a request to the value of its
  `webapp-default-store-name'.  By using `defstore' after the relevant
  `defwebapp' in the same package, barring an explicit setting, the
  webapp will be set to use the defined store automatically."
     :INITIAL-VALUE "NIL")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Begins a transaction on 'store'. Note, if the given
  store does not have transaction support, this function should return
  NIL without signalling errors.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COMMIT-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Commits a transaction started on 'store'. Note, if
  the given store does not have transaction support, or the store
  isn't in a transaction, this function should return NIL without
  signalling errors.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ROLLBACK-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Rolls back a transaction started on 'store'. Note,
  if the given store does not have transaction support, or the store
  isn't in a transaction, this function should return NIL without
  signalling errors.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DYNAMIC-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "PROC" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Call PROC, a thunk, while in a transaction of
  STORE.  See `use-dynamic-transaction-p' for details.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DYNAMIC-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "PROC" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DYNAMIC-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "PROC" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "USE-DYNAMIC-TRANSACTION-P" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Answer whether `action-txn-hook' and equivalents
  should use GF `dynamic-transaction' for transaction control rather
  than the `begin-transaction', `commit-transaction', and
  `rollback-transaction' GFs.  Be warned that non-local exit behavior
  for stores that answer true for this may have unique non-local exit
  unwind behavior.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "USE-DYNAMIC-TRANSACTION-P" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "USE-DYNAMIC-TRANSACTION-P" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PERSIST-OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Persists 'object' into 'store', answering
  'object'. If the object does not have a unique ID (see 'object-id'),
  persist 'object' into store and set its unique ID via (see '(setf
  object-id)'). If the object has a unique ID, find relevant entry in
  the store and update it with 'object'.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DELETE-PERSISTENT-OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Deletes the persistent object from 'store'. After
  deleting the persistent object, set unique ID of 'object' to
  NIL (see '(setf object-id)').")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DELETE-PERSISTENT-OBJECT-BY-ID" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T))
     :DOCUMENTATION "Similar to 'delete-persistent-object', but instead
  deletes object with the specified 'object-id'.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FIND-PERSISTENT-OBJECT-BY-ID" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T))
     :DOCUMENTATION "Finds and returns a persistent object of a given
  class name in a given store by its unique id. If the object isn't
  found, returns NIL.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FIND-PERSISTENT-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ORDER-BY" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "RANGE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Looks up and returns objects of appropriate
  'class-name' in the 'store' bound by the given keyword
  parameters.

  If 'order-by' is specified, orders the returned objects by the given
  slot in the given order. If 'order-by' is not NIL, it is expected to
  be a cons cell with slot name as 'car' and :asc or :desc as
  'cdr'.

  If 'range' is specified, returns only the specified range of
  objects. The CAR of 'range' is the index of the initial
  object (inclusive) and CDR is the index past the last object. Note,
  the range should be applied after the objects have been filtered and
  ordered if necessary.

  Other implementation dependent keys may be defined by a given
  store.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COUNT-PERSISTENT-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns the number of persistent objects stored in
  'store' of 'class-name', bound by the given keyword parameters. For
  documentation of keyword parameters, see
  'find-persistent-objects'.

  Other implementation dependent keys may be defined by a given
  store.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REPLACE-ON-REDEFINE-P" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "STORE-TYPE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "When true replaces existing store on reexecuting (defstore ...) block.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPLACE-ON-REDEFINE-P" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "STORE-TYPE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REPLACE-ON-REDEFINE-P" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "STORE-TYPE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-ID-SLOT-NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Must return the symbol that identifies the slot name which
represents the unique ID of the class named 'class'. Default
implementation returns 'ID'. Specialize this function if you want to
name the slot that holds the class' unique ID differently.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-ID-SLOT-NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OBJECT-ID-SLOT-NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the slot name of the slot that holds the unique identifier
of 'obj'. This information is obtained via calling
'class-id-slot-name'.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a value that uniquely identifies an object in memory or in
a backend store. The default implementation looks for an 'id' slot via
'slot-value'. If such slot is not present, signals an
error. Specialize this function for various back end stores and other
object identification schemes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
       (:NAME "STANDARD-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
       (:NAME "STANDARD-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
      (:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sets the value that uniquely identifies an object in memory or in
a backend store. The default implementation tries to set an 'id' slot
via 'slot-value'. If such slot is not present, signals an
error. Specialize this function for various back end stores and other
object identification schemes.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
      ((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
       (:NAME "STANDARD-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLASS-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns the store where objects of class name
should be persisted. This function should be used by widgets to
persist objects. Default implementation returns *default-store*.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLASS-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLASS-NAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OBJECT-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the store for the object by calling 'class-store'.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "STORE-INFO" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Information about a store." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STORE-INFO" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "TYPE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM94" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "ARGS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM95" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STORES*" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
     :DOCUMENTATION
     "A hashmap of stores, where each item has store name as key, and
structure of type 'store-info' as value."
     :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STORE-NAMES*" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :DOCUMENTATION
     "A list of store names in the order in which they were defined."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DEFSTORE-PREDEFINE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Helper for `defstore'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DEFSTORE-POSTDEFINE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Helper for `defstore'.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFSTORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STORE-ARGS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "A macro that helps define a store. A global variable 'name' is
defined, and 'open-store' is called with appropriate store type and
arguments. Note that the last store will also be the default (see
*default-store*). All stores defined via 'defstore' will be opened and
bound when 'start-weblocks' is called, and closed when 'stop-weblocks'
is called. If `store-args' contains a keyword 'load-store-system-p'
with a value of NIL following it then the store's ASDF system
(`weblocks-STORENAME') will not be loaded afterwards. Turning this off
is useful for binary images.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-REPLACE-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION "Replaces store on (defstore ...) call repeating. 
   Works only for those stores for which (replace-on-redefine-p ...) is true")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN-STORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Opens and binds all stores.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE-STORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Closes all stores.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPSTORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "FN" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Maps a function over existing stores in the order in which they
were defined. Returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERSIST-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP NIL))
     :DOCUMENTATION
     "Persists all objects in 'objects' sequence into 'store'."))
   :EXTERNAL-SYMBOLS
   ((:NAME "COMMIT-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "REPLACE-ON-REDEFINE-P" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
     T)
    (:NAME "OBJECT-ID-SLOT-NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "CLASS-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "PERSIST-OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "ROLLBACK-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "USE-DYNAMIC-TRANSACTION-P" :PACKAGE-NAME "WEBLOCKS-STORES"
     :EXTERNALP T)
    (:NAME "*DEFAULT-STORE*" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "OPEN-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "PERSIST-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "MAPSTORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "OBJECT-ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "DEFSTORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "FIND-PERSISTENT-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP
     T)
    (:NAME "CLEAN-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "DYNAMIC-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "CLOSE-STORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "*STORE-NAMES*" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "CLOSE-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "FIND-PERSISTENT-OBJECT-BY-ID" :PACKAGE-NAME "WEBLOCKS-STORES"
     :EXTERNALP T)
    (:NAME "OPEN-STORES" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "COUNT-PERSISTENT-OBJECTS" :PACKAGE-NAME "WEBLOCKS-STORES"
     :EXTERNALP T)
    (:NAME "ID" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "CLASS-ID-SLOT-NAME" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "OBJECT-STORE" :PACKAGE-NAME "WEBLOCKS-STORES" :EXTERNALP T)
    (:NAME "DELETE-PERSISTENT-OBJECT-BY-ID" :PACKAGE-NAME "WEBLOCKS-STORES"
     :EXTERNALP T)
    (:NAME "DELETE-PERSISTENT-OBJECT" :PACKAGE-NAME "WEBLOCKS-STORES"
     :EXTERNALP T)))))
