
(:TYPE :SYSTEM :NAME "generators" :AUTHOR "<programmers@acceleration.net>"
 :MAINTAINER NIL :VERSION "0.1" :LICENCE "BSD" :DESCRIPTION
 "A common lisp package providing python style generators based
                on delimited continuations"
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("CL-CONT" "ALEXANDRIA" "ITERATE")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "GENERATORS" :FULL-NAME "GENERATORS" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "%STOP-ITERATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A class that stores all the needed structure for a generator" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTINUATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CONTINUATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The current continuation of the generator")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "USE-FINAL-VALUE?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "USE-FINAL-VALUE?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Should this generator, generate a sigil value when complete
     if nil will raise the final-exception (defaults 'stop-iteration)")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FINAL-VALUE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FINAL-VALUE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The value to generate if we are using a final-value
    instead of raising exceptions")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FINAL-EXCEPTION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FINAL-EXCEPTION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "An exception to raise when we are done iterating (if not using final-value)")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FINISHED?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "FINISHED?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION
       "Has this generator generated all values?")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORIGINAL-CONTINUATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "ORIGINAL-CONTINUATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The starting point of this generator")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "NAME" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NEXT" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the next value of this generator")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEXT" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESET" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))
     :DOCUMENTATION "Restarts the generator from its original continuation")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESET" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESET" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CLAUSE-FOR-IN-GENERATOR-4" :PACKAGE-NAME "GENERATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "NODE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "IN-GENERATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "GENERATE" :PACKAGE-NAME "ITERATE" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))
     :DOCUMENTATION "Forces the generator to produce a list of its output")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "G" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "GENERATORS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "G" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
       (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MV-GEN" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "G" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)) :DOCUMENTATION
     "Generates a value from the generator, if the generator throws
   stop iteration returns (values nil T),
   turns off call/cc so that this works")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ONLY-ONE?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAKE-GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "FINAL-VALUE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FINAL-VALUE-P" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       ((:NAME "FINAL-EXCEPTION" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          (:NAME "STOP-ITERATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP T))))
       (:NAME "NAME" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "returns a function that when called yields the next values.  Inside of
   body, you can yield any number of values that you wish by calling
   (yield &rest args) which is scoped to the body
  ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-LISP-TREE-NODES" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TREES" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEAVES-ONLY?" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Do a depth first traversal of some set of trees yielding every node ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CLAUSE-FOR-A-NODE-OF-LISP-TREE-5" :PACKAGE-NAME "GENERATORS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "NODE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "A-NODE-OF-LISP-TREE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "TREE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "GENERATE" :PACKAGE-NAME "ITERATE" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CLAUSE-FOR-A-LEAF-OF-LISP-TREE-6" :PACKAGE-NAME "GENERATORS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "FOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "NODE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "A-LEAF-OF-LISP-TREE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "TREE" :PACKAGE-NAME "GENERATORS" :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "GENERATE" :PACKAGE-NAME "ITERATE" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "YIELD" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "FORCE" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "MAKE-GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "RESET" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "GENERATOR" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "GENERATE-LISP-TREE-LEAVES" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "GENERATE-LISP-TREE-NODES" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "STOP-ITERATION" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "YIELDING" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)
    (:NAME "NEXT" :PACKAGE-NAME "GENERATORS" :EXTERNALP T)))))
