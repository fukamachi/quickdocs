
(:TYPE :SYSTEM :NAME "rfc2109" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.4"
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("SPLIT-SEQUENCE") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "RFC2109" :FULL-NAME "RFC2109" :DOCUMENTATION
   "This package implements RFC2109 - the original cookie specification.
Use it to generate (and eventually parse) cookies in an RFC-compliant way."
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*HT*" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "(CODE-CHAR 9)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CR*" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "(CODE-CHAR 13)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LF*" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "(CODE-CHAR 10)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOMAIN-MATCH-P" :PACKAGE-NAME "RFC2109" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "HOST-A" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "HOST-B" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks to see if host-a \"domain-matches\" host-b, per RFC2109
From the RFC:
    Hosts names can be specified either as an IP address or a FQHN
    string.  Sometimes we compare one host name with another.  Host A's
    name domain-matches host B's if

    * both host names are IP addresses and their host name strings match
      exactly; or

    * both host names are FQDN strings and their host name strings match
      exactly; or

    * A is a FQDN string and has the form NB, where N is a non-empty name
      string, B has the form .B', and B' is a FQDN string.  (So, x.y.com
      domain-matches .y.com but not y.com.)

    Note that domain-match is not a commutative operation: a.b.c.com
    domain-matches .c.com, but not the reverse.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTR?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     "Determine if element is an attr")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALUE?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     "Determine if element is a value")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WORD?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     "Determine if element is a word")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALID-NAME?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     "Verifies that NAME is a valid name")
    (:TYPE :MACRO :SYMBOL
     (:NAME "OPTIONAL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "REQUIREMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CORRECT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SLOT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FAILURE-MESSAGE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks to see if slot obeys test, or throws an invalid-cookie-parameter.
If test is a simple function name it will be turned into (test slot)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRY-QUOTES" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SLOT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELSE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION
     "If slot doesn't match test, try adding quotes around it - if that doesn't work go to else")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUOTE-AROUND" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Adds quotes around a string")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-QUOTES-AROUND" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "If there are quotes, remove them")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAVE-SEQUENCE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEPARATOR" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Cleave SEQUENCE into two at the first and mandatory occurrance of SEPARATOR.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "DOMAIN" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "MAX-AGE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "SECURE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      ((:NAME "CORRECTS-PATH-P" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Creates a cookie named NAME of value VALUE
The returned value is suitable for passing in (request-send-headers request :set-cookie cookie).

 NAME, VALUE (strings)
    Required.  The name of the state information (\"cookie\") is NAME,
    and its value is VALUE.  NAMEs that begin with $ are reserved for
    other uses and must not be used by applications.

 Comment (a string)
    Because cookies can contain private information about a
    user, the Cookie attribute allows an origin server to document its
    intended use of a cookie.  The user can inspect the information to
    decide whether to initiate or continue a session with this cookie.

 Domain (a string)
    The Domain attribute specifies the domain for which the
    cookie is valid.  An explicitly specified domain must always start
    with a dot. [ed - this implementation requires an explicitly specified domain!]

 Max-Age (a non-negative integer)
    The Max-Age attribute defines the lifetime of the
    cookie, in seconds.  The delta-seconds value is a decimal non-
    negative integer.  After delta-seconds seconds elapse, the client
    should discard the cookie.  A value of zero means the cookie
    should be discarded immediately.

 Path (a string)
    The Path attribute specifies the subset of URLs to
    which this cookie applies.

NB: Mozilla (pre-Deer-Park), IE, and links all fail with RFC-compliant
PATHs. As such, it is recommended to set the cookie in the root of your
web app's URI, and not include a path argument.

 Secure (true or false)
    The Secure attribute directs the user
    agent to use only (unspecified) secure means to contact the origin
    server whenever it sends back this cookie.

    The user agent (possibly under the user's control) may determine
    what level of security it considers appropriate for \"secure\"
    cookies.  The Secure attribute should be considered security
    advice from the server to the user agent, indicating that it is in
    the session's interest to protect the cookie contents.

 corrects-path-p (true or false)
    If this is true, PATH will be written as a quoted string, in conformance
    with the standard. Otherwise, whatever string is provided to PATH is used.
    This may be used to cludge compatibility with current browsers' broken
    handling of the path option.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Cookie struct - useful for manipulating cookie values.  Please note
that just because it's a valid cookie structure doesn't mean that it's
a valid cookie.  See documentation for COOKIE-STRING for parameter
information."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAX-AGE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PATH" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SECURE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM285" :PACKAGE-NAME NIL :EXTERNALP NIL))
       "")
      (((:NAME "VALUE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM286" :PACKAGE-NAME NIL :EXTERNALP NIL))
       "")
      (((:NAME "COMMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM287" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "DOMAIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM288" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "MAX-AGE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM289" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "PATH" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM290" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "SECURE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM291" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT292" :PACKAGE-NAME NIL :EXTERNALP NIL)
       (:NAME "COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
      (:NAME "STREAM293" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEPTH" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION
     "Prints an aesthetic representation of COOKIE to STREAM. Note that this is *not* the equivalent of COOKIE-STRING-FROM-COOKIE-STRUCT. As such, it explicity prints an invalid cookie.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COOKIE-STRING-FROM-COOKIE-STRUCT" :PACKAGE-NAME "RFC2109"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a cookie struct, return an RFC-compliant cookie string")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALID-DOMAIN?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DOMAIN" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-ALONG-LWS" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Chops up a string along linear whitespace, returns a list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-ALONG-QUOTED-LWS" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Chops up a string along linear whitespace, but this version knows about quote marks")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-COOKIES-V1" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
      (:NAME "CHOPPED" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION "Parses RFC2109 cookies - do not use directly")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-COOKIES" :PACKAGE-NAME "RFC2109" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T))
     :DOCUMENTATION
     "Parses cookies in a Cookie: request header, returning a list of COOKIE structs.
The only information that is passed back for each cookie is: name, value, path, domain, so don't go
looking for comments or the like.

Note that this function does not want the Cookie: portion of the header

So if the request header looked like:
Cookie: $Version=1;
                mycookie=value1;
                myothercookie=value2

You'd leave off the Cookie: bit at the front.

The other parser is SAFE-PARSE-COOKIES, which is the version to use when you can.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COOKIE-STRING-TOO-LONG?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T))
     :DOCUMENTATION
     "True if the cookie string is longer than the minimum cookie size guaranteed
to be allowed by the specification")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAFE-PARSE-COOKIES" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DOMAIN-RESTRICTION" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) ""))
     :DOCUMENTATION
     "Parse a cookie string (see parse-cookies), but only allow domain cookies that match domain-restriction
RFC 2109 specifies that, in order to avoid a cookie spoofing attack,
one should check that the domain being handed back in your cookie is
the domain you gave out.

A walkthrough of the mechanics:
- If you hand out a cookie with no domain=, then it is restricted to your host
- If you specify a domain, the cookie is \"unlocked\" for the domain specified

If you don't expect to use domain cookies, it's best to ignore all
domain cookies, as they're not from your website. The default call to
SAFE-PARSE-COOKIES will ignore all domain cookies.

Later on, if you need domain cookies, pass the domains you'll be using to SAFE-PARSE-COOKIES,
and those specific domains will not be dropped.

RFC text below:

  8.2  Cookie Spoofing

     Proper application design can avoid spoofing attacks from related
     domains.  Consider:

       1.  User agent makes request to victim.cracker.edu, gets back
           cookie session_id=\"1234\" and sets the default domain
           victim.cracker.edu.

       2.  User agent makes request to spoof.cracker.edu, gets back
           cookie session-id=\"1111\", with Domain=\".cracker.edu\".

       3.  User agent makes request to victim.cracker.edu again, and
           passes

           Cookie: $Version=\"1\";
                           session_id=\"1234\";
                           session_id=\"1111\"; $Domain=\".cracker.edu\"

           The server at victim.cracker.edu should detect that the second
           cookie was not one it originated by noticing that the Domain
           attribute is not for itself and ignore it.

")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OCTET-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DATUM" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CTL-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CRLF-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LWS-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEXT-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEXT?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOKEN-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOKEN?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TSPECIAL-EL?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EL" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUOTED-STRING?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-ESCAPED-QUOTES" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QDTEXT?" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM-SPACES" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-PAIR" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DELIM" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL))
     :DOCUMENTATION "Ensure that the LIST has only two elements, by joining the
   elements of the tail with DELIM. Gentle failure: shorter
   lists are just returned.
   LIST should be a list of strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-COOKIES-VNETSCAPE" :PACKAGE-NAME "RFC2109" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T))
     :DOCUMENTATION "Parses old netscape-style cookies"))
   :EXTERNAL-SYMBOLS
   ((:NAME "COOKIE-COMMENT" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-NAME" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-SECURE" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-VALUE" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "PARSE-COOKIES" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-DOMAIN" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "SAFE-PARSE-COOKIES" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-PATH" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-P" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-STRING" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "COOKIE-STRING-FROM-COOKIE-STRUCT" :PACKAGE-NAME "RFC2109"
     :EXTERNALP T)
    (:NAME "COOKIE-MAX-AGE" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "MAKE-COOKIE" :PACKAGE-NAME "RFC2109" :EXTERNALP T)
    (:NAME "DOMAIN-MATCH-P" :PACKAGE-NAME "RFC2109" :EXTERNALP T)))))
