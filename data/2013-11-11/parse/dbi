
(:TYPE :SYSTEM :NAME "dbi" :AUTHOR "Eitarow Fukamachi" :MAINTAINER NIL :VERSION
 "0.1" :LICENCE "LLGPL" :DESCRIPTION
 "Database independent interface for Common Lisp" :LONG-DESCRIPTION
 "# CL-DBI - Database independent interface for Common Lisp

## Usage

### Connecting and executing a query

```common-lisp
(defvar *connection*
  (dbi:connect :mysql
               :database-name \"test\"
               :username \"nobody\"
               :password \"1234\"))

(let* ((query (dbi:prepare *connection*
                           \"SELECT * FROM somewhere WHERE flag = ? OR updated_at > ?\"))
       (result (dbi:execute query 0 \"2011-11-01\")))
  (loop for row = (dbi:fetch result)
     while row
     ;; process \"row\".
       ))
```

### Using `dbi:with-connection` to ensure connections are closed

```common-lisp
(dbi:with-connection (conn :sqlite3 :database-name \"/home/fukamachi/test.db\")
  (let* ((query (dbi:prepare conn \"SELECT * FROM People\"))
         (result (dbi:execute query)))
    (loop for row = (dbi:fetch result)
       while row
       do (format t \"~A~%\" row))))
```

## Warning

This library is still under development and considered ALPHA quality. APIs are likely to change.

## Description

CL-DBI provides the same interface for multiple SQL databases. You need not learn the API of each database.

This library is especially convenient when you want to use different databases in different environments. For example, you may use MySQL as a production database, but use SQLite3 on your development system. To switch database backends you need only change the arguments to `dbi:connect`.

## Databases

* SQLite3
* PostgreSQL
* MySQL

## Installation

This library will be available on Quicklisp when ready for use.

## API

### User-Level API

* connect [driver-name &amp; params] =&gt; &lt;dbi-connection&gt;
* disconnect [&lt;dbi-connection&gt;] =&gt; T or NIL
* prepare [conn sql] =&gt; &lt;dbi-query&gt;
* execute [query &amp; params] =&gt; something
* fetch [result] =&gt; a row data as plist
* fetch-all [result] =&gt; a list of all row data
* do-sql [conn sql &amp; params]
* list-all-drivers [] =&gt; (&lt;dbi-driver&gt; ..)
* find-driver [driver-name] =&gt; &lt;dbi-driver&gt;
* with-transaction [conn]
* begin-transaction [conn]
* commit [conn]
* rollback [conn]
* ping [conn] =&gt; T or NIL
* with-connection [connection-variable-name &body body]

### Driver-Level API

* &lt;dbi-driver&gt;
* &lt;dbi-connection&gt;
* make-connection [driver params]
* disconnect [&lt;dbi-connection&gt;] =&gt; T or NIL
* prepare [conn sql] =&gt; &lt;dbi-query&gt;
* fetch-using-connection [conn result] =&gt; a row data as plist
* do-sql [conn sql &amp; params]
* execute-using-connection =&gt; something
* escape-sql =&gt; string
* begin-transaction [conn]
* commit [conn]
* rollback [conn]
* ping [conn] =&gt; T or NIL

## Creating a new driver

Create a subclass of &lt;dbi-driver&gt; and implement following methods.

* make-connection
* disconnect [&lt;dbi-connection&gt;] =&gt; T or NIL
* execute-using-connection

These methods can be overriden if needed.

* prepare
* fetch-using-connection
* do-sql
* escape-sql

## Dependencies

* cl-annot
* CL-Syntax
* SPLIT-SEQUENCE
* closer-mop

## Author

* Eitarow Fukamachi (e.arrows@gmail.com)

## Copyright

Copyright (c) 2011 Eitarow Fukamachi (e.arrows@gmail.com)

# License

Licensed under the LLGPL License.

"
 :DEPENDS-ON ("CL-SYNTAX" "CL-SYNTAX-ANNOT" "SPLIT-SEQUENCE" "CLOSER-MOP")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "DBI" :FULL-NAME "DBI" :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL (:NAME "CONNECT" :PACKAGE-NAME "DBI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DRIVER-NAME" :PACKAGE-NAME "DBI" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "DBI" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATABASE-NAME" :PACKAGE-NAME "DBI" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Open a connection to the database which corresponds to `driver-name`.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOAD-DRIVER" :PACKAGE-NAME "DBI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DRIVER-NAME" :PACKAGE-NAME "DBI" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-TRANSACTION" :PACKAGE-NAME "DBI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONN" :PACKAGE-NAME "DBI" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DBI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Start a transaction and commit at the end of this block. If the evaluation `body` is interrupted, the transaction is rolled back automatically.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONNECTION" :PACKAGE-NAME "DBI" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN-SYM" :PACKAGE-NAME "DBI" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "DBI" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "<DBI-UNIMPLEMENTED-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "DO-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "COMMIT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "CONNECT" :PACKAGE-NAME "DBI" :EXTERNALP T)
    (:NAME "<DBI-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "LIST-ALL-DRIVERS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "ROLLBACK" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "WITH-TRANSACTION" :PACKAGE-NAME "DBI" :EXTERNALP T)
    (:NAME "<DBI-NOTSUPPORTED-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-DATA-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "FETCH" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "EXECUTE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-WARNING>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "DISCONNECT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-PROGRAMMING-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-INTERFACE-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-OPERATIONAL-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "PING" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "FETCH-ALL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-INTEGRITY-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "PREPARE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-DATABASE-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "FIND-DRIVER" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-INTERNAL-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "WITH-CONNECTION" :PACKAGE-NAME "DBI" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".DRIVER" :FULL-NAME "DBI.DRIVER" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "<DBI-DRIVER>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Base class for DB driver."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Base class for managing DB connection." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "AUTO-COMMIT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "%HANDLE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "CONNECTION-HANDLE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DRIVER" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-DRIVER>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Create a instance of `<dbi-connection>` for the `driver`.
This method must be implemented in each drivers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DISCONNECT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-DRIVER" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DRIVER-NAME" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL))
     :DOCUMENTATION "Find a driver class named as `driver-name`.
`driver-name` is a string designer.
Driver should be named like '<DBD-SOMETHING>' for a database 'something'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-ALL-DRIVERS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Return a list of direct subclasses for `<dbi-driver>`.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Class that represents a prepared DB query." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "QUERY-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PREPARED" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "QUERY-PREPARED" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PREPARE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
      (:NAME "SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREPARE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "QUERY-CLASS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))))
     :DOCUMENTATION
     "Preparing executing SQL statement and returns a instance of `<dbi-query>`.
This method may be overrided by subclasses.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXECUTE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "QUERY" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL))
     :DOCUMENTATION "Execute `query` with `params` and return the results.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FETCH" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "QUERY" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION
     "Fetch the first row from `query` which is returned by `execute`.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FETCH-ALL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "QUERY" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION "Fetch all rest rows from `query`.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FETCH-USING-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "QUERY" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DO-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL))
     :DOCUMENTATION "Do preparation and execution at once.
This method may be overrided by subclasses.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EXECUTE-USING-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "QUERY" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      (:NAME "PARAMS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL))
     :DOCUMENTATION "Execute `query` in `conn`.
This method must be implemented in each drivers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION
     "Turn `auto-commit` off automatically before starting a transaction.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION "Start a transaction.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COMMIT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION "Commit changes and end the current transaction.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ROLLBACK" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION "Rollback all changes and end the current transaction.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PING" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
     :DOCUMENTATION
     "Check if the database server is still running and the connection to it is still working.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ESCAPE-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Return escaped `sql`.
This method may be overrided by subclasses when needed.
For example, in case of MySQL and PostgreSQL, backslashes must be escaped by doubling it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PREPARE-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONN" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T))
      ((:NAME "SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Create a function that takes parameters, binds them into a query and returns SQL as a string."))
   :EXTERNAL-SYMBOLS
   ((:NAME "DO-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "ROLLBACK" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "CONNECTION-HANDLE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "FETCH-USING-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-CONNECTION>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-QUERY>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "EXECUTE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "EXECUTE-USING-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "FETCH-ALL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "DISCONNECT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "BEGIN-TRANSACTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "FIND-DRIVER" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "LIST-ALL-DRIVERS" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "MAKE-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "PREPARE" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "FETCH" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "<DBI-DRIVER>" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "QUERY-CONNECTION" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "PING" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "ESCAPE-SQL" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "COMMIT" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)
    (:NAME "QUERY-PREPARED" :PACKAGE-NAME "DBI.DRIVER" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".ERROR" :FULL-NAME "DBI.ERROR" :DOCUMENTATION NIL
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "<DBI-OPERATIONAL-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-NOTSUPPORTED-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-DATA-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-WARNING>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-UNIMPLEMENTED-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-PROGRAMMING-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-DATABASE-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-INTERNAL-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-INTEGRITY-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)
    (:NAME "<DBI-INTERFACE-ERROR>" :PACKAGE-NAME "DBI.ERROR" :EXTERNALP T)))))
