
(:TYPE :SYSTEM :NAME "url-rewrite" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.1.1"
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "URL-REWRITE" :FULL-NAME "URL-REWRITE" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*URL-REWRITE-BASE-DIRECTORY*" :PACKAGE-NAME "URL-REWRITE"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(MAKE-PATHNAME :NAME NIL :TYPE NIL :VERSION NIL :DEFAULTS
               (PARSE-NAMESTRING *LOAD-TRUENAME*))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*URL-REWRITE-TAGS*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
     :DOCUMENTATION
     "The tag/attribute combinations where URL-rewriting should happen."
     :INITIAL-VALUE
     "'((\"a\" . \"href\") (\"area\" . \"href\") (\"frame\" . \"src\") (\"img\" . \"src\")
  (\"input\" . \"src\") (\"form\" . \"action\") (\"iframe\" . \"src\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*URL-REWRITE-FILL-TAGS*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
     :DOCUMENTATION "The tag/attribute combinations where URL-rewriting should
optionally add an attribute."
     :INITIAL-VALUE "'((\"form\" . \"action\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FIND-STRING-HASH*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :DOCUMENTATION
     "Hash tables used internally by READ-UNTIL to cache offset arrays."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HYPERDOC-BASE-URI*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"http://weitz.de/url-rewrite/\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HYPERDOC-LOOKUP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PEEK-CHAR*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "PEEK-CHAR with input stream bound to *STANDARD-INPUT* and returning
NIL on EOF.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WHITESPACEP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL))
     :DOCUMENTATION "Checks whether C is a whitespace character.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LETTERP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "C" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)) :DOCUMENTATION
     "Checks whether C is a character between A and Z
(case-insensitive).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAME-CHAR-P" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "C" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks whether C is a name constituent character in the sense of
HTML.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMMENT-START-P" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Checks whether *STANDARD-OUTPUT* currently 'looks at' the string
\"--\". Will move the position within the stream by one unless the
first characters it sees is not a hyphen.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-WHILE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Reads characters from *STANDARD-INPUT* while PREDICATE returns a
true value for each character. Returns the string which was read
unless SKIP is true. Writes all characters read to *STANDARD-OUTPUT*
if WRITE-THROUGH is true. On EOF the string read so far is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-UNTIL" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Reads characters from *STANDARD-INPUT* up to and including
STRING. Return the string which was read (excluding STRING) unless
SKIP is true. Writes all characters read to *STANDARD-OUTPUT* if
WRITE-THROUGH is true. On EOF the string read so far is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-WHITESPACE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Read characters from *STANDARD-INPUT* as long as they are
whitespace. Returns the string which was read unless SKIP is true. On
EOF the string read so far is returned. Writes all characters read to
*STANDARD-OUTPUT* if WRITE-THROUGH is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DELIMITED-STRING" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Reads and returns as its first value a string from
*STANDARD-INPUT*. The string is either delimited by ' or \" in which
case the delimiters aren't part of the string but the second return
value is the delimiter character or it is assumed to extend to the
next character which is not a name constituent (see NAME-CHAR-P). On
EOF the string read so far is returned. If SKIP is true NIL is
returned. Writes all characters read to *STANDARD-OUTPUT* if
WRITE-THROUGH is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-NAME" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Read characters from *STANDARD-INPUT* as long as they are name
constituents. Returns the string which was read unless SKIP is
true. On EOF the string read so far is returned. Writes all characters
read to *STANDARD-OUTPUT* if WRITE-THROUGH is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-ATTRIBUTE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SKIP" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "WRITE-THROUGH" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Read characters from *STANDARD-INPUT* assuming that they constitue
a SGML-style attribute/value pair. Returns three values - the name of
the attribute, its value, and the whole string which was read. On EOF
the string(s) read so far is/are returned. If SKIP is true NIL is
returned. Writes all characters read to *STANDARD-OUTPUT* if
WRITE-THROUGH is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SKIP-COMMENT" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Skip SGML comment from *STANDARD-INPUT*, i.e. a string enclosed in
'--' on both sides. Returns no values. Writes all characters read to
*STANDARD-OUTPUT*. This function assumes (without checking) that the
current position of *STANDARD-INPUT* is at the beginning of a comment,
after the first hyphen - see COMMENT-START-P.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STARTS-WITH-SCHEME-P" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Checks whether the string STRING represents a URL which starts with
a scheme, i.e. something like 'https://' or 'mailto:'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-ENCODE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "URL-encode a string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-GET-PARAM-TO-URL" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "URL" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL))
     :DOCUMENTATION
     "URL is assumed to be a http URL. The pair of NAME and VALUE will be
added as a GET parameter to this URL. Assumes that there's no other
parameter of the same name. Only checks if #? is part of the string
to decide how to attach the new parameter to the end of the string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REWRITE-URLS" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REWRITE-FN" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST-FN" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP NIL)
       ((:NAME "COMPLEMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "STARTS-WITH-SCHEME-P" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP
          T)))))
     :DOCUMENTATION
     "Reads an (X)HTML document from *STANDARD-INPUT* and writes it back
to *STANDARD-OUTPUT*. Any attribute value which is in one of the
positions denoted by *URL-REWRITE-TAGS* is rewritten by REWRITE-FN if
it passes the test denoted by the optional function TEST-FN which
defaults to the complement of STARTS-WITH-SCHEME-P.

This function aims to yield correct results for correct (X)HTML input
and it also tries hard to never signal an error although it may warn
if it encounters syntax errors. It will NOT detect any possible error
nor is there any warranty that it will work correctly with faulty
input."))
   :EXTERNAL-SYMBOLS
   ((:NAME "STARTS-WITH-SCHEME-P" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
    (:NAME "*URL-REWRITE-FILL-TAGS*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
    (:NAME "*URL-REWRITE-TAGS*" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
    (:NAME "URL-ENCODE" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
    (:NAME "ADD-GET-PARAM-TO-URL" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)
    (:NAME "REWRITE-URLS" :PACKAGE-NAME "URL-REWRITE" :EXTERNALP T)))))
