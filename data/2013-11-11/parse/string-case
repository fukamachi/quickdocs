
(:TYPE :SYSTEM :NAME "string-case" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "STRING-CASE" :FULL-NAME "STRING-CASE" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Splits input list into sublists of elements
   whose elements are all such that (key element)
   are all test.
   It's assumed that test and key form an equality class.
   (This is similar to groupBy)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IOTA" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASH-TABLE->LIST" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TABLE" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEEP-KEYS" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "KEEP-VALUES" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Saves the keys and/or values in table to a list.
   As with hash table iterating functions, there is no
   implicit ordering.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-EQUAL" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-AT" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "N" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Split list in k lists of n elements (or less for the last list)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INPUT-STRING*" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :DOCUMENTATION "Symbol of the variable holding the input string"
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*NO-MATCH-FORM*" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :DOCUMENTATION "Form to insert when no match is found." :INITIAL-VALUE
     "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-BEST-SPLIT" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRINGS" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "TO-CHECK" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION "Iterate over all the indices left to check to find
   which index (and which character) to test for equality
   with, keeping the ones which result in the most balanced
   split.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMERIC-CHAR=" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMIT-COMMON-CHECKS" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRINGS" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "TO-CHECK" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SEARCH-TREE" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRINGS" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "BODIES" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "TO-CHECK" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMIT-STRING-CASE" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CASES" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "INPUT-VAR" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
      (:NAME "NO-MATCH" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "STRING-CASE" :PACKAGE-NAME "STRING-CASE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "DEFAULT" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
          "No match"))))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CASES" :PACKAGE-NAME "STRING-CASE" :EXTERNALP NIL))
     :DOCUMENTATION "(string-case (string &key default)
     case*)
   case ::= string form*
          | t      form*
   Where t is the default case."))
   :EXTERNAL-SYMBOLS
   ((:NAME "STRING-CASE" :PACKAGE-NAME "STRING-CASE" :EXTERNALP T)))))
