
(:TYPE :SYSTEM :NAME "bencode" :AUTHOR
 "Johan Andersson <nilsjohanandersson@gmail.com>" :MAINTAINER NIL :VERSION
 "3.0.1" :LICENCE "MIT" :DESCRIPTION "Bencode" :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("FLEXI-STREAMS") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "BENCODE" :FULL-NAME "BENCODE" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Makes a dictionary from a plist or alist.  Keys must be strings.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BINARY-KEY-P*" :PACKAGE-NAME "BENCODE" :EXTERNALP T)
     :DOCUMENTATION
     "When decoding dictionary values, this function is passed a list,
where the first element is the key of the value. If the dictionary was
in turn a dictionary value, that key is the second element of the
list, and so on. Should a dictionary be a value in a bencoded list,
the corresponding element in the list will be the symbol :list.  When
the function return a true value, the dictionary value will be
binary. Otherwise it will be decoded as a string.

The default function in *binary-key-p* returns true for the
\"pieces\" value in the \"info\" dictionary. All other values are
decoded as strings."
     :INITIAL-VALUE
     "#'(LAMBDA (BENCODE::X) (EQUAL BENCODE::X '(\"pieces\" \"info\")))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      (:NAME "DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BINARY-DICTIONARY-KEY-P" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DICTIONARY->ALIST" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION "Returns an alist representation of the dictionary.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION "Encode object and write it to stream or, if stream
is nil, use an in-memory stream and return the resulting sequence.
The external-format is used when encoding strings.  UTF-8 is the
default.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "UTF-8" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "UTF-8" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ASCII*" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "(FLEXI-STREAMS:MAKE-EXTERNAL-FORMAT :ASCII)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-HEADER" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RENDER-INTEGER" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RESTART-CASE-LOOP" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL))
     :DOCUMENTATION "Decode a bencode object from a stream or sequence.
If input is a flexi-stream, its external-format will be used when
decoding strings.  If input is a string, all characters must have
char-codes that fit in an (unsigned-byte 8). Otherwise, the value of
the external-format parameter is used to create a flexi-stream for
decoding.  The default is UTF-8.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "UTF-8" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "UTF-8" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
       (:NAME "UTF-8" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FLEXI-STREAM" :PACKAGE-NAME "FLEXI-STREAMS" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MUST-READ-CHAR" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-READ-CHAR" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-INTEGER" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-INTEGERS" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-EXTERNAL-FORMAT" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MUST-READ-OCTETS" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-STRING" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-LIST" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-BINARY-STRING" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DICTIONARY-KEYS*" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-DICTIONARY" :PACKAGE-NAME "BENCODE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "*BINARY-KEY-P*" :PACKAGE-NAME "BENCODE" :EXTERNALP T)
    (:NAME "ENCODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T)
    (:NAME "DECODE" :PACKAGE-NAME "BENCODE" :EXTERNALP T)))))
