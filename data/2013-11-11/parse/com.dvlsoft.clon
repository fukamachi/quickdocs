
(:TYPE :SYSTEM :NAME "com.dvlsoft.clon" :AUTHOR
 "Didier Verna <didier@lrde.epita.fr>" :MAINTAINER
 "Didier Verna <didier@lrde.epita.fr>" :VERSION NIL :LICENCE "BSD" :DESCRIPTION
 "The Command-Line Options Nuker." :LONG-DESCRIPTION
 "Clon is a library for command-line option management.
It is intended to ease the creation of standalone Common Lisp applications by
providing a powerful and uniform command-line option interface.
The most important features of Clon are:
- [from the programmer's point of view] Centralized command-line options
  specification and management, including automatic generation of help
  strings, conversion from command-line / environment strings to
  application-level option values, global or on-demand option retrieval, and
  extensibility (the programmer can define his own option types).
- [from the end-user's point of view] Uniform command-line option syntax
  across Clonified applications, including customization of the help strings
  layout (with optional ISO6429 coloring on terminals that support it),
  possibly abbreviated option calls and short/long syntax."
 :DEPENDS-ON ("SB-POSIX") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "COM.DVLSOFT.CLON" :FULL-NAME "COM.DVLSOFT.CLON"
   :DOCUMENTATION "The Command-Line Options Nuker package." :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "NICKNAME-PACKAGE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NICKNAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CLON" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Add NICKNAME (:CLON by default) to the :COM.DVLSOFT.CLON package.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*READTABLE*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :DOCUMENTATION "The Clon readtable." :INITIAL-VALUE "(COPY-READTABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TILDE-READER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Read a series of ~\"string\" to be concatenated together.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLINDENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Set SYMBOL's indentation to INDENT in (X)Emacs.
This function sets SYMBOL's common-lisp-indent-function property.
If INDENT is a symbol, use its indentation definition.
Otherwise, INDENT is considered as an indentation definition.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINDENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Set SYMBOL's indentation to INDENT in (X)Emacs.
SYMBOL and INDENT need not be quoted.
See CLINDENT for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "I-READER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBCHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Read an argument list for the DEFINDENT macro.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IN-READTABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the current readtable to the value of NAME::*READTABLE*.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ECOND" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like COND, but signal an error if no clause evaluates to t.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENDPUSH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Like push, but at the end.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAYBE-PUSH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "THE-OBJECT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "object")))
     :DOCUMENTATION "Like push, but only if OBJECT is non-nil.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ACCUMULATE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "INITIAL-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "place"))
      ((:NAME "INITIAL-PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        "initial-place")))
     :DOCUMENTATION
     "Accumulate BODY forms in a list beginning with INITIAL-VALUE.
INITIAL-VALUE is not evaluated. BODY forms are accumulated only when their
value is non-nil.
If nothing to accumulate, then return nil instead of the list of
INITIAL-VALUE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BEGINNING-OF-STRING-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "BEGINNING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IGNORE-CASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "BEGINNING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Check that STRING starts with BEGINNING.
If IGNORE-CASE, well, ignore case.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSEST-MATCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MATCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IGNORE-CASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "KEY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MATCH-LENGTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "MATCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
      ((:NAME "SHORTEST-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)
       (:NAME "MOST-POSITIVE-FIXNUM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CLOSEST-MATCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return the LIST element closest to MATCH, or nil.
If IGNORE-CASE, well, ignore case.
KEY should provide a way to get a string from each LIST element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPLETE-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "BEGINNING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "COMPLETE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Complete BEGINNING with the rest of COMPLETE in parentheses.
For instance, completing 'he' with 'help' will produce 'he(lp)'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-TO-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "SEPARATOR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ", "))
     :DOCUMENTATION "Return a SEPARATOR-separated string of all LIST elements.
- KEY should provide a way to get a string from each LIST element.
- SEPARATOR is the string to insert between elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SELECT-KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SELECTED" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a new property list from KEYS with only SELECTED ones.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REMOVED" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a new property list from KEYS without REMOVED ones.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "REPLACE-IN-KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "KEY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "THE-KEY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FORM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Replace every occurrence of THE-KEY in KEYS with FORM.
At every KEYS round, KEY and VAL are bound to the current key-value pair.
FORM is evaluated each time and should return a key-value list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-KEY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REPLACEMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return a new property list from KEYS with REPLACEMENT.
REPLACEMENT can take the following forms:
- :KEY
  The effect is to remove :KEY from KEYS, as per REMOVE-KEYS.
- (:KEY :NEW-KEY)
  The effect is to replace :KEY with :NEW-KEY, leaving the values unchanged.
- (:KEY :NEW-KEY (VAL-OR-VALS NEW-VAL)*), with VAL-OR-VALS being
  either a value or a list of values. The effect is to replace :KEY with
  :NEW-KEY and a value matching one of the VAL-OR-VALS with the
  corresponding NEW-VAL. Values not matching any VAL-OR-VALS remain unchanged.
- (:KEY (VAL-OR-VALS :NEW-KEY NEW-VAL...)*), with VAL-OR-VALS as above. The
  effect is the same as above, but :NEW-KEY additionally depends on the
  matched value. If multiple :NEW-KEY NEW-VAL couples are provided, that many
  new keys are inserted along with their values. For values not matching any
  VAL-OR-VALS, :KEY and its value remain unchanged.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REPLACEMENTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NEW-KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return a new property list from KEYS with REPLACEMENTS.
See REPLACE-KEY for more information on the replacement syntax.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DECLARE-VALID-SUPERCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUPERCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Validate SUPERCLASS classes for CLASS classes.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ABSTRACT-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "The ABSTRACT-CLASS class.
This is the meta-class for abstract classes."
     :SLOT-LIST NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFABSTRACT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUPER-CLASSES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SLOTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Like DEFCLASS, but define an abstract class.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ABSTRACT-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE-SUPERCLASS" :PACKAGE-NAME "SB-MOP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ABSTRACT-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL))
      ((:NAME "SUPERCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE-SUPERCLASS" :PACKAGE-NAME "SB-MOP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SUPERCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ABSTRACT-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COPY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return a copy of INSTANCE.
Copy is either an object of INSTANCE's class, or INSTANCE's SUBCLASS if given.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return a copy of INSTANCE.
Both instances share the same slot values.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBCLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return a copy of INSTANCE.
Both instances share the same slot values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HOME-DIRECTORY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Return user's home directory in canonical form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MACOSP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Return t if running on Mac OS.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXIT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STATUS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Quit the current application with STATUS.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EXECUTABLEP*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :DOCUMENTATION
     "Whether the current Lisp image is a standalone executable dumped by Clon.
This information is needed in some implementations that treat their
command-line differently in dumped images."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Get the current application's command-line.
This command-line is not supposed to contain any Lisp implementation specific
option; only user-level ones. When a standalone executable is dumped, this is
always the case. When used interactively, this depends on the underlying Lisp
implementation. See appendix A.5 of the user manual for more information.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETENV" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VARIABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Get environment VARIABLE's value. VARIABLE may be null.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUTENV" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VARIABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Set environment VARIABLE to VALUE.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DUMP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Dump a standalone executable named NAME starting with FUNCTION.
ARGS may be any arguments understood by the underlying implementation's
dumping facility. They will simply be passed along. Note that DUMP already
passes some such arguments. Some of them are critical for the dumping facility
(e.g. :executable) and cannot be overridden. Some others, however, will be if
you provide them as well (e.g. :load-init-file).

Since executable dumping is not available in all supported implementations,
this function behaves differently in some cases, as described below.

- ECL doesn't create executables by dumping a Lisp image, but relies on having
  toplevel code to execute instead, so this macro simply expands to a call to
  FUNCTION. This also means that ARGS is unused.
- ABCL can't dump executables at all because of the underlying Java
  implementation, so this macro expands to just (PROGN) but creates a Java
  class file with a main function that creates an interpreter, loads
  the file in which this macro call appears and calls FUNCTION. This also
  means that ARGS is unused.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The ITEM class.
This class is the base class for all synopsis items."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TRAVERSEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TRAVERSEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "The item's traversal state.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HIDDENP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HIDDENP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Whether the item is hidden in help strings.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Reset ITEM's traversal state, and return ITEM.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Mark ITEM as untraversed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Mark ITEM as untraversed.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return ITEM's help specification.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNHIDE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Call the actual method only when ITEM is not hidden or UNHIDE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNHIDE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Call the actual method only when ITEM is not hidden or UNHIDE.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The TEXT class.
This class implements plain text objects appearing in a synopsis."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTENTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "CONTENTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The actual text string.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "TEXT is a terminal object: just return it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return TEXT's help specification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTENTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new text.
- CONTENTS is the actual text to display.
- When HIDDEN, the text doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTENTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The OPTION class.
This is the base class for all options."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The option's short name.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The option's long name.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The option's description.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "The option's associated environment variable.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "OPTION is a terminal object: just return it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return OPTION's help specification.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEM2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Check for name clash between ITEM1's options and ITEM2's options.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      ((:NAME "OPTION2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Ensure that there is no name clash between OPTION1 and OPTION2.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      ((:NAME "OPTION2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Ensure that there is no name clash between OPTION1 and OPTION2.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ITEM2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Do nothing (no name clash with a text object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ITEM2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Do nothing (no name clash with a text object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Do nothing (no name clash with a text object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Do nothing (no name clash with a text object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTION-ABBREVIATION-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PARTIAL-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the distance between OPTION's long name and PARTIAL-NAME.
If PARTIAL-NAME does not abbreviate OPTION's long name, return
MOST-POSITIVE-FIXNUM.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Try to match OPTION against SHORT-NAME, LONG-NAME.
If OPTION matches, return the name that matched.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OPTION-STICKY-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NAMEARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Try to match OPTION's short name with a sticky argument against NAMEARG.
If OPTION matches, return the length of OPTION's short name; otherwise 0.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPTION-STICKY-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "NAMEARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return 0 (non-valued options don't take any argument, sticky or not).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPTION-STICKY-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "NAMEARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return 0 (non-valued options don't take any argument, sticky or not).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POTENTIAL-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return OPTION's potential pack character, if any.
If AS-STRING, return a string of that character.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SHORT-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return OPTION's short pack character, if any.
If AS-STRING, return a string of that character.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return OPTION's potential pack character.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return OPTION's potential pack character.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NEGATED-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return OPTION's negated pack character, if any.
If AS-STRING, return a string of that character.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEGATED-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return nil (only the switch hierarchy is negated-pack'able).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEGATED-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return nil (only the switch hierarchy is negated-pack'able).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "INTERNAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check validity of the name-related initargs.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "INTERNAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "If INTERNAL, prefix LONG-NAME with \"clon-\" and ENV-VAR with \"CLON_\".")
    (:TYPE :CLASS :SYMBOL
     (:NAME "FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The FLAG class.
This class implements options that don't take any argument."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new flag.
- SHORT-NAME is the option's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the option's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the option's description appearing in help strings.
  It defaults to nil.
- ENV-VAR is the flag's associated environment variable.
  It defaults to nil.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) flag.
- LONG-NAME is the flag's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the flag's description.
- ENV-VAR is the flag's associated environment variable, sans the 'CLON_'
  prefix. It default to nil.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The VALUED-OPTION class.
This is the base class for options accepting arguments."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The option's argument display name.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-REQUIRED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ARGUMENT-REQUIRED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
         :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Whether the option's argument is required.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The option's fallback value.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The option's default value.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPTION-STICKY-DISTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "NAMEARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Try to match OPTION's short name with a sticky argument against NAMEARG.
If OPTION matches, return its short name's length; otherwise 0.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return OPTION's short pack character if OPTION's argument is optional.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SHORT-SYNTAX-HELP-SPEC-PREFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the help specification prefix for OPTION's short call.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-SYNTAX-HELP-SPEC-PREFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-SYNTAX-HELP-SPEC-PREFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return OPTION's help specification.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform VALUED-OPTION's VALUE into an argument.
This is the opposite of argument conversion.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for VALUED-OPTION.
If VALUE is valid, return it. Otherwise, raise an invalid-value error.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Read an option value from standard input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTARTABLE-CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Restartably check that VALUE is valid for VALUED-OPTION.
The only restart available, use-value, offers to try a different value from
the one that was provided.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to VALUED-OPTION's value.
If ARGUMENT is invalid, raise an invalid-argument error.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Read an option argument from standard input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTARTABLE-CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Restartably convert ARGUMENT to VALUED-OPTION's value.
Available restarts are:
- use-default-value: return OPTION's default value,
- use-value: return another (already converted) value,
- use-argument: return the conversion of another argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FALLBACK-VALUE-SUPPLIED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL))
      ((:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DEFAULT-VALUE-SUPPLIED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL)))
     :DOCUMENTATION "Check validity of the value-related initargs.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FALLBACK-VALUE-SUPPLIED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL))
      ((:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DEFAULT-VALUE-SUPPLIED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL)))
     :DOCUMENTATION "Compute uninitialized OPTION slots with indirect initargs.
This currently involves the conversion of the ARGUMENT-TYPE key to the
ARGUMENT-REQUIRED-P slot.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ITEM-NAMES*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :DOCUMENTATION "The list of defined item names." :INITIAL-VALUE
     "(MAPCAR #'STRING '(:FLAG :TEXT :GROUP))")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFOPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUPERCLASSES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SLOTS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Create a new option CLASS and register it with Clon.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The NEGATABLE Class.
This class implements the negated syntax for the switch-based hierarchy."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-SYNTAX-HELP-SPEC-PREFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEGATED-PACK-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AS-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return NEGATABLE's negated pack character, if any.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The SWITCH-BASE abstract class.
This class provides support for options including boolean values."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-STYLES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "ARGUMENT-STYLES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "The possible argument styles.
The position of every argument style in the list must correspond to the
position of the associated strings in the yes-values and no-values slots.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "YES-VALUES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "YES-VALUES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "The possible 'yes' values.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NO-VALUES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "NO-VALUES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "The possible 'no' values.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-STYLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ARGUMENT-STYLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The selected argument style.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ARGUMENT-STYLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "YES/NO" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
       (:NAME "ARGUMENT-STYLE-SUPPLIED-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL))
      (:NAME "ARGUMENT-STYLES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL))
     :DOCUMENTATION "Check for validity of the :ARGUMENT-STYLE initarg.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Provide a fallback value of t when ARGUMENT-TYPE is optional.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The SWITCH class.
This class implements boolean options."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform SWITCH's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for SWITCH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to a SWITCH value.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Provide an argument name conformant to the selected argument style.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-STYLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new switch.
- SHORT-NAME is the switch's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the switch's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the switch's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-STYLE is the switch's argument display style. It can be one of
  :yes/no, :on/off, :true/false, :yup/nope or :yeah/nah.
  It defaults to :yes/no.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the switch's associated environment variable.
  It defaults to nil.
- DEFAULT-VALUE is the switch's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-STYLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) switch.
- LONG-NAME is the switch's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the switch's description.
- ARGUMENT-STYLE is the switch's argument display style. It can be one of
  :yes/no, :on/off, :true/false, :yup/nope or :yeah/nah.
  It defaults to :yes/no.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the switch's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- DEFAULT-VALUE is the switch's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The STROPT class.
This class implements options the values of which are strings."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform STROPT's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for STROPT.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to an STROPT value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new string option.
- SHORT-NAME is the option's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the option's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the option's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable.
  It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) string option.
- LONG-NAME is the option's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the options's description.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The LISPOBJ class.
This class implements read-from-string options."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TYPESPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "TYPESPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "A type specifier the option's value should satisfy.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform LISPOBJ's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for LISPOBJ.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to a LISPOBJ value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "TYPESPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new lispobj option.
- SHORT-NAME is the option's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the option's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the option's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable.
  It defaults to nil.
- TYPESPEC is a type specifier the option's value should satisfy.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "TYPESPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) string option.
- LONG-NAME is the option's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the options's description.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- TYPESPEC is a type specifier the option's value should satisfy.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The PATH class.
This class implements options whose values are (colon-separated lists of)
pathnames."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PATH-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "PATH-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The path type.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-COMPONENT-NULL-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPONENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return true if COMPONENT is either null or :unspecific.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTORY-PATHNAME-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return true if PATHNAME denotes a directory.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform PATH's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for PATH.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Split PATH into a list of directories.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to a PATH value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new path option.
- SHORT-NAME is the option's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the option's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the option's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable.
  It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- TYPE is the pathname type. It can be one of :file, :directory, :file-list,
  :directory-list or nil meaning that everything is allowed.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) path option.
- LONG-NAME is the option's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the options's description.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENV-VAR is the option's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- TYPE is the pathname type. It can be one of :file, :directory, :file-list,
  :directory-list or nil meaning that everything is allowed.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "ENUM-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The ENUM-BASE abstract class.
This class provides support for options including enumerated values."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The set of possible values.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ENUM-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ENUM-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ENUM-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The ENUM class.
This class implements options whose values belong to a set of keywords."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform ENUM's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for ENUM.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to an ENUM value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new enum option.
- SHORT-NAME is the option's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the option's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the option's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENUM is the set of possible values.
- ENV-VAR is the option's associated environment variable.
  It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FALLBACK-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) enum option.
- LONG-NAME is the option's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the options's description.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENUM is the set of possible values.
- ENV-VAR is the option's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- FALLBACK-VALUE is the option's fallback value (for missing optional
  arguments), if any.
- DEFAULT-VALUE is the option's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "SWITCH-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENUM-BASE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The XSWITCH class.
This class merges the functionalities of switches and enumerations.
As such, the negated syntax is available for extended xswitches."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The set of possible non-boolean values.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRINGIFY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Transform XSWITCH's VALUE into an argument.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check that VALUE is valid for XSWITCH.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ARGUMENT to an XSWITCH value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new xswitch.
- SHORT-NAME is the xswitch's short name (without the dash).
  It defaults to nil.
- LONG-NAME is the xswitch's long name (without the double-dash).
  It defaults to nil.
- DESCRIPTION is the xswitch's description appearing in help strings.
  It defaults to nil.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENUM is the set of possible non-boolean values.
- ENV-VAR is the xswitch's associated environment variable.
  It defaults to nil.
- DEFAULT-VALUE is the xswitch's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-INTERNAL-XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ARGUMENT-TYPE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DEFAULT-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new internal (Clon-specific) xswitch.
- LONG-NAME is the xswitch's long-name, sans the 'clon-' prefix.
  (Internal options don't have short names.)
- DESCRIPTION is the xswitch's description.
- ARGUMENT-NAME is the option's argument name appearing in help strings.
- ARGUMENT-TYPE is one of :required, :mandatory or :optional (:required and
  :mandatory are synonyms).
  It defaults to :optional.
- ENUM is the set of possible non-boolean values.
- ENV-VAR is the xswitch's associated environment variable, sans the 'CLON_'
  prefix. It defaults to nil.
- DEFAULT-VALUE is the xswitch's default value, if any.
- When HIDDEN, the option doesn't appear in help strings.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The CONTAINER class.
This class is a mixin used in synopsis and groups to represent the program's
command-line hierarchy."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ITEMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ITEMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The items in the container.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Untraverse all CONTAINER items.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ITEM2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Check for name clash between CONTAINER's options and ITEM2's ones.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ITEM1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Check for name clash between ITEM1's options and CONTAINER's ones.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHECK-NAME-CLASH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTAINER1" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      ((:NAME "CONTAINER2" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Check for name clash between CONTAINER1's options and CONTAINER2's ones.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return CONTAINER's help specification.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Canonicalize initialization arguments.
This involves:
- computing the :items initarg from the :item ones.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Perform name clash check on CONTAINER's items.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The GROUP class.
This class groups other groups, options or strings together, effectively
implementing hierarchical program command-line."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HEADER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HEADER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The group's header.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return GROUP's help specification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "HEADER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new group.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "%DEFGROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INTERNALP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HEADER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Define a new group.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFGROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HEADER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Define a new group.
KEYS are initargs to MAKE-GROUP (currently, only :header).
Each form in FORMS will be treated as a new :item.
The CAR of each form is the name of the operation to perform: TEXT, GROUP, or
an option class name. The rest are the arguments to the MAKE-<OP> function or
the DEFGROUP macro.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTION-CALL-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return true if STR looks like an option call.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARGUMENT-POPABLE-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION "Return true if the first CMDLINE item is an argument.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAYBE-POP-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
      (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL))
     :DOCUMENTATION "Pop OPTION's argument from CMDLINE if needed.
If so, store it in CMDLINE-ARGUMENT.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "RESTARTABLE-SPURIOUS-CMDLINE-ARGUMENT-ERROR" :PACKAGE-NAME
      "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Restartably throw a spurious-cmdline-argument error.
The error relates to the command-line use of OPTION called by NAME with
ARGUMENT.
BODY constitutes the body of the only restart available, discard-argument, and
should act as if ARGUMENT had not been provided.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "RESTARTABLE-INVALID-NEGATED-SYNTAX-ERROR" :PACKAGE-NAME
      "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Restartably throw an invalid-negated-syntax error.
The error relates to the command-line use of OPTION.
BODY constitutes the body of the only restart available,
use-short-call, and should act as if OPTION had been normally called by short
name.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CMDLINE-CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL))
     :DOCUMENTATION "Convert CMDLINE-ARGUMENT to VALUED-OPTION's value.
This function is used when the conversion comes from a command-line usage of
VALUED-OPTION, called by CMDLINE-NAME, and intercepts invalid-argument errors
to raise the higher level invalid-cmdline-argument error instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTARTABLE-CMDLINE-CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Restartably convert CMDLINE-ARGUMENT to VALUED-OPTION's value.
This function is used when the conversion comes from a command-line usage of
VALUED-OPTION, called by CMDLINE-NAME.

As well as conversion errors, this function might raise a
missing-cmdline-argument error if CMDLINE-ARGUMENT is nil and an argument is
required.

Available restarts are (depending on the context):
- use-fallback-value: return FALLBACK-VALUE,
- use-default-value: return VALUED-OPTION's default value,
- use-value: return another (already converted) value,
- use-argument: return the conversion of another argument.

Return two values: VALUED-OPTION's value and the actual value source.
The value source may be :cmdline, :fallback or :default.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RETRIEVE-FROM-LONG-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION "Retrieve OPTION's value from a long call.
CMDLINE-NAME is the name used on the command-line.
CMDLINE-ARGUMENT is a potentially already parsed cmdline argument.
Otherwise, CMDLINE is where to find an argument.
This function returns three values:
- the retrieved value,
- the value source,
- the new command-line (possibly with the first item popped if the option
  requires an argument).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-LONG-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-LONG-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-LONG-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-LONG-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "CMDLINE-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RETRIEVE-FROM-SHORT-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION "Retrieve OPTION's value from a short call.
CMDLINE-ARGUMENT is a potentially already parsed cmdline argument.
Otherwise, CMDLINE is where to find an argument.
This function returns three values:
- the retrieved value,
- the value source,
- the new command-line (possibly with the first item popped if the option
  requires an argument).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-SHORT-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-SHORT-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-SHORT-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-SHORT-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-ARGUMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
       NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Retrieve OPTION's value from a negated call.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NEGATABLE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-NEGATED-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENVIRONMENT-CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Convert ENV-VAL to VALUED-OPTION's value.
This function is used when the conversion comes from an environment variable
associated with VALUED-OPTION, and intercepts invalid-argument errors
to raise the higher level invalid-environment-value error instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV-VAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Read ENV-VAR's new value from standard input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTARTABLE-ENVIRONMENT-CONVERT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Restartably convert ENV-VAL to VALUED-OPTION's value.
This function is used when the conversion comes from an environment variable
associated with VALUED-OPTION.

Available restarts are:
- use-default-value: return VALUED-OPTION's default value,
- use-value: return another (already converted) value,
- use-argument: return the conversion of another argument,
- modify-env: modify the environment variable's value.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Retrieve OPTION's value from the environment.
ENV-VAL is the value stored in the associated environment variable.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUED-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Assert that ENV-VAL is not null.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RETRIEVE-FROM-ENVIRONMENT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ENV-VAL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Assert that ENV-VAL is not null.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SYNOPSIS*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :DOCUMENTATION "The current synopsis." :INITIAL-VALUE "NIL")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "THERE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Map FUNC over all options in THERE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Call FUNC on OPTION.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Call FUNC on OPTION.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Map FUNC over all containers or options in CONTAINER.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Map FUNC over all containers or options in CONTAINER.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Mark TRAVERSABLE as traversed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Mark TRAVERSABLE as traversed.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ELSEWHERE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Do nothing by default.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ELSEWHERE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Do nothing by default.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "THERE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Execute BODY with OPT bound to every option in THERE.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CONTAINER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The SYNOPSIS class.
This class handles the description of the program's command-line options."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSTFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "POSTFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "A postfix to the program synopsis.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SHORT-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SHORT-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The short pack string.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NEGATED-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "NEGATED-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The negated pack string.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POTENTIAL-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "POTENTIAL-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The potential pack string.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CLON-OPTIONS-GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "CLON-OPTIONS-GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The Clon options group.")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PROGRAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SYNOPSIS's help specification.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "POTENTIAL-PACK-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "THERE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return t if PACK is a potential pack in THERE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "POTENTIAL-PACK-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return t if PACK is a potential pack for SYNOPSIS.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "POTENTIAL-PACK-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return t if PACK is a potential pack for SYNOPSIS.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Prepare Clon specific options.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POTENTIAL-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SHORT-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NEGATED-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Compute SYNOSPSIS's short and negated packs.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSTFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "MAKE-DEFAULT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Make a new SYNOPSIS.
- POSTFIX is a string to append to the program synopsis, in case it accepts a
remainder.
- If MAKE-DEFAULT, make the new synopsis the default one.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFSYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "POSTFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "MAKE-DEFAULT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Define a new synopsis.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The FACE class." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face name.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VISIBLEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "VISIBLEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "Whether the face is visible.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LEFT-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "LEFT-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face left padding.
This property can take the following forms:
- <NUMBER>: the padding is relative to the enclosing face,
- SELF: the padding is set to wherever the face happens to be opened,
- (<NUMBER> ABSOLUTE): the padding is set in absolute value,
- (<NUMBER> :RELATIVE-TO <FACE-NAME>): the padding is set relatively to a
  parent face named FACE-NAME.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RIGHT-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "RIGHT-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The face right padding.
This property can take the following forms:
- <NUMBER>: the padding is relative to the enclosing face,
- SELF: the padding is set to wherever the face happens to be closed,
- (<NUMBER> ABSOLUTE): the padding is set in absolute value,
- (<NUMBER> :RELATIVE-TO <FACE-NAME>): the padding is set relatively to a
  parent face named FACE-NAME.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TOP-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "TOP-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face top padding.
This property can take the following forms:
- nil: the output can start right away,
- 0: the output should start on the next line,
- N>0: there should be N empty lines before the output.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The face bottom padding.
This property can take the following forms:
- nil: the next output can start right at the end of this face's,
- 0: the next output should start on the next line,
- N>0: there should be N empty lines before the next output.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ITEM-SEPARATOR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ITEM-SEPARATOR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The face item separator.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INTENSITY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INTENSITY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face intensity.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ITALICP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ITALICP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's italic status.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "UNDERLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "UNDERLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's underline level.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BLINK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "BLINK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's blink speed.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "INVERSEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "INVERSEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's inverse video status.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONCEALEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "CONCEALEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's concealed status.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CROSSED-OUT-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "CROSSED-OUT-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The face's crossed out status.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FRAMEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FRAMEDP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face's framed status.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FOREGROUND" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FOREGROUND" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face foreground.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BACKGROUND" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "BACKGROUND" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face background.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUBFACES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SUBFACES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face children.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "PARENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The face parent.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Add SUBFACE to FACE's subfaces and return it.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+HIGHLIGHT-PROPERTIES+" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :DOCUMENTATION "The highlight face properties." :INITIAL-VALUE
     "(IF (BOUNDP 'COM.DVLSOFT.CLON::+HIGHLIGHT-PROPERTIES+)
    (SYMBOL-VALUE 'COM.DVLSOFT.CLON::+HIGHLIGHT-PROPERTIES+)
    '(COM.DVLSOFT.CLON::INTENSITY COM.DVLSOFT.CLON::ITALICP
                                  COM.DVLSOFT.CLON::UNDERLINE
                                  COM.DVLSOFT.CLON::BLINK
                                  COM.DVLSOFT.CLON::INVERSEP
                                  COM.DVLSOFT.CLON::CONCEALEDP
                                  COM.DVLSOFT.CLON::CROSSED-OUT-P
                                  COM.DVLSOFT.CLON::FRAMEDP
                                  COM.DVLSOFT.CLON::FOREGROUND
                                  COM.DVLSOFT.CLON::BACKGROUND))")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SLOT-UNBOUND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "SLOT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Look up SLOT's value in FACE's parent if it's a highlight property.
If FACE has no parent, return nil.
For other properties, trigger an error.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACE-HIGHLIGHT-PROPERTY-SET-P" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return t if PROPERTY is set explicitely in FACE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FACE-HIGHLIGHT-PROPERTY-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return PROPERTY's value in FACE.
Since faces inherit highlight properties, the actual value might come from one
of FACE's ancestors.
if PROPERTY is not et, return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTACH-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NEW-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "COPY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION
     "Create a copy of FACE-TREE, attach it to FACE and return it.
Apart from the parenting information, the copied faces share slot values with
the original ones.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "name(s)" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return subface of FACE named NAME(S) or nil.
If a list of names is provided instead of a single one, follow a subface
branch matching those names to find the leaf face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "NAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BRANCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        ((:NAME "CAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "NAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))))
     :DOCUMENTATION
     "Return the leaf face from FACE'subbranch matching NAMES, or nil.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "NAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BRANCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        ((:NAME "CAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "NAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))))
     :DOCUMENTATION
     "Return the leaf face from FACE'subbranch matching NAMES, or nil.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Return FACE'subface named NAME, or nil.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SUBFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Return FACE'subface named NAME, or nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-BRANCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Search for a branch of faces named NAMES starting at FACE.
The branch is searched for as a direct subbranch of FACE, or as a direct
subbranch of FACE's ancestors.
If a branch is found, return its leaf face. Otherwise return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ERROR-ME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Search for a face named NAME starting at FACE.
The face is looked for as a direct subface of FACE (in which case it is simply
returned), or up in the hierarchy and by successive upper branches (in which
case it is copied and attached to FACE).
If ERROR-ME, trigger an error if no face is found; otherwise, return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENT-GENERATION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PARENT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return FACE's parent generation for PARENT-NAME.
That is, 1 if PARENT-NAME names FACE's parent, 2 if it names its grand-parent
etc. If PARENT-NAME does not name one of FACE's ancestors, trigger an error.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "BOLD" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "DISPLAY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIDDEN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "REVEALED" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Canonicalize initialization arguments.
This involves:
- computing the :subfaces initarg from the :face ones,
- handling convenience highlight properties.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SUBFACES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Check for unicity of FACE subfaces.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Fill in the parent slot of all subfaces.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DEFINITION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a FACE-CLASS face tree from DEFINITION.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Create a face named NAME.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Create a face named NAME.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "DEFINITION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION
     "Make a FACE-CLASS face tree from a list of face name and initargs.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "DEFINITION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION
     "Make a FACE-CLASS face tree from a list of face name and initargs.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RAW-FACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FACE-CLASS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Make a raw (boring yet functional) face tree.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The SHEET class.
This class implements the notion of sheet for printing Clon help."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OUTPUT-STREAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "OUTPUT-STREAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION "The sheet's output stream.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The sheet's line width.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HIGHLIGHTP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HIGHLIGHTP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "Whether to highlight SHEET's output.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SFACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SFACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The sheet's sface tree.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COLUMN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "COLUMN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "The sheet's current column.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FRAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FRAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The stack of currently open frames.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUSH-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Push a new frame to SHEET's frames.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POP-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Pop SHEET's current frame.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SHEET's current frame.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAP-FRAMES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "REVERSE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Map FUNCTION over SHEET's frames.
If REVERSE, map in reverse order.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "HIGHLIGHT-PROPERTY-ECASE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROPERTY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create an ECASE form to extract PROPERTY's VALUE escape sequence.
Each clause looks like: (PROPERTY-NAME (VALUE-OR-VALUE-LIST ESCAPE-SEQUENCE)*).
The value-matching part will itself be enclosed in an ECASE expression.
In addition, the special clause syntax (BOOLEAN <PROPERTY-NAME> <YES> <NO>)
is a shortcut for: (PROPERTY-NAME ((on t) YES) ((off nil) NO)).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HIGHLIGHT-PROPERTY-INSTANCE-ESCAPE-SEQUENCE" :PACKAGE-NAME
      "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return highlight property INSTANCE's escape sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINC-HIGHLIGHT-PROPERTY-INSTANCES" :PACKAGE-NAME
      "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "INSTANCES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Princ highlight proeprty INSTANCES on SHEET's stream.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINC-CHAR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Princ CHAR on SHEET's stream and increment the column position.
The effect of printing CHAR must be exactly to move right by one column, so
control characters, as well as newlines and tabs are forbidden here.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINC-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Princ STRING on SHEET's stream and update the column position.
The effect of printing STRING must be exactly to move right by the
corresponding string length, so control characters, as well as newlines and
tabs are forbidden here.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINC-SPACES" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Princ NUMBER spaces to SHEET's stream and update the column position.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REACH-COLUMN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "COLUMN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Reach COLUMN on SHEET by princ'ing spaces.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The SFACE class.
An SFace is the association of a face and its raw sibling. The sibling is used
to create subfaces which would be missing from the original, user defined one."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The SFace's raw sibling.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RAW-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "COPY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))))
     :DOCUMENTATION "Return a new SFace based on SIBLING.
This function does not consider SIBLING as a face tree:
only face properties are copied; the face parent and children are set to nil.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "The FRAME structure.
This structure hold layout properties used for printing."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LEFT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "SFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM334" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "LEFT-MARGIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM335" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "RIGHT-MARGIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM336" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "HIGHLIGHT-PROPERTY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "The HIGHLIGHT-PROEPRTY-INSTANCE structure." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HIGHLIGHT-PROPERTY-INSTANCE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM374" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "VALUE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM375" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "The HIGHLIGHT-FRAME structure.
This structure holds both layout and highlight properties used for printing."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HIGHLIGHT-PROPERTY-INSTANCES" :PACKAGE-NAME "COM.DVLSOFT.CLON"
        :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "SFACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM412" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "LEFT-MARGIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM413" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "RIGHT-MARGIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM414" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "HIGHLIGHT-PROPERTY-INSTANCES" :PACKAGE-NAME "KEYWORD"
         :EXTERNALP T)
        (:NAME "DUM415" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SHEET's current sface or nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-LEFT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SHEET's current left margin.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SHEET's current right margin.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AVAILABLE-RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return SHEET's available right margin.
This margin is the first non-self margin specified by a frame. All inner self
frames can potentially write until the available right margin.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "OPEN-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Open FRAME on SHEET.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPEN-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Reach the frame's left margin and output its highlight properties.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPEN-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Reach the frame's left margin and output its highlight properties.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPEN-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Reach the frame's left margin.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OPEN-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Reach the frame's left margin.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLOSE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Close FRAME on SHEET.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION "Restore the upper frame's highlight properties.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "HIGHLIGHT-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)))
     :DOCUMENTATION "Restore the upper frame's highlight properties.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "FRAME-RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL)
        (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Reach FRAME's right margin if it has one.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLOSE-FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "FRAME-RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL)
        (:NAME "FRAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Reach FRAME's right margin if it has one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE-LINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Close all frames on SHEET's current line and go to next line.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN-LINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Open all frames on SHEET's current line.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN-NEXT-LINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Close SHEET's current line and open the next one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-STRING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Output STRING to SHEET.
STRING is output within the current frame's bounds.
Spacing characters are honored but newlines might replace spaces when the
output reaches the rightmost bound.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SEARCH-FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        ((:NAME "SIBLING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
         (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
        (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "ERROR-ME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "SUB-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SEARCH-FACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Find an sface starting at SFACE named NAME.
If the sface can't be found in SFACE's face tree, find one in SFACE's sibling
instead, and make a copy of it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAFE-LEFT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return either MARGIN or a safe value instead.
To be safe, margin must be greater than the current left margin and smaller
than the currently available margin.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAFE-RIGHT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LEFT-MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "MARGIN" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return either MARGIN or a safe value instead.
To be safe, margin must be greater than LEFT-MARGIN and smaller
than the currently available right margin.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Create a frame for SFACE and open it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLOSE-SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Close SHEET's current sface.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HELP-SPEC-ITEMS-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return t if at least one of ITEMS will print under SFACE.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Return t if HELP-SPEC will print under FACE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Return t if HELP-SPEC's items will print under HELP-SPEC's face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Return t if HELP-SPEC's items will print under HELP-SPEC's face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Basic help specifications (chars, strings etc) do print.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Basic help specifications (chars, strings etc) do print.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HELP-SPEC-WILL-PRINT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Get HELP-SPEC's bottom-padding under SFACE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Return the bottom padding of HELP-SPEC's face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Return the bottom padding of HELP-SPEC's face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Basic help specifications (chars, strings etc) don't provide a bottom padding.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-BOTTOM-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Basic help specifications (chars, strings etc) don't provide a bottom padding.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOP-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OTHER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOP-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-TOP-PADDING" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return top padding of the next item in ITEMS that will print under SFACE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-FACED-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SFACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "ITEMS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Print all help specification ITEMS on SHEET with SFACE.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Print HELP-SPEC on SHEET.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Open HELP-SPEC's face and print all of its items with it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Open HELP-SPEC's face and print all of its items with it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print STRING on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print STRING on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CHAR-VECTOR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SIMPLE-VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print CHAR-VECTOR on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CHAR-VECTOR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SIMPLE-VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print CHAR-VECTOR on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print CHAR on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Print CHAR on SHEET with the current face.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP-SPEC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-HELP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HELP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION
     "Open the toplevel help face and print HELP on SHEET with it.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTPUT-STREAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "AUTO" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Handle unset line width and AUTO highlight according to OUTPUT-STREAM.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-SFACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Read an sface tree from PATHNAME.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRY-READ-SFACE-TREE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Read an sface tree from PATHNAME if it exists or return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRY-READ-THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Read a theme from PATHNAME or PATHNAME.cth if it exists or return nil.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Finish initialization of SHEET.
This involves:
- computing SHEET's sface tree from THEME and SEARCH-PATH,
- initializing SHEET's toplevel sface's sibling to a raw face tree.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT-STREAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Make a new SHEET.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLUSH-SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SHEET" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Flush SHEET.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :DOCUMENTATION "The current context." :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTARTABLE-CMDLINE-JUNK-ERROR" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "JUNK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-ERROR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INTERACTIVEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "IF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "INTERACTIVEP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "*QUERY-IO*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "*ERROR-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "*PRINT-ESCAPE*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Print ERROR on *ERROR-OUTPUT*.
When INTERACTIVEP, print on *QUERY-IO* instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXIT-ABNORMALLY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Print ERROR on *ERROR-OUTPUT* and exit with status code 1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESTART-ON-ERROR" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Print ERROR and offer available restarts on *QUERY-IO*.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONTEXT-ERROR-HANDLER" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Execute BODY with CONTEXT's error handler bound for CONDITION.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "CMDLINE-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SOURCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CMDLINE-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NAME" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM242" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "OPTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM243" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "VALUE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM244" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "SOURCE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM245" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "The CONTEXT class.
This class represents the associatiion of a synopsis and a set of command-line
options based on it."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The program synopsis.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PROGNAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The program name as it appears on the command-line.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CMDLINE-OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "CMDLINE-OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The options from the command-line.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REMAINDER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION
       "The non-Clon part of the command-line.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The search path for Clon files.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The theme filename.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "The line width for help display.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION "Clon's output highlight mode.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ERROR-HANDLER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "ERROR-HANDLER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
         NIL))
       :WRITERS NIL :DOCUMENTATION
       "The behavior to adopt on option retrieval errors.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROGNAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))
     :DOCUMENTATION "Return CONTEXT's program name.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMAINDER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))
     :DOCUMENTATION "Return CONTEXT's remainder.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CMDLINE-OPTIONS-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))
     :DOCUMENTATION "Return T if CONTEXT has any unprocessed options left.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CMDLINE-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))
     :DOCUMENTATION "Return T if CONTEXT has anything on its command-line.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "POSTFIX" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return the postfix of CONTEXT's synopsis.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHORT-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return the short pack of CONTEXT's synopsis.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NEGATED-PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return the negated pack of CONTEXT's synopsis.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLON-OPTIONS-GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Return the Clon options group of CONTEXT's synopsis.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "POTENTIAL-PACK-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Return t if PACK (a string) is a potential pack in CONTEXT.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAPOPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Map FUNC over all options in CONTEXT synopsis.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNTRAVERSE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
     :DOCUMENTATION "Untraverse CONTEXT synopsis.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HELP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
      ((:NAME "ITEM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
      ((:NAME "OUTPUT-STREAM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "SEARCH-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
      ((:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "THEME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
      ((:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "LINE-WIDTH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)))
      ((:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       ((:NAME "HIGHLIGHT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
        (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))))
     :DOCUMENTATION "Print CONTEXT's help.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-OPTION-BY-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Search for option with either SHORT-NAME or LONG-NAME in CONTEXT.
When such an option exists, return two values:
- the option itself,
- the name that matched.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-OPTION-BY-ABBREVIATION" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PARTIAL-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Search for option abbreviated with PARTIAL-NAME in CONTEXT.
When such an option exists, return two values:
- the option itself,
- the completed name.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "PARTIAL-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Search for an option in CONTEXT.
The search is done with SHORT-NAME, LONG-NAME, or PARTIAL-NAME.
In case of a PARTIAL-NAME search, look for an option the long name of which
begins with it.
In case of multiple matches by PARTIAL-NAME, the longest match is selected.
When such an option exists, return wo values:
- the option itself,
- the name used to find the option, possibly completed if partial.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEARCH-STICKY-OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "NAMEARG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Search for a sticky option in CONTEXT, matching NAMEARG.
NAMEARG is the concatenation of the option's short name and its argument.
In case of multiple matches, the option with the longest name is selected.
When such an option exists, return two values:
- the option itself,
- the argument part of NAMEARG.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETOPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
      (:NAME "SHORT-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Get an option's value in CONTEXT.
The option can be specified either by SHORT-NAME, LONG-NAME, or directly via
an OPTION object.
Return two values:
- the retrieved value,
- the value's source.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETOPT-CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))
     :DOCUMENTATION "Get the next command-line option in CONTEXT.
When there is no next command-line option, return nil.
Otherwise, return four values:
- the option object,
- the option's name used on the command-line,
- the retrieved value,
- the value source.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MULTIPLE-VALUE-GETOPT-CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SOURCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the next command-line option in CONTEXT. and evaluate BODY.
OPTION, NAME and VALUE are bound to the values returned by GETOPT-CMDLINE.
BODY is executed only if there is a next command-line option.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-CMDLINE-OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "SOURCE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Evaluate BODY over all command-line options in CONTEXT.
OPTION, NAME and VALUE are bound to each option's object, name used on the
command-line and retrieved value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-LONG-NAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Read an option's long name from standard input.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-CALL" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NEGATED" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Read an option's call or pack from standard input.
If NEGATED, read a negated call or pack. Otherwise, read a short call or pack.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION "Parse CMDLINE.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PUSH-CMDLINE-OPTION" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Push a new CMDLINE-OPTION created with BODY onto PLACE.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PUSH-RETRIEVED-OPTION" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CMDLINE-VALUE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T))
     :DOCUMENTATION "Retrieve OPTION from a FUNC call and push it onto PLACE.
- FUNC must be either :short or :negated,
- CMDLINE-VALUE is a potentially already parsed option argument,
- CMDILNE is where to find a potentially required argument.")
    (:TYPE :MACRO :SYMBOL (:NAME "DO-PACK" :PACKAGE-NAME NIL :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OPTION" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "PACK" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Evaluate BODY with OPTION bound to each option from PACK.
CONTEXT is where to look for the options.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
      ((:NAME "MAKE-CURRENT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Make a new context.
- SYNOPSIS is the program synopsis to use in that context.
  It defaults to *SYNOPSIS*.
- CMDLINE is the argument list (strings) to process.
  It defaults to a POSIX conformant argv.
- If MAKE-CURRENT, make the new context current.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP NIL))
     :DOCUMENTATION "Execute BODY with *context* bound to CONTEXT."))
   :EXTERNAL-SYMBOLS
   ((:NAME "*CONTEXT*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "+RELEASE-MAJOR-LEVEL+" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF"
     :EXTERNALP NIL)
    (:NAME "+RELEASE-STATUS+" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF" :EXTERNALP
     NIL)
    (:NAME "NICKNAME-PACKAGE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-XSWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-LISPOBJ" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "DO-CMDLINE-OPTIONS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "DUMP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "REMAINDER" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MULTIPLE-VALUE-GETOPT-CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON"
     :EXTERNALP T)
    (:NAME "MAKE-GROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "DEFSYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "+RELEASE-MINOR-LEVEL+" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF"
     :EXTERNALP NIL)
    (:NAME "MAKE-STROPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "VERSION" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF" :EXTERNALP NIL)
    (:NAME "*SYNOPSIS*" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-SYNOPSIS" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "+RELEASE-NAME+" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF" :EXTERNALP
     NIL)
    (:NAME "CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-ENUM" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "PROGNAME" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "CMDLINE-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-SWITCH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-PATH" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "DEFGROUP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "EXIT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "GETOPT-CMDLINE" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "+RELEASE-STATUS-LEVEL+" :PACKAGE-NAME "COM.DVLSOFT.CLON.ASDF"
     :EXTERNALP NIL)
    (:NAME "MAKE-FLAG" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "WITH-CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "CMDLINE-OPTIONS-P" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "GETOPT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "HELP" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)
    (:NAME "MAKE-TEXT" :PACKAGE-NAME "COM.DVLSOFT.CLON" :EXTERNALP T)))))
