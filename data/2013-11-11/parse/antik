
(:TYPE :SYSTEM :NAME "antik" :AUTHOR "Liam M. Healy" :MAINTAINER NIL :VERSION
 NIL :LICENCE "GPL v3" :DESCRIPTION
 "A library providing a foundation for computational mathematics, science, and engineering."
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ITERATE" "ALEXANDRIA" "SPLIT-SEQUENCE" "CL-PPCRE" "CFFI" "TRIVIAL-GARBAGE"
  "STATIC-VECTORS" "DRAKMA")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "ANTIK" :FULL-NAME "ANTIK" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL (:NAME "MKSTR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a string out of the printed representations of the arguments.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "SYMB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a symbol out of the printed representations of the arguments.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANTIK-SYMBOL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SINGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Test list for one element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-SAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "POST-FUNCTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "If all elements are the same, that value and T are returned; if
   not, nil and nil are returned.  The post-function is applied to the
   common value before returning the answer if there is one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STREAM-TO-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TERMINATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TERMINATE-IF" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Fill a string with the contents of the stream.  Stop when an EOF
   is encountered, or when the terminating character :terminator,
   which is discarded, is reached, or the function :terminate-if
   is satisfied on the character, which is returned to the stream.
   Only one of :terminator and :terminate-if should be specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LISTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TYPE-EQUALITY*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "`((SEQUENCE ,@#'EQUAL) (STRING ,@#'STRING-EQUAL) (T ,@#'EQL))")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PYTHAGOREAN-SUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Sum the squares of the arguments.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PYTHAGOREAN-COMPLEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "sqrt(1-x^2)")
    (:TYPE :MACRO :SYMBOL (:NAME "LENGTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-LEAF" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TREE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Map onto the leaves (non-list) of the tree.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "HANDLING-COMPLEX-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESTART" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "A handler to make the complex number.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAN-WARNING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ARITHMETIC-ERRORS-RETURN-NAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Return a NaN for a variety of arithmetic errors.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CREATION-FORM-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NON-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "If we are printing readably, then rely on printed form
   to create the new object.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "A form that creates the object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-MAKE-LOAD-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJECT-TYPE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Defmethod the make-load-form assuming creation-form exists.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "If the CL-defined specials are defined appropriately, print readably
   and return T, otherwise, return NIL.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*USE-READABLE-PRINT-FORM*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION
     "Use the readable print form in creation-form if available."
     :INITIAL-VALUE "T")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SERIALIZE-BINDING" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Generate a form that when loaded will redefine the object
   and bind the variable to it.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PEDAGOGICAL*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "A list of categories of intermediate values
   that should be printed during calculation."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PEDAGOGICAL-STREAM*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "Stream to output information." :INITIAL-VALUE "T")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PEDAGOGICAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SEE-INTERMEDIATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LABEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "If keyword is in *pedagogical*, then print returned value of form,
   and return it; otherwise, just evaluate the form and return.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SEE-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SKIPPING-COMPUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "FORMAT-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "If keyword is in *pedagogical*, then print returned value of form,
   and return it; otherwise, just evaluate the form and return.
   If skipping-compute is true, forms are evaluated left to right,
   whether or not the keyword is in *pedagogical*.
   If it is false, they are only evaluated if keyword is in *pedagogical*, 
   and the last one is returned from this form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SHOWING" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "KEYWORD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STATUS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "ON" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Set the showing of intermediate values.")
    (:TYPE :GENERIC :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Make number into an object similar to like, or
                   if like is a number type, into that type.")
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GCONSTANT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GCONSTANT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PI" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GCONSTANT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PI" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CONVERTED-NUMBERS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "LIKE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SYMBOLS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Addition of generalized or regular numbers.")
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Addition of generalized or regular numbers with an
   arbitrary number of arguments.")
    (:TYPE :GENERIC :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Subtraction/negation of generalized or regular numbers, internal.
    Users call -.")
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Subtraction of generalized or regular numbers.")
    (:TYPE :GENERIC :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Multiplication of generalized or regular numbers.")
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Multiplication of generalized or regular numbers with an
   arbitrary number of arguments.")
    (:TYPE :GENERIC :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Division of generalized or regular numbers, internal.
    Users call /.")
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "/" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Division of generalized or regular numbers for an
   arbitrary number of arguments.")
    (:TYPE :MACRO :SYMBOL (:NAME "INCF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REF" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DELTA" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "DECF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REF" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DELTA" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "SQRT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The square root of the generalized or regular number.")
    (:TYPE :GENERIC :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The sine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The cosine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The tangent of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*RADIAN*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "1")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RADIAN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "From the number x, return the representation of an angle in radians.")
    (:TYPE :GENERIC :SYMBOL (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The arcsine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The arccosine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DEFAULT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ZERO-ENOUGH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The arctangent of the generalized or regular number.  If  absolute value of the arguments are below zero-enough, default is returned.")
    (:TYPE :METHOD :SYMBOL (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1)
      ((:NAME "DEFAULT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0)
      ((:NAME "ZERO-ENOUGH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 64
        (:NAME "DOUBLE-FLOAT-EPSILON" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1)
      ((:NAME "DEFAULT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0)
      ((:NAME "ZERO-ENOUGH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 64
        (:NAME "DOUBLE-FLOAT-EPSILON" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "EXPONENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Raise the number to the exponent.")
    (:TYPE :METHOD :SYMBOL (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EXPONENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EXPONENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The natural exponent e^num of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The natural logarithm of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The absolute value.")
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The hyperbolic sine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The hyperbolic cosine of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The hyperbolic tangent of the generalized or regular number.")
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "RATIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NUMBCOMP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Function for number comparison.  If this function is
   defined for a generalized number and returns an object for which all
   comparison functions such as <, >, etc. are defined,
   then all comparison functions will automatically be defined
   for that object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NUMBCOMP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NUMBCOMP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTIARG-COMPARISON" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extend a comparison operator from two to any number of arguments.")
    (:TYPE :FUNCTION :SYMBOL (:NAME ">=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Greater than or equal.")
    (:TYPE :METHOD :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME ">" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Greater than")
    (:TYPE :METHOD :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "<=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Less than or equal.")
    (:TYPE :METHOD :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "<" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Less than.")
    (:TYPE :METHOD :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Numeric equal")
    (:TYPE :METHOD :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Positive.")
    (:TYPE :METHOD :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Negative")
    (:TYPE :METHOD :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Zero.")
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "FLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Greatest multiple of divisor less than number.")
    (:TYPE :METHOD :SYMBOL (:NAME "FLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "FLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "ROUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Nearest multiple of divisor to number.")
    (:TYPE :METHOD :SYMBOL (:NAME "ROUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ROUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIVISOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Signum(a).")
    (:TYPE :METHOD :SYMBOL (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "MIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "MAX" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-MONADIC" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OPERATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Define a method of the operation that operates elementwise on a grid.")
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-DYADIC-SCALAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OPERATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "METHOD" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "LEFT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Define a method of the operation that operates elementwise on a grid.")
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BASE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1)
      ((:NAME "DEFAULT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0)
      ((:NAME "ZERO-ENOUGH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 64
        (:NAME "DOUBLE-FLOAT-EPSILON" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EARMUFFS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "Create special variable symbols with asterisks at the beginning and end of names. If t, a synonym will be created that is the same symbol without the earmuffs."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CATEGORIES*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "Categories of parameters, which correspond to packages." :INITIAL-VALUE
     "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PARAMETERS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "A list of the parameters (canonical names only) as symbols."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SYMBOLS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "Table of synonyms and corresponding canonical parameter names."
     :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-PACKAGE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PACKAGE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "If the non-nil package designator designates an existing package, return it. If it designates a non-existent package, make and return it. Otherwise, return the current package.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CANONICAL-PARAMETER-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-SYMBOL-TO-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REDEFINE-ACTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "WARNING" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Add the synonym to the hash table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-SYMBOLS-TO-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Add the synonyms to the hash table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-PARAMETER-SYMBOL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CATEGORY-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Find the registered parameter.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-SYMBOL-CREATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create and export the symbol used to represent the parameter, including possibly making the appropriate package (category).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-POST-DEFINITION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VALUE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VALUE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "TYPE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ATTRIBUTE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define the parameter (global special variable) with the given name.  It will be defined in the package named by category (which will be created if necessary), and exported from it.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VALUE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "TYPE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ATTRIBUTE-SUPPLIED-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define the parameter (global special variable) with the given name.  It will be defined in the package named by category (which will be created if necessary), and exported from it.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PARAMETER-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Get or set the parameter value.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PARAMETER-CHECK-FUNCTION*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "'TYPEP")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-PARAMETER-TYPE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SET-PARAMETER-VALUE*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the parameter value, checking that the value is of the correct type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SET-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the parameter value, checking that the name is legitimate and the value is of the correct type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SET-PARAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAMES-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Set the values of the parameters.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-PARAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NAME-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Provide local scope for parameter values, and possibly bind new values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARAMETER-HELP" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Print all information known about the parameter.  If category is nil (default), names of all categories are printed.  If name is nil, all defined parameters in that category are printed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PARAMETERS-FROM-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "HEADERP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "*PARAMETERS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "PREFIX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PAR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "From the list of lists, define the parameters.  The optional header should have column names.  These column names include 'category 'name 'value 'type 'description ('value and 'default mean the same thing).  Any column names not specified will receive a default value.  Any values in the cells that are empty will receive a default value.  Any columns given with a header not on the list will be ignored.  Category must already exist.")
    (:TYPE :VARIABLE :SYMBOL (:NAME "STYLE" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "Style of format, plain (nil), LaTeX (:tex), or plain but (possibly) shortened (:short or a number).  If :short a short form will be used if available, if a fixnum is supplied, the short form will be used if available and the space available is less than the space taken by the long form.  If :readable, a form that is readable to CL is produced, if :reproducible a readble form is produced, and on reading object will be recreated exactly.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "NF-OPTION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Get/set the nf option named.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NF-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "The format produced will be readable to Lisp.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SET-NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Set the numerical formatting options.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NAME-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Set the options for all nf calls within body to inherit.")
    (:TYPE :MACRO :SYMBOL (:NAME "PRINCN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Format output for numerical objects.  If stream is nil, use *standard-output*.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NF-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Format output for numerical objects to a new string.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "SIGNIFICANT-FIGURES" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION "The number of significant figures formatted for numbers.
   If nil, formatting of numbers is done using :intpart-digits
   and, if a float, :fracpart-digits.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "INTPART-DIGITS" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "The minimum space allowed for the whole-number part of numbers
   when :significant-figures is nil.  If this is larger than
   the actual number of digits, pad to the left with spaces.
   If this value is nil, allow enough space to accomodate the number.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "PRINT-SIGN" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Whether leading `+' is printed.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "RATIO" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "VECTOR-FORMAT" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Rank-1 grids (vectors) are formatted as rows, columns or as linear
  combination of coordinate unit vectors.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "COMPONENTS" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Names of vector components to use :vector-format is :coordinate-unit-vectors.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "TEX-ELEMENT-SEPARATOR" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "What to put between vertically separated elements for LaTeX.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "TEX-DECIMAL-ALIGN" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Align columns of numbers on decimal point in LaTeX.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "VERTICAL-ELEMENT-SEPARATOR" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "What to put between vertically separated elements for plain style.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "HORIZONTAL-ELEMENT-SEPARATOR" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "What to put between horizontally separated elements for plain style.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VECTOR-COMPONENT-NAMES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The name of the ith vector component.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NF-GRID" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Format the grid.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NF-VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Format the one dimensional grid.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENSTYLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OUTER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Parentheses should be used in this case.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NF-MATRIX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Format the two dimensional grid, or the one dimensional grid horizontally or vertically.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OBJECT-AS-NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Define a new object exactly as the current nf options print an existing one.  This function can be used for example to define a number exactly as the rounded print format of another one.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CL-READABLE-NF" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "For use in #'print-object methods that rely on nf methods for
   printing: they should print readably if cl:*print-escape* or
   cl:*print-readably* say to.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CODE-BLOCK-EVAL-NF-OPTIONS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION "NF options for LaTeX output generated from parameters."
     :INITIAL-VALUE "'(:SIGNIFICANT-FIGURES 5)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "EXPORT-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*CODE-BLOCK-EVAL-NF-OPTIONS*" :PACKAGE-NAME "ANTIK" :EXTERNALP
        T)))
     :DOCUMENTATION
     "The form value formatted for tex.  Useful in embedded org-mode code block evaluation as e.g.
   src_lisp[:results raw]{(export-value xyz)}.")
    (:TYPE :MACRO :SYMBOL (:NAME "VAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VARIABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*CODE-BLOCK-EVAL-NF-OPTIONS*" :PACKAGE-NAME "ANTIK" :EXTERNALP
        T)))
     :DOCUMENTATION
     "The parameter value formatted for tex.  Useful in embedded org-mode code block evaluation as e.g.
   src_lisp[:results raw]{(val P1020 B)}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ORG-TABLE-LINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Format the list for a line of an org-mode table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ORG-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST-OF-LISTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Format the table.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-SIGN*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "Always print the sign, even if +." :INITIAL-VALUE "NIL")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+CL-FLOAT-FORMAT-DEFAULT-FRACTIONAL-DIGITS+" :PACKAGE-NAME "ANTIK"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ANTIK:- (ANTIK:LENGTH (FORMAT NIL \"~f\" PI)) 2)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-FLOAT-FIXED" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INTPART-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 2)
      ((:NAME "FRACPART-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 3)
      ((:NAME "INTPART-FILL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) #\ )
      ((:NAME "PRINT-SIGN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*PRINT-SIGN*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Format a floating-point number with the specified number of digits in the
   fractional (and optionally) integer parts, optionally filling the integer part.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FORMAT-FLOAT-SIGNIFICANT-FIGURES*" :PACKAGE-NAME "ANTIK"
      :EXTERNALP T)
     :DOCUMENTATION "The default number of significant figures in
   floating point number output."
     :INITIAL-VALUE "5")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-FLOAT-SWITCH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIGNIFICANT-FIGURES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*FORMAT-FLOAT-SIGNIFICANT-FIGURES*" :PACKAGE-NAME "ANTIK"
        :EXTERNALP T))
      ((:NAME "PRINT-SIGN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*PRINT-SIGN*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "SPECIFIC-EXPONENT-MARKER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Format a floating point number for printing in a readable way.  If specific-exponent-marker is T use the 'd', 'f' etc. to mark the exponent, instead of 'e'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-FLOAT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIGNIFICANT-FIGURES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*FORMAT-FLOAT-SIGNIFICANT-FIGURES*" :PACKAGE-NAME "ANTIK"
        :EXTERNALP T))
      (:NAME "INTPART-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "FRACPART-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "INTPART-FILL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) #\ )
      ((:NAME "PRINT-SIGN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*PRINT-SIGN*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Format a floating point number with control over the digits that are printed.
   If significant-figures is specified, the formating is as if by ~g, and the given
   number of significant figures are formated if using plain float formatting,
   one extra significant digit is formated if in scientific notation.  If
   intpart-digits/fracpart-digits are specified, formatting will always be
   in plain format, with the number of digits to the left and right controlled
   by these parameters.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "FRACPART-DIGITS" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "The number of digits to the right of the decimal floating point numbers
   when :significant-figures is nil.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "FULL-PRECISION" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "If non-nil, ignore :fracpart-digits, :intpart-digits, :significant-figures,
   and format floating point numbers to full precision.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Returns two values: the string and prints-as-zero.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-MATLAB-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "NUMBER-PER-LINE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 3))
     :DOCUMENTATION "Format a matrix row to be read by Matlab.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "The system of units used for output. If NIL, don't print units. Standard systems of units may be altered with #'make-sysunits.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "TIMEPOINT-LINEAR" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Convert timepoints to a linear scale if
  specified as a list of epoch time and unit.  For example
  computer{'(*midnight-2000* :year)} will present time points as a
  real number of calendar years, including fractions, such as
  3.3223.  If the value is a symbol representing a unit, like :year,
  the epoch is taken as 0.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "IGNORE-DAY-ONLY" :PACKAGE-NAME "NF" :EXTERNALP T) :DOCUMENTATION
     "Datime specified day-only will still format with time.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "DATE-TIME-SEPARATOR" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "Character to place between date and time in ISO8601 datime output.
   If nil, use a space, if T, use #T.")
    (:TYPE :VARIABLE :SYMBOL (:NAME "DEGREES" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION
     "Whether to format degrees as decimal degees or degrees, minutes, seconds.")
    (:TYPE :VARIABLE :SYMBOL (:NAME "TIME" :PACKAGE-NAME "NF" :EXTERNALP T)
     :DOCUMENTATION "How to format time intervals:
   :tud = ISO8601 time-unit designator (like P10H7M23.726979085813582S)
   :alternative = ISO8601 alternate (like P10:07:23.726979085813582)
   nil = with the unit for time given by :system-of-units
           (like #_36443.72697908581_S.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-INFORMATION*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "Properties of each unit of measure and physical dimension."
     :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "UNIT-PROPERTY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "PROPERTY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find or set the particular property of the unit or dimension.
   Package of unit does not matter.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT-OR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The dimension as a dimel (list of exponents)
   from a unit name or dimension name.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SICONVERSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Ratio of the given unit to the SI unit of the same dimension.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "The synonyms of the unit.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CANONICAL-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT-OR-SYN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The full unit name from a synonym.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CANONICAL-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "How a unit is printed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LONG-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "How the unit or attribute should be printed on the screen.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHORT-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "How the unit or attribute should be printed on the screen.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEX-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "How the unit or attribute should be printed in TeX.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSUNITS-DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSUNITS-UNITNAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIMEL-MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "A metric on the dimel.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SYSUNITS-METRIC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIMEL-INDEX-ITEM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLFL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "INT1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "INT2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Flexible floor; if int2 is zero,
   returns nil if int1 is nonzero or t if it is.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VECFLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VEC1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VEC2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the lowest flexible floor of the two vectors of integers, and the
   remainder vec1-gcd*vec2.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Find a minimal combination of named units in the designated system of units
   that matches the dimel.  Returns a list (unit-name exponent remainder-dimel).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-UNIT-DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "FIND-SYSUNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYSUNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Find the named system of units.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SYSUNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a system of units by naming the units and optionally naming a system of units which serves as a base; if it is T, then use the current system-of-units.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SYSTEM-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AUGEMENTED-SYSTEM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define a system of units with the given name and units, possibly by augmenting the named system of units.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Set the default system of units to the specified system.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "When executing the body, change the system of units by naming the units. If system-of-units is non-nil, augment that system with the specified units; if it is T, augment the current system of units.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SI-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Use the SI system of units in the body.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BASIS-DIMENSIONS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "The basis dimensions, in order." :INITIAL-VALUE
     "'(ANTIK:LENGTH ANTIK:TIME ANTIK:MASS ANTIK:TEMPERATURE ANTIK:CURRENT
               ANTIK:SUBSTANCE ANTIK:LUMINOSITY ANTIK:MONEY ANTIK:ANGLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NEW-DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIMELP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Argument is a scalar dimel.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CHECK-DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIMEL-BASIS-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the index if this dimel is a basis dimension/unit.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME-EXPONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a dimension exponent list (dimel) and SI conversion factor
   from name-expons of the form unitname1 expon1 unitname2 expon2...
   Symbols may be units or physical dimension names; the
   SI conversion value will be nil if a physical dimension is used.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OP-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMENSION0" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DIMENSION1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OPERATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "+" :PACKAGE-NAME "ANTIK" :EXTERNALP T))))
     :DOCUMENTATION
     "Operate on the dimensions, either dimels or vectors of dimels.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNIT-REMOVE-ILLEGAL-CHARS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Remove the characters that are illegal in unit and dimension
   names because they are used in unit math.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-UNIT-SEXP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find dimel from a unit expression; the symbols in this expression may
   be either unit names or dimension names.  Return the dimel and
   the conversion; if the expression contains a physical dimension (like 'time)
   as opposed to a unit of measure (like 'second), then the conversion
   is nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RATIONALIZE-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Find a common denominator of the unit exponents and
   return the integer dimel with the common denominator.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-UE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "From the dimel (list of dimension exponents),
   make an unit-exponent list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-UNIT-SEXP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SCALAR-DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "From the dimel (list of dimension exponents),
   make an unit sexp.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-UNIT-EXPR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT-EXPR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Find the unit name or expression.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT-SEXP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STYLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a string in a customary form for unit expressions from the sexp.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEF-DIMENSIONP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Define the predicate and type to check a particular dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFINE-BASIS-DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Define the dimel for the dimensions in *basis-dimensions*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFINE-DERIVED-DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME-DEF-PAIRS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define the dimel given in the name-def-pairs, where the definition
   is in terms of any already-defined physical dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-UNAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-UNAMES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "NAMES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFINE-UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DEFINITION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION
     "Define the unit.  If the definition is a number then the dimension
   information will be extracted from dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFINE-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "UNIT-DEF-SYN-PNM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define the units given.  The second argument is a list of lists, each
   consisting of a unit name, its definition, and a list of synonyms.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNIT-SYMBOL-MACROS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "Unit symbols that were defined with unit-symbol-macro."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "UNIT-SYMBOL-MACRO" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MULTIPLIER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1)
      (:NAME "PREFIX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Define a symbol macro to expand to the given unit.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-PHYSICAL-CONSTANT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "DOCSTRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define the variable to be the physical dimension quantity given, and also make it a unit of measure.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PQ-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Dimel for the physical dimension quantity.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PQ-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PQ-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PQ-MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Numerical magnitude of a physical dimension quantity.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PQ-MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PQ-MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Physical dimensions for object are a scalar.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A quantity with a dimension and possibly a unit,
  e.g. length or meter."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "PQ-MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "PQ-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PHYSICAL-QUANTITY-P" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MAG" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DIMEL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ZERO-IS-DIMENSIONLESS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION "Numbers with zero magnitude are made dimensionless."
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNIT-EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Make a physical dimension quantity (PDQ).  Allow for the
   possiblity that magnitude is already a PDQ; in this case, check
   that the physical dimension is correct, and pass it on.  This can
   be used as a way of assigning default units to a number. Unitless dimensions (e.g., 'length) are
   interpeted as units in the :system-of-units.  If scalar-dimension is T and
   magnitude is not a scalar, the unit-expression applies to each
   element of the magnitude.  Otherwise it must be a grid or list of
   the shape as the magnitude.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-ZERO" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "UNIT-EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-UE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNIT-EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make the physical dimension quantity with a unit expression from a number or grid; if a grid, the same units apply to all elements.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-GRID-NEW" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIT-EXPRESSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SAME-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-ELEMENT-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-CONTENTS-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      (:NAME "SPECIFICATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Construct a pdq grid given one of:
   1) initial-contents of pdqs and specification
   2) initial-contents of magnitudes, unit-expressions,
       and optionally specification (else same as magnitudes')
   3) initial-element being a pdq, and specification
   4) specification and optionally same-units.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PQ-GRID" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNIT-EXPRESSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a physical dimension quantity out of a grid where the elements may have different units.  This may modify the contents of the magnitude grid.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PQ-GRIDP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SCALAR-UNITS-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FLATTEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Map the function of a pdq onto the nested lists of pdqs, optionally flattening.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-GRID-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))))
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "REST-SPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-ELEMENT-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-CONTENTS-P" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-GRID-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "REST-SPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "INDEX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "INDEX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "RANK" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PDQ-GRID-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SPECIFICATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a specification for a PDQ grid from the specification of its magnitude.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FUNCALL-DYADIC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RETURN-OTHER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "RETURN-OTHER-MONADIC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Call the math function on two arguments a and b, possibly
   converting one argument from a number to a generic number like the
   other.  If return-other is a function designator, funcall
   return-other-monadic on the other argument if one passes that
   test.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEGREE-SYMBOL*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "The degree symbol." :INITIAL-VALUE "\"o\"")
    (:TYPE :CONSTANT :SYMBOL (:NAME "2PI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "(ANTIK:* 2 PI)")
    (:TYPE :TYPE :SYMBOL (:NAME "LENGTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "MASS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "TEMPERATURE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "CURRENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "SUBSTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "LUMINOSITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "MONEY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "AREA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "VOLUME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "POWER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "ENERGY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "VELOCITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "MOMENTUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "ANGULAR-MOMENTUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "ACCELERATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "PRESSURE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "DENSITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "CHARGE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "ELECTRIC-POTENTIAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "CAPACITANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "RESISTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "CONDUCTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "MAGNETIC-FIELD" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "MAGNETIC-FLUX" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "INDUCTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "FREQUENCY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "DOSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "UNIT-EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the dimel representation of the dimensions from a string, symbol, or unit sexp.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-PQ-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Parse a string or symbol specifying units into lists.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-DIMENSION-OR-TYPE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return T if the object is of the type specified, and, if a physical-quantity, is of the physical-dimension specified in type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ERRORP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ZEROS-HAVE-ANY-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ZERO-IS-DIMENSIONLESS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION "T if one of these cases hold:
    - obj is a pdq and units have the same dimension as obj,
    - obj is zero and zeros-have-any-dimension is T,
    - obj and units represent a dimensionless quantity,
    - obj and units are grids of the same length, and for 
      each pair of corresponding elements, one of the above is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EQUAL-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ERRORP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ZEROS-HAVE-ANY-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ZERO-IS-DIMENSIONLESS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "MATCH-DIMENSIONLESS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "If the pdq are equal physical dimension, return that dimel.
   If one quantity is zero and zeros-have-any-dimension, return the
   dimel of the other and disregard whether they're the same physical
   dimension.  If y represents a dimensionless quantity,
   and match-dimensionless is true, return the dimel of x.
   Return two values: the dimel and whether it is scalar dimension.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIMEL-OR-NOT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Find the dimel for this object (a physical dimension quantity or a dimel), or
   return the dimensionless dimel.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EQUAL-DIMENSIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ZERO-IS-DIMENSIONLESS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ZERO-IS-DIMENSIONLESS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION
     "If all elements of the list have the same physical dimension, return that dimel.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Print the physical-quantity using nf.")
    (:TYPE :GENERIC :SYMBOL (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Get the numerical value and the units of the physical dimension quantity.  Returns the magnitude, the units, and whether units are the same for each element of a sequence or grid.")
    (:TYPE :METHOD :SYMBOL (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PQVAL-ALLSAME-SEQUENCE-COLLAPSE*" :PACKAGE-NAME "ANTIK"
      :EXTERNALP NIL)
     :DOCUMENTATION "If a sequence passed to pqval has all the same units,
   collapse to one unit specification."
     :INITIAL-VALUE "T")
    (:TYPE :METHOD :SYMBOL (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PQVAL-SEQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SCALAR-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Format the pieces of the physical dimension quantity.  If formatting of
   unit alone is desired, value should be nil.")
    (:TYPE :MACRO :SYMBOL (:NAME "WITH-PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PHYSICAL-QUANTITIES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Ensure that the named physical dimension quantities are of the right dimensions, or convert them from plain numbers using the current system of units as specified by (nf-option :system-of-units).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-PQ-FROM-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Read the next number and interpret as a pdq, if units is non-nil.
   The special 'pointer gives the starting location to read
   and is updated after the read.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-LOAD-FORM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REMOVE-UNITS-SYSUNITS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "System of units with which physical dimension quantities will be converted to plain numbers."
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "UNDIMENSIONED-SHOULD-NOT-BE-HERE" :PACKAGE-NAME "ANTIK" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "A debugging macro to help trap quantities that did not
   properly have a #'pqwu wrapping them.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITHOUT-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "NF-OPTION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
          (:NAME "SYSTEM-OF-UNITS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compute everything within the dynamic scope without physical units.
   Physical dimension quantities should be wrapped with #'pqwu.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compute everything within the dynamic scope with physical units, 
   when there is an outer dynamic scope with without-units.
   Remove units from returned value of body.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "PQWU" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "If we are dynamically inside without-units, return the magnitude.
   If not, return the object as-is.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REDIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "MAGNITUDE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "UNIT-EXPRESSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Apply units that were stripped off a quantity.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DIMENSIONLESS-CALL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ANSWER-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Call a function that is incapable of handling physical dimension quantities.  This macro will consistently remove the units from all arguments, then create the answer with the specified units.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Remove the angular dimension; the number is not changed
   and therefore the angles are radians.  This function is
  necessary as proper dimensional arithmetic ignores angles as a
  dimension.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "GRID-CALL-NEXT-METHOD" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEN" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1)
      ((:NAME "DEFAULT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0)
      ((:NAME "ZERO-ENOUGH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 64
        (:NAME "DOUBLE-FLOAT-EPSILON" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NUM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "EXPON" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "FLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NUMBCOMP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-TIME-PARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIMESPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parse time specification extended format (Time of day, Sec 5.3.1),
   time-unit designator (Time intervals, Sec 5.5.4.2.1),
   or alternative format (Time intervals, Sec 5.5.4.2.2).  Returns
   a list of numbers (second minute hour).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-DATE-PARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATESPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONVERT-TWO-DIGIT-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parse date specification in complete representation Section 5.2.1.1,
   reduced precision Section 5.2.1.2, truncated representation 5.2.1.3,
   or time-unit designator Section 5.5.4.2.1. Returns a list of numbers
   (day month year).  If a field is defaulted, it will return 0, even
   though this may make no sense for month or day.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-PARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONVERT-TWO-DIGIT-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parse combinations of date and time of the day, Section 5.4, and
   attempt to make sense of either date or time as well.  Returns
   a list of 6 numbers (second minute hour day month year), and
   a list of one of :date, :time, or both, indicating which was
   specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHOW-DATIME-FIELD" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The first of args is to be shown if it is not zero (:tud format) or
   args are not all zeros (nil format).")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ISO8601-FRACTIONAL-SECONDS-DIGITS*" :PACKAGE-NAME "ANTIK"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "Default number of digits to print for fractional part of seconds."
     :INITIAL-VALUE "3")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FRACTIONAL-SECONDS-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ISO8601-FRACTIONAL-SECONDS-DIGITS*" :PACKAGE-NAME "ANTIK"
        :EXTERNALP NIL))
      ((:NAME "T-SEPARATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "IF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TEXSTYLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) " "
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "If format is :TUD use the time-unit designator format; if nil,
   use the extended format as described in 5.5.4.2.2.  If
   fractional-seconds-digits
   is in an integer, always display that many digits in the
   seconds fraction, even if zero.  T-separator specifies the character
   used for separating the date part from the time part; if T, it is #T,
   if NIL, a space, if a character, that character.")
    (:TYPE :CLASS :SYMBOL (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Specification of date and time, without an assigned scale." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ISO8601" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "ISO8601" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DATIME-READABLE*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION "Whether to print datimes readably." :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T))))
     :DOCUMENTATION "Make the dtspec arguments.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Read the ISO8601 specification and make a dtspec.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SECONDS-PER-MINUTE+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "60")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+MINUTES-PER-HOUR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "60")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+HOURS-PER-DAY+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "24")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+DAYS-PER-MONTH+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "30")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+MONTHS-PER-YEAR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "12")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SECONDS-PER-HOUR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(* ANTIK:+MINUTES-PER-HOUR+ ANTIK:+SECONDS-PER-MINUTE+)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SECONDS-PER-DAY+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(* ANTIK:+SECONDS-PER-HOUR+ ANTIK:+HOURS-PER-DAY+)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SECONDS-PER-MONTH+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(* ANTIK:+SECONDS-PER-DAY+ ANTIK:+DAYS-PER-MONTH+)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+SECONDS-PER-YEAR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(* ANTIK:+SECONDS-PER-MONTH+ ANTIK:+MONTHS-PER-YEAR+)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-TWO-DIGIT-YEAR-REFERENCE-YEAR*" :PACKAGE-NAME "ANTIK"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "If NIL, use the current year as the reference year for deciding in which century
   a two-digit year belongs.  Otherwise, use the specified year."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-TWO-DIGIT-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REFERENCE-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "OR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "*DEFAULT-TWO-DIGIT-YEAR-REFERENCE-YEAR*" :PACKAGE-NAME "ANTIK"
         :EXTERNALP NIL)
        ((:NAME "NTH-VALUE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 5
         ((:NAME "DECODE-UNIVERSAL-TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
           T)
          ((:NAME "GET-UNIVERSAL-TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP
            T)))))))
     :DOCUMENTATION
     "Convert two-digit year to four digit by taking the year that
   is closest to the reference year.  Reference year defaults
   to the current year.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-PART" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "PART" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIMEPARSE-MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIMEPARSE-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-SECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TIMEPARSE-MAJORD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "SECOND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TIMEPARSE-MINORD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SECOND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0)
      ((:NAME "MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FN-MAJOR-TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Apply the function to the most major non-zero component of the timeparse.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RELATIVE-DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DTSPEC1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DTSPEC2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION
     "Find the largest time unit where the two dtspecs differ, and
   return the difference of that unit and the unit name.
   If the dtspecs are the same, return 0 :second.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME-RELATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "RELATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Apply the relation to all the datime arguments and return
   what it returns.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME>" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME>=" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME<" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME<=" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME=" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JULIAN-DAY-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODIFIED" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "FRACTIONAL-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Julian day number at noon of the day, or modified Julian day at
   the start of the day, independent of timescale.
   Algorithm given in
   http://www.pauahtun.org/CalendarFAQ/cal/node3.html#SECTION003151000000000000000.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DTSPEC-FROM-JULIAN-DAY-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "JULIAN-DAY-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODIFIED" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Find the dtspec for the given (modified) Julian day.
   Algorithm given in
   http://www.pauahtun.org/CalendarFAQ/cal/node3.html#SECTION003151000000000000000.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FRACTIONAL-SECONDS-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ISO8601-FRACTIONAL-SECONDS-DIGITS*" :PACKAGE-NAME "ANTIK"
        :EXTERNALP NIL)))
     :DOCUMENTATION "Convert the time interval to a timeparse.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "TUD" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "FRACTIONAL-SECONDS-DIGITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*ISO8601-FRACTIONAL-SECONDS-DIGITS*" :PACKAGE-NAME "ANTIK"
        :EXTERNALP NIL)))
     :DOCUMENTATION
     "Represent the time interval in ISO8601:2000(E) Section 5.5.4.2.1 format, representation of time-interval by duration only.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-INTERVAL-TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Convert the timeparse to a time interval.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO8601-PARSE-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Parse the time interval in ISO8601:2000(E) Section 5.5.4.2.1 format, representation of time-interval by duration only.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-TIME-INTERVAL-TEST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Test cases for parser.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NORM-DENORM-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Normalize an angle, process it, and denormalize it back to the
   original cycle count.  This is useful for e.g. Kepler's equation,
   where the normalized angle is needed to for the algorithm to
   converge properly, but the full cycles are needed for f & g functions.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ANGLE-FIND" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SINE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "COSINE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SIGN-SINE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "SIGN-COSINE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ANGLE-CLONE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the angle, with accurate quadrant, from just about anything.
   Returns a value between -pi and pi.
   sine-angle: The sine of the angle
   cosine-angle: The cosine of the angle
   sign-sine-angle: If sine-angle is not supplied, the sign of sine
     will be assumed to be the sign of this number.
   sign-cosine-angle: If cosine-angle is not supplied, the sign of cosine
     will be assumed to be the sign of this number.
   angle-clone: If the sine-angle or the cosine-angle is not supplied,
     its sign will be the same as the sign of that function applied
     to this angle.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANGLE-AS-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NORMALIZE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Convert the angle to a time (interval), where one revolution is a
   complete day.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHECK-ANGLE-LIMITS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "Whether to check that the angle pieces are within the normal
   range of numbers, e.g., number of seconds is < 60."
     :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANGLE-DMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DEGREES-OR-HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "MINUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "SECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Read the angle as degrees (or hours), minutes and seconds.
   With hours=T computes the hour angle, where a minute is 1/60 of
   15 degrees instead of 1/60 of 1 degree.  This option is the inverse of 
   angle-as-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-AS-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIME-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Compute the angle from the time,
   the major field is hours with 24 hours = 1 revolution.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DMS-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     "The angle as a list degrees, minutes, seconds.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-DMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "FIRST-SEP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) "~a "
        (:NAME "*DEGREE-SYMBOL*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
      ((:NAME "SECOND-SEP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) "' ")
      ((:NAME "FINAL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) "\""))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-DMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Hook for #'nf to format as degrees minutes seconds when option :degrees is specified as :dms.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Normalizes the angle to (in radians) -pi to pi
   or 0 to 2pi (positive = t).
   Two values are returned: the normalized angle, and the number
   of full revolutions that should be added to the normalized angle
   to recreate the original angle.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SEQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TEX-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "How to print in TeX.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DESCRIPTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Description of the attribute.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "COMPONENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Components of vector.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CONSTRAINTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Constraint on acceptable values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "APPLY-CONSTRAINTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Apply the appropriate constraints, if any.
   This may constitute computing some mathemtical function of the
   number and using the result, or signalling an error.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALL-ATTRIBUTES*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "All defined attributes." :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SYNONYMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "PRINT-NAMES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "COMPONENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "CONSTRAINTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      ((:NAME "MAKE-FUNCTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Define an attribute of a physical system.  The name should
   not be the same as a physical dimension or unit name.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTRIBUTEP" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SYMBOL-OR-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "This is a defined attribute, or list of attributes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMAT-ATTRIBUTE-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SEPARATE-COMPONENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "INCLUDE-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "INCLUDE-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Format the attribute name, and possibly the units.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Set the value of a particular attribute for this state.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "List the attributes defined for this state.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SHOW-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Show the physical state attributes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHOW-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SHOW-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ORIGINAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a new state with the same attributes as an existing state.
   The attributes specified are computed if needed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ORIGINAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Make a new state by mapping a function of (value attribute-name)
   on existing attributes.  If function is NIL, use existing value.
   A function, if specified, should return the new value.  If attributes
   is NIL, use all the defined attributes of the original state.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PHYSICAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTRIBUTES-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "From the given attributes and values, copy the requested attributes
   from the existing state if they exist, then define new attribute values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NEW-PHYSICAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTRIBUTES-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a new physical state with the given attribute values.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-SFG*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :DOCUMENTATION
     "The default state function generator." :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*RETURN-FORMULA*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION "Show the formula used in computing the attribute."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATE-FORMULA" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE-CANONICAL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "APPLY-TO-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*DEFAULT-SFG*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION
     "Find the formula for the attribute given the known quantities in state.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Get the value of the attribute from the state table.
   If it is not present, compute it if possible with state-function-generator.
   If state-function-generator is nil, do not compute.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*DEFAULT-SFG*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STATE-FUNCTION-GENERATOR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*DEFAULT-SFG*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TIMEPOINT-PRINT-SCALE*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION "Convert timepoints to this timescale for printing.
   If nil, use the internal time scale (UTC)."
     :INITIAL-VALUE ":UTC")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TIMEPOINT-PRINT-SCALE-NAME*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :DOCUMENTATION
     "When T, print the scale (UTC, TAI, etc.) with a timepoint."
     :INITIAL-VALUE "NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     "Specification of a point in time, including a scale." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Make an object representing a point in time.  Either dtspec
   or timeparse should be specified, and scale should be specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TIMEPOINT-NOCONVERT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DAY-ONLY-SPECIFIED" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Make an object representing a point in time.  Either dtspec,
   or timeparse should be specified, and scale should be specified.")
    (:TYPE :METHOD :SYMBOL (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "TP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-LOAD-FORM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLUT-TO-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CLUT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Compute the timepoint from the CLUT.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RELATIVE-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "BASE-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ABSOLUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Compute a time using base-time as a reference.
   Either can be a timepoint or time pdq, and the result
   can be chosen either way by specifying absolute T or NIL
   respectively.  The returned value is the time specified by
   the second argument, but referenced to base-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-LIMITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TIME1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TIME2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REFERENCE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "NOW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION
     "Make sense of time1 and time2 in absolute terms. If one is absolute,
   and the other relative, it is presumed to be relative to the other. 
   If they are both relative, they are presumed to be relative to reference.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POS-YMDHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "UTC" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Read a timepoint from a string with specification for the position in the string of each component; pos-ymdhms is a list of year, month, day, hour, minute, and second as sequence numbers for the integers in the string.  Scale is the timescale (zone) as a string or symbol.  If pos-ymdhms has only three components, or only a date is provided, the timepoint created will be specifed as day-only.  The default reads an ISO8601 string like 1999-03-30T12:33:45.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TIMEZONE-OFFSETS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "Timezones that may be used to input timepoints."
     :INITIAL-VALUE
     "'((:ACDT . #dPT10h30m) (:ACST . #dPT9h30m) (:ACT . #dPT8h) (:ADT . #dPT-3h)
  (:AEDT . #dPT11h) (:AEST . #dPT10h) (:AFT . #dPT4h30m) (:AKDT . #dPT-8h)
  (:AKST . #dPT-9h) (:AMST . #dPT5h) (:AMT . #dPT4h) (:ART . #dPT-3h)
  (:ARAB . #dPT3h) (:ARABIAN . #dPT4h) (:AWDT . #dPT9h) (:AWST . #dPT8h)
  (:AZOST . #dPT-1h) (:BDT . #dPT8h) (:BIOT . #dPT6h) (:BIT . #dPT-12h)
  (:BOT . #dPT-4h) (:BRT . #dPT-3h) (:BANGLADESH . #dPT6h) (:BST . #dPT1h)
  (:BTT . #dPT6h) (:CAT . #dPT2h) (:CDT . #dPT-5h) (:CEDT . #dPT2h)
  (:CEST . #dPT2h) (:CET . #dPT1h) (:CHADT . #dPT13h45m) (:CHAST . #dPT12h45m)
  (:CIST . #dPT-8h) (:CKT . #dPT-10h) (:CLT . #dPT-4h) (:COST . #dPT4h)
  (:COT . #dPT-5h) (:CST . #dPT-6h) (:CHINA . #dPT8h) (:CENTAUST . #dPT9h30m)
  (:CT . #dPT8h) (:CVT . #dPT-1h) (:CXT . #dPT7h) (:CHST . #dPT10h)
  (:EAST . #dPT-6h) (:EAT . #dPT3h) (:ECT . #dPT-4h) (:ECUADOR . #dPT-5h)
  (:EDT . #dPT-4h) (:EEDT . #dPT3h) (:EET . #dPT2h) (:EST . #dPT-5h)
  (:FKST . #dPT-3h) (:FKT . #dPT-4h) (:GALT . #dPT-6h) (:GET . #dPT4h)
  (:GFT . #dPT-3h) (:GILT . #dPT12h) (:GIT . #dPT-9h) (:GMT . #dPT)
  (:GST . #dPT-2h) (:GYT . #dPT-4h) (:HADT . #dPT-9h) (:HAST . #dPT-10h)
  (:HKT . #dPT8h) (:HMT . #dPT5h) (:HST . #dPT-10h) (:ICT . #dPT7h)
  (:IDT . #dPT3h) (:IRKT . #dPT8h) (:IRST . #dPT3h30m) (:IST . #dPT5h30m)
  (:IRISH . #dPT1h) (:ISRAEL . #dPT2h) (:JST . #dPT9h) (:KRAT . #dPT7h)
  (:KST . #dPT9h) (:LHST . #dPT10h30m) (:LINT . #dPT14h) (:MAGT . #dPT11h)
  (:MDT . #dPT-6h) (:MIT . #dPT9h30m) (:MSD . #dPT4h) (:MSK . #dPT3h)
  (:MST . #dPT-7h) (:MALAYSIA . #dPT8h) (:MYANMAR . #dPT6h30m) (:MUT . #dPT4h)
  (:MYT . #dPT8h) (:NDT . #dPT-2h30m) (:NFT . #dPT11h30m) (:NPT . #dPT5h45m)
  (:NST . #dPT-3h30m) (:NZDT . #dPT13h) (:NZST . #dPT12h) (:OMST . #dPT6h)
  (:PDT . #dPT-7h) (:PETT . #dPT12h) (:PHOT . #dPT13h) (:PKT . #dPT5h)
  (:PST . #dPT-8h) (:PHILLIPINE . #dPT8h) (:RET . #dPT4h) (:SAMT . #dPT4h)
  (:SAST . #dPT2h) (:SBT . #dPT11h) (:SCT . #dPT4h) (:SGT . #dPT8h)
  (:SLT . #dPT5h30m) (:SST . #dPT-11h) (:SINGAPORE . #dPT8h) (:TAHT . #dPT-10h)
  (:THA . #dPT7h) (:UYST . #dPT-2h) (:UYT . #dPT-3h) (:VET . #dPT-4h30m)
  (:VLAT . #dPT10h) (:WAT . #dPT1h) (:WEDT . #dPT1h) (:WEST . #dPT1h)
  (:WET . #dPT) (:WST . #dPT8h) (:YAKT . #dPT9h) (:YEKT . #dPT5h))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TIMESCALES*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :DOCUMENTATION
     "All known time scales." :INITIAL-VALUE
     "(APPEND '(\"utc\" \"tai\" \"gps\" \"ut1\") (MAPCAR #'FIRST ANTIK::*TIMEZONE-OFFSETS*))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TIMESCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TIMEPOINT-ISO8601" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "UTC" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Read the timepoint specified as an ISO8601 string.  In contrast
   to #'read-timepoint, this accepts the various rearrangements
   permitted by ISO8601 (see documentation for #'iso8601-parse,
   but does not accept miscellaneous separator symbols.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-US-DATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION
     "Read dates and times in customary US format MM/DD/YYYY; times may
   be included as well if day-only is nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-US-DATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Write dates and times in customary US format MM/DD/YYYY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Parse the datime or time interval string and create a timepoint object.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PREHISTORIC*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE "(ANTIK:READ-TIMEPOINT \"1900-01-01T00:00:00\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOY-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Return the doy and year for this datime.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TO-YYDDD" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Generate the twoline element form of datime.  Note this
   is not year-2000 compliant!")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FROM-YYDDD" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "YY-OR-YYDDD" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DDD" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "UTC" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "MINUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0)
      ((:NAME "SECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 0))
     :DOCUMENTATION "Read datime from yyddd.ddddd or yy, ddd.ddddd format.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FROM-JD" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "JD" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODIFIED" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      ((:NAME "SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "UTC" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Find the timepoint from the Julian date.
   Assumes a fixed number of seconds per day (86400).")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MONTH-NAMES*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(\"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MONTH-NAMES-FULL*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(\"January\" \"February\" \"March\" \"April\" \"May\" \"June\" \"July\" \"August\" \"September\"
  \"October\" \"November\" \"December\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JD-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "START-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "END-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ORG" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Write out a JD table in TeX, e.g. for class.
   If d is the day of the month, add d+0.5 to the table
   to get the J2000 day number for that day.
   If csv is T, use csv for import into spread sheet.
   IF nil, use TeX.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MIDNIGHT-2000*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ANTIK:READ-TIMEPOINT \"2000-01-01T00:00:00\")")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "REFERENCE-POINT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "*MIDNIGHT-2000*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
      ((:NAME "UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "YEAR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Compute the timepoint on a linear (number) scale.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLUT-TO-TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CLUT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Convert clut, CL's unfortunately-named `universal-time', to timeparse.
   No scale is provided; it is a uniform time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPARSE-TO-CLUT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION
     "Convert timeparse to clut, CL's unfortunately-named `universal-time'.
   No scale is provided; it is a uniform time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-UNIFORM-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Add the time-interval in seconds to dtspec.
   Warning! assumes uniform time, with the same number of seconds per minute
   (like TAI, not UTC).")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UTC-LEAP-SECOND-TABLE*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "Table of UTC leap second insertion times, with the UTC-TAI offset.
    See http://www.boulder.nist.gov/timefreq/pubs/bulletin/leapsecond.htm."
     :INITIAL-VALUE
     "(LIST (CONS (ANTIK::READ-DTSPEC \"1972-01-01T00:00:00\") 10)
      (CONS (ANTIK::READ-DTSPEC \"1972-07-01T00:00:00\") 11)
      (CONS (ANTIK::READ-DTSPEC \"1973-01-01T00:00:00\") 12)
      (CONS (ANTIK::READ-DTSPEC \"1974-01-01T00:00:00\") 13)
      (CONS (ANTIK::READ-DTSPEC \"1975-01-01T00:00:00\") 14)
      (CONS (ANTIK::READ-DTSPEC \"1976-01-01T00:00:00\") 15)
      (CONS (ANTIK::READ-DTSPEC \"1977-01-01T00:00:00\") 16)
      (CONS (ANTIK::READ-DTSPEC \"1978-01-01T00:00:00\") 17)
      (CONS (ANTIK::READ-DTSPEC \"1979-01-01T00:00:00\") 18)
      (CONS (ANTIK::READ-DTSPEC \"1980-01-01T00:00:00\") 19)
      (CONS (ANTIK::READ-DTSPEC \"1981-07-01T00:00:00\") 20)
      (CONS (ANTIK::READ-DTSPEC \"1982-07-01T00:00:00\") 21)
      (CONS (ANTIK::READ-DTSPEC \"1983-07-01T00:00:00\") 22)
      (CONS (ANTIK::READ-DTSPEC \"1985-07-01T00:00:00\") 23)
      (CONS (ANTIK::READ-DTSPEC \"1988-01-01T00:00:00\") 24)
      (CONS (ANTIK::READ-DTSPEC \"1990-01-01T00:00:00\") 25)
      (CONS (ANTIK::READ-DTSPEC \"1991-01-01T00:00:00\") 26)
      (CONS (ANTIK::READ-DTSPEC \"1992-07-01T00:00:00\") 27)
      (CONS (ANTIK::READ-DTSPEC \"1993-07-01T00:00:00\") 28)
      (CONS (ANTIK::READ-DTSPEC \"1994-07-01T00:00:00\") 29)
      (CONS (ANTIK::READ-DTSPEC \"1996-01-01T00:00:00\") 30)
      (CONS (ANTIK::READ-DTSPEC \"1997-07-01T00:00:00\") 31)
      (CONS (ANTIK::READ-DTSPEC \"1999-01-01T00:00:00\") 32)
      (CONS (ANTIK::READ-DTSPEC \"2006-01-01T00:00:00\") 33)
      (CONS (ANTIK::READ-DTSPEC \"2009-01-01T00:00:00\") 34))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-TO-TAI-LEAP-SECOND-TABLE-CONVERSION" :PACKAGE-NAME "ANTIK"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "UTC-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generate a tai leap second table from the utc leap second table.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TAI-LEAP-SECOND-TABLE*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "Table of TAI leap second insertion times, with the UTC-TAI offset."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAST-LEAP-SECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Find the last leap second on whatever time scale table.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-TAI-TO-UTC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TAI-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Given any TAI time, compute the corresponding UTC time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-UTC-TO-TAI" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "UTC-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Given any UTC time, compute the corresponding TAI time.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GPS-REFERENCE-TIME*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "Timepoint at which GPS time agreed with UTC;
   see Kaplan, Understanding GPS, Section 2.7.2."
     :INITIAL-VALUE "(ANTIK:READ-TIMEPOINT \"1980-01-06T00:00:00\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GPS-TAI*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :DOCUMENTATION
     "Time interval in seconds between GPS time and TAI time.
   Add this amount to the GPS time to get TAI."
     :INITIAL-VALUE "(-
 (ANTIK::TIMEPARSE-TO-CLUT
  (ANTIK:TIMEPARSE (ANTIK::CONVERT-UTC-TO-TAI ANTIK::*GPS-REFERENCE-TIME*)))
 (ANTIK::TIMEPARSE-TO-CLUT (ANTIK:TIMEPARSE ANTIK::*GPS-REFERENCE-TIME*)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-GPS-TO-UTC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GPS-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Given any timepoint on the GPS scale, find the UTC time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-UTC-TO-GPS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "UTC-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Given any timepoint on the UTC scale, find the GPS time.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UT1-UTC-TABLE*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "Hash table of differences UT1-UTC by J2000 day number.
   Use (read-op-file) to load."
     :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UT1-UTC-FIRST-ESTIMATED*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION "First estimated UT1-UTC value in *ut1-utc-table*.
   This serves as a marker for the age of the eop.dat file."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-EOP-FILE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Read the earth orientation parameters from USNO.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*REAL-UT1-UTC*" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :DOCUMENTATION
     "If NIL, UT1 will be taken the same as UTC." :INITIAL-VALUE "T")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-UTC-UT1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIMESPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TO-UT1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Convert UTC time scale to or from UT1 by adding/subtracting
   the appropriate fractional second.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-TIME-SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "NEW-SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Convert time from one scale to another.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*J2000-EPOCH*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(ANTIK:READ-TIMEPOINT \"2000-01-01T12:00:00\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CLUT-J2000-TAI*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "J2000 epoch in CL's `universal-time' time linearization, in the TAI scale."
     :INITIAL-VALUE "(ANTIK::TIMEPARSE-TO-CLUT
 (ANTIK:TIMEPARSE (ANTIK:CONVERT-TIME-SCALE ANTIK::*J2000-EPOCH* :TAI)))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPOINT-J2000SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Seconds from the J2000 epoch, 2000-01-01T12:00:00UTC.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TIMEPOINT-J2000SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "J2000SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Make a timepoint from J2000sec.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "START-OF-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RELATIVE-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 0)
      ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       ((:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
        (:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))))
     :DOCUMENTATION "From the given datime, return the start of the given day,
   relative-day = 0: this day, -1: day before, +1 next day, etc.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SECONDS-PER-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Compute the number of seconds in the given day.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME-J2000DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Julian Day from J2000 epoch, and seconds from the start of the day.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "DAYS-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DATIME1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "DATIME2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Integer number of days separating the days.  Differs from datime-
   in that the time of day doesn't matter, just the day on which the two 
   datimes occur.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "DAYS+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DATIME" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INCREMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Add the number of days to the given datime.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME+" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
     :DOCUMENTATION "Add the time to the timepoint.  If time is a number,
   it is assumed to represent seconds.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATIME-" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DATIME1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The difference of the datimes, or subtract a time from a datime.")
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      ((:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
       (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMEPOINT-RELATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RELATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Do the two timepoints obey the relation?")
    (:TYPE :METHOD :SYMBOL (:NAME "<I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "<=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME ">=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "=I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T))
      ((:NAME "Y" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ANGLE-LAW-OF-COSINES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LENGTH-OPP" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "LENGTH-ADJ1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "LENGTH-ADJ2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Solve for the angle when lengths of a triangle are known.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRIME-FACTORS" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "ANTIK" :EXTERNALP T)) :DOCUMENTATION
     "Find the prime factors of the integer n.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VECTOR-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The short angle between a and b, and the rotation vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RIGHT-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Find an arbitrary right angle to the vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPLANAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VECT1-OR-MATRIX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VECT2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "VECT3" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The cosine of the angle between vect1 and the cross product of vect2 and vect3.
   This should be near zero if the vectors are coplanar.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COMBINATION-FUNCTION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "-" :PACKAGE-NAME "ANTIK" :EXTERNALP T))))
     :DOCUMENTATION "The length of the vector and the vector difference a-b.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-3VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Extract the first 3-vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SECOND-3VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VEC" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)) :DOCUMENTATION
     "Extract the second 3-vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COORDINATE-UNIT-VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LENGTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T) 3))
     :DOCUMENTATION "A coordinate unit vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "POLAR-TO-RECTANGULAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AZIMUTH" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ELEVATION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIUS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1.0)
      ((:NAME "SIGN1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Convert polar coordinates to rectangular coordinates.
   Argument sign1 should be set to -1 for accomodating topocentric azimuth,
   which is measured from North instead of South.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RECTANGULAR-TO-POLAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIGN1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Convert rectangular coordinates to polar coordinates.
   Argument sign1 should be set to -1 for accomodating topocentric azimuth,
   which is measured from North instead of South.
   Returns a list of azimuth, elevation, and radius, and the
   plane distance.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROTATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Create a rotation matrix in two dimensions.
   Passive rotation if passive is true, otherwise active.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROTATE-3D" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AXIS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Create a rotation matrix about the (0, 1, 2)
   axis in three dimensions.  Passive rotation
   if passive is true, otherwise active.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EULER-ANGLE-ROTATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ROT3A" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ROT1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ROT3B" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compute the matrix for a 3-1-3 rotation.  See Curtis (9.118).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TAIT-BRYAN-ANGLES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DCM" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the three angles psi, theta, phi of a 3-2-1 (Tait-Bryan)
   rotation for the direction cosine matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TAIT-BRYAN-ROTATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ROT1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ROT2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ROT3" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Compute the matrix for a 3-2-1 (yaw-pitch-roll) rotation.
   See Curtis (9.124).  This transforms a vector in the body
   frame into a vector in the external frame.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROTATE-3DAA" :PACKAGE-NAME "ANTIK" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ROTATION-AXIS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PASSIVE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Rotation about an arbitrary axis in 3D.
   See Goldstein, Poole, Safko (4.62) or
   http://mathworld.wolfram.com/RotationFormula.html.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUATERNION-EULER" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
      (:NAME "AXIS" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "The quaternion corresponding to a given pair of Euler parameters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EULER-QUATERNION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "QUATERNION" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "The Euler angle and axis for the quaternion.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUATERNION*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "Q1" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "Q2" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Quaternion multiplication.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTION-COSINE" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "Q" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compute the rotation (direction cosine) matrix (DCM) from the unit quaternion.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORMATTING-TEST-GRID" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "MATRIX" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
      (:NAME "PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Make a test grid for formatting.
   foreign-array: nil= CL array, T=foreign array
   matrix: nil = vector, T = matrix
   pq: nil = numerical grid, :scalar = all the same units, :mixed = different units.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALL-FORMATTING-TEST-GRIDS*" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :DOCUMENTATION
     "A set of grids for testing formatting, covering all combinations of
  arrays and foreign-arrays, vectors and matrices, and no units, same
  units, and mixed (different) units."
     :INITIAL-VALUE "(LIST (ANTIK::FORMATTING-TEST-GRID NIL NIL NIL)
      (ANTIK::FORMATTING-TEST-GRID NIL NIL :SCALAR)
      (ANTIK::FORMATTING-TEST-GRID NIL NIL :MIXED)
      (ANTIK::FORMATTING-TEST-GRID NIL T NIL)
      (ANTIK::FORMATTING-TEST-GRID NIL T :SCALAR)
      (ANTIK::FORMATTING-TEST-GRID NIL T :MIXED)
      (ANTIK::FORMATTING-TEST-GRID T NIL NIL)
      (ANTIK::FORMATTING-TEST-GRID T NIL :SCALAR)
      (ANTIK::FORMATTING-TEST-GRID T NIL :MIXED)
      (ANTIK::FORMATTING-TEST-GRID T T NIL)
      (ANTIK::FORMATTING-TEST-GRID T T :SCALAR)
      (ANTIK::FORMATTING-TEST-GRID T T :MIXED))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-GRID-FORMATTING" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GRID" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL))
     :DOCUMENTATION "Format the 1D grid with all different combinations."))
   :EXTERNAL-SYMBOLS
   ((:NAME "DECI-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATAMPERES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "J" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CANDELAS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATCOULOMBS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABHENRYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECILITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COSH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAYS-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ADD-ATTRIBUTE-TO-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OBJECT-AS-NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+SECONDS-PER-MINUTE+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DOLLARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OHM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ERG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROVOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RISE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ORG-TABLE-LINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TRILLION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GALLONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINE-UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BRITISH-THERMAL-UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECIMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COERCE-NIL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOGRAM-FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SPEEDOFLIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARC-MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SLUGS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PQVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRONVOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ROTATE-3D" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STERADIAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIWATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PQWU" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DYNESPERSQUARECENTIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATOMIC-MASS-UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKALITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLISECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORTNIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HUNDRED" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PRIME-FACTORS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MINIM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DISTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROYOUNCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOHERTZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTURIES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME-J2000DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUINTILLIONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCMINUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATAMP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LONG-TON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CUBIC-DECIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPERE-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATVOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARC-SECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLI-WATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "V" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ENERGY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LONG-TONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PSI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATT-HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ROTATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME<" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SECOND-3VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEASPOON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DMS-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEF-MAKE-LOAD-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FURLONGS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGAHERTZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOLITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIAMPS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COORDINATE-UNIT-VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TAIT-BRYAN-ANGLES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME>=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTIGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+SECONDS-PER-YEAR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAGNETIC-FIELD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIHENRYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGULAR-MOMENTUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GILLS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTOSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ZETTA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PERCENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SLUG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABCOULOMBS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NAUTICAL-MILE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TERA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGLE-AS-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SPEED-OF-LIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEASPOONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLOZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CAPACITANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TRANSPOSE-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "THZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STREAM-TO-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAGNETICFLUX" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EULER-ANGLE-ROTATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPEREHOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+MINUTES-PER-HOUR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "N" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WRITE-DMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DYNE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+MONTHS-PER-YEAR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PARAMETER-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PASCAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DTSPEC-FROM-JULIAN-DAY-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUND-FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MKSTR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WK" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAM-FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ISO8601-PARSE-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGA-ELECTRON-VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+DAYS-PER-MONTH+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SCRUPLES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROFARAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TERAHERTZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "START-OF-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "THOUSANDTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WRITE-US-DATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARITHMETIC-ERRORS-RETURN-NAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPOINT-J2000SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BRITISH-THERMAL-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEMTOSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "JOULE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HENRY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-TIMEPARSE-MINORD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*TIMESCALES*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CURRENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HENRYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BARNS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TESLAS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMU" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-STATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EARTH-GRAVITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABCOUL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARC-MINUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PYTHAGOREAN-COMPLEMENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "A" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CALORIES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPERES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAYS+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PHYSICAL-QUANTITY-P" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANOSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COERCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KPA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BUSHELS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACOSINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOGRAM-WEIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FOOT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME>" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "METER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FIRST-3VECTOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SEE-INTERMEDIATE-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TRILLIONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLI-WATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TERA-ELECTRON-VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACRE-FOOT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATOHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PETA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRIC-POTENTIAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIVOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COUL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "READ-TIMEPOINT-ISO8601" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MOMENTUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROHENRY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LIGHTYEARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COULOMB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "JULIAN-DAY-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COPY-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROAMPS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TONNES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMP-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PENNYWEIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "USEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPERE-HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-PARAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GEV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KELVIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCE-TROY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GALLON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGULARMOMENTUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINE-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TO-YYDDD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+HOURS-PER-DAY+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MINIMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKALITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUIDOUNCES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACRES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RODS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+SECONDS-PER-HOUR+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*DATIME-READABLE*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARUN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HUNDREDWEIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*TIMEPOINT-PRINT-SCALE-NAME*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RESISTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAINS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MOLES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SIEVERT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATOHM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HORSEPOWER-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGA-WATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINE-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKING-COMPLEX-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GAUSS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FATHOMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOHM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECALITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PARAMETER-WITH-ATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ORG-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UNITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINED-ATTRIBUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GROSS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROWATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HUNDREDTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "%" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTIMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CREATION-FORM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUNDSPERSQUAREINCH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATT-HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUIDOUNCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUID-OUNCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATFARADS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PARSECS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BQ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SERIALIZE-BINDING" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TANH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+SECONDS-PER-DAY+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SECS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUINTILLION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIME-INTERVAL-TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WEEK" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GILL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANOSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-SHOWING" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ZEPTO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BUSHEL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ROD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YOCTO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLOOR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCMIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BILLION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINE-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACCELERATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARC-SECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROAMPERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FTLB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGSTROM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MINUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SHORT-TONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*TIMEPOINT-PRINT-SCALE*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FATHOM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATANGENT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YOCTO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CONVERT-TIME-SCALE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NORMALIZE-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGAWATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "READ-US-DATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "INDUCTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRON-VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGA-WATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEF-DYADIC-SCALAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RANKINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EXA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TORR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "L" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGAHERTZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORMAT-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GHZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LIGHT-YEARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEF-MONADIC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PECKS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RADIAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KCAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PQ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUNDFORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO-ELECTRON-VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACRE-FEET" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROAMP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROY-POUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SHOW-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "<" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORTNIGHTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIBARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TESLA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DOSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIAMP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGA-WATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COPLANAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EARTH-MASS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROFARADS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ORBIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "INCHES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ASINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABFARAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FOOT-POUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ZETTA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "$" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LBS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATCOULOMB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO-CALORIE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KELVINS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANOMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME ">=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTIGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YOTTA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MLW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VELOCITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-NEW-PHYSICAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MHZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICOSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "READ-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KWH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FARADS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCMINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATT-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUADRILLIONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AREA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PARAMETER-HELP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PRESSURE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTI-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICOFARAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABAMP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RUN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MOLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAMWEIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CONSTRAINTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO-METER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TAIT-BRYAN-ROTATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EARTHMASS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VOLUME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NORM-DENORM-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "@" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLISEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-USER-PACKAGE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGLE-DMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MINUTES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PARAMETERS-FROM-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTILITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLATTEN-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SIGNUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HUNDREDWEIGHTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CLUT-TO-TIMEPOINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "JOULES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCES-TROY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SINH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RIGHT-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATTHOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-NF-OPTIONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*CODE-BLOCK-EVAL-NF-OPTIONS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FREQUENCY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PYTHAGOREAN-SUM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NAUTICAL-MILES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FOOT-POUNDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ASTRONOMICALUNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-SECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUARTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTURY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEX-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DENSITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BTUS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICOSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-PARAMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EXPT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TODAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NAUTICALMILES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCEFORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MOL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "METRICTON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO-CALORIES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAM-WEIGHT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-MINUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COULOMBS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HERTZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATVOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATAMPERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO-METERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATMOSPHERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FOOTPOUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "THOUSAND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SET-SYSTEM-OF-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECIGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "REDIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO-WATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NEWTONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "METERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "METRIC-TON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEMTO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCE-FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKAGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "INCF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AU" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATCOUL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAXWELLS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CONDUCTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUIDRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICOFARADS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FOOTPOUNDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABCOULOMB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "F" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATT-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PQ-ZERO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAGNETICFIELD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECALITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*FORMAT-FLOAT-SIGNIFICANT-FIGURES*" :PACKAGE-NAME "ANTIK"
     :EXTERNALP T)
    (:NAME "LONG-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROY-POUNDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARCSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOPASCALS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PEDAGOGICAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FT-LB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EXPORT-VALUE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CUP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YEARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SHORT-PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NMI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SIEMENS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEET" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGOHM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARISE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEMTOSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO-WATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACREFEET" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HORSEPOWER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATE-FORMULA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUID-OUNCES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRICPOTENTIAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "W" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABAMPERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FLUIDRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTOSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CUBIC-DECIMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PRINT-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OUNCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITH-SI-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "OHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "+SECONDS-PER-MONTH+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIME-LIMITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*DEFAULT-SFG*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGAWATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACRE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DYNES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABFARADS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POWER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "<=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORMAT-MATLAB-LIST" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATOMICMASSUNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HORSEPOWERHOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YARDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PHYSICAL-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CENTILITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POLAR-TO-RECTANGULAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIHENRY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "READ-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "US" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACOS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABVOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CALORIE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MASS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EXA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HALF-REVOLUTION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TONNE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BRITISHTHERMALUNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "S" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*RETURN-FORMULA*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ASIN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WEEKS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DOZEN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLISECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HANDLING-COMPLEX-NUMBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "K" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-TIMEPARSE-MAJORD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KHZ" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROHENRYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*REAL-UT1-UTC*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTOLITERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CANDELA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABVOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAX" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FARAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROY-OUNCES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABAMPERES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EARTHGRAVITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKAGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PENNYWEIGHTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BTU" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROSECOND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "INCH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOGRAMFORCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LBF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "2PI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CHARGE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECAGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DIMENSIONLESS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TABLESPOON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTARE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-PARAMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MIL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LIGHT-YEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRON-VOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CHECK-DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MONTHS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUNDS-PER-SQUARE-INCH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SECONDS-PER-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATHENRY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WITHOUT-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NEWTON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUART" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "G" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEKA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PRINT-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "REV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*ZERO-IS-DIMENSIONLESS*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GET-CANONICAL-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SCRUPLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YOTTA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ROTATE-3DAA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ELECTRONVOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME<=" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NF-STRING" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CREATION-FORM-STREAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SHORT-TON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DIMENSION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "O" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAGNETIC-FLUX" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIVOLT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PECK" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ERGS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "JD-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROVOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIGAUSS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KGF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGA-ELECTRON-VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TERA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMPEREHOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEMPERATURE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEMTOSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "POUNDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FROM-JD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FEMTO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME ">" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NF-OPTION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEXSTYLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FIFTHS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATTHOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QUADRILLION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NAUTICALMILE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BRITISHTHERMALUNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PINTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGLE-LAW-OF-COSINES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UF" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BARS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGAWATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO-PASCAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CREATION-FORM-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CURIE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ROUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIBAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PINT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CUPS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RELATIVE-TIME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOPASCAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FROM-YYDDD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KNOTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TABLESPOONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEGREES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WEBERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME+" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DTSPEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FORMAT-ATTRIBUTE-NAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "M" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TEN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIAMPERE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FURLONG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ALL-SAME" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CONSINE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTARES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LIGHTYEAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ACREFOOT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLI-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*USE-READABLE-PRINT-FORM*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KNOT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DOLLAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "CURIES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COMPONENTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TAN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RADIANS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABHENRY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PLUSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SQRT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "*PREHISTORIC*" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATHENRYS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFATTRIBUTE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ARES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABOHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GIGA-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LOG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SUBSTANCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAP-STATE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ISO8601" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "FT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECAGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YARD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGA-WATT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECIGRAMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DATIME-RELATION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NF-READABLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MONEY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PHYSICAL-QUANTITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HECTO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STATFARAD" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SINGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLIMETERS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-TIMEPOINT-J2000SEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ZEPTO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PETA" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOCALORIE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGOHMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MILLI" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "GRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ABOHM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DECILITER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAXWELL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "METRIC-TONS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "/" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ANGSTROMS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANOMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NOW" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROY-OUNCE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "AMP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DYNES-PER-SQUARE-CENTIMETER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HP-HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WEBER" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-MONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "RECTANGULAR-TO-POLAR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BECQUEREL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "QT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "UG" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTOSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ASTRONOMICAL-UNIT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIMEPARSE-DAY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATOMIC-MASS-UNITS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "COERCE-UNDEFINED" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ISO8601-TIME-INTERVAL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PICOSECONDS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "HOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEGREE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "ATTRIBUTEP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BILLIONTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "EXP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TBSP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MAKE-STATE-TABLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LONGTON" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROAMPERES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "PARSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "YR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SYMB" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "WATTHOURS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "REVOLUTION" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LUMINOSITY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MEGAWATTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "BARN" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TROYPOUND" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DIMENSIONLESS-CALL" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICRO-" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "LENGTH" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DAY-ONLY" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "DEFINE-PHYSICAL-CONSTANT" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "MICROGRAM" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "SEE-VALUES" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "STERADIANS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KEV" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VECTOR-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "VOLTS" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "TIME-AS-ANGLE" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILO" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "NANOSEC" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
    (:NAME "KILOWATTHOUR" :PACKAGE-NAME "ANTIK" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "GRID" :FULL-NAME "GRID" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-POSITION" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Remove the element at position.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-POSITION" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Insert the element at position.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-POSITION" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the element at position to the value, and return the list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ONE-NON-ZERO-LIST" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make list of the specified length that is all zeros except in the
   position specified, which has the value given.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQUENTIAL-LIST" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Make a list of the given length with element equal to the index.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOTAL-SIZE-FROM-DIMENSION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "DIM0" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The first dimension of the object.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "DIM1" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The second dimension of the object.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-NUMERICAL-VALUE*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COERCE-VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Coerce the numeric value to the type.  If value is not numeric, return it.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GRID-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T) :DOCUMENTATION
     "A list of (disjoint) types that are accepted as grids.  Not every
  object of the given type is necessarily a grid, however."
     :INITIAL-VALUE "'(ARRAY)")
    (:TYPE :FUNCTION :SYMBOL (:NAME "GRIDP" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Object is a grid; type is returned.")
    (:TYPE :TYPE :SYMBOL (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Make the simple grid with default properties and elements as specified in args.")
    (:TYPE :GENERIC :SYMBOL (:NAME "RANK" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "The rank (number of dimensions) of the generalized array.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "A list representing the dimensions of the generalized array.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "The grid specification.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION "The grid's affi.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "The element type of the grid.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "'ARRAY")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "'DOUBLE-FLOAT")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-DIMENSIONS*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "'(3)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SIMPLE-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "*DEFAULT-DIMENSIONS*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "COERCE-VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
        (:NAME "*DEFAULT-NUMERICAL-VALUE*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
        (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)))
      (:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a simple grid by specfying the grid-type (default *default-grid-type*), dimensions (*default-dimensions*), element-type (*default-element-type*), and optionally initial-element or initial-contents.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make the simple grid with default properties and elements as specified in args.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-CONTENTS-P" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Make a grid object with no or literal values specified.
   The specification is of the form
   ((component-type dimensions...) ... element-type)
   If initial-contents are specified, the dimensions may be
   omitted, 
   ((component-type) ... element-type).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-INITIAL-CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "IC" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-GRID-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "REST-SPEC" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Make the object(s) required for storage of the data,
    if it consists of CL arrays and lists.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HASHM-NUMERIC-CODE-ALIST*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'((NIL . DOUBLE-FLOAT) (1 . DOUBLE-FLOAT) (2 COMPLEX DOUBLE-FLOAT)
  (3 . SINGLE-FLOAT) (4 COMPLEX SINGLE-FLOAT) (7 SIGNED-BYTE 8)
  (8 UNSIGNED-BYTE 8) (15 SIGNED-BYTE 16) (16 UNSIGNED-BYTE 16)
  (31 SIGNED-BYTE 32) (32 UNSIGNED-BYTE 32) (63 SIGNED-BYTE 64)
  (64 UNSIGNED-BYTE 64))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHM-ELTYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "Get the appropriate element type for the numeric code n")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHM-NUMERIC-CODE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "ELTYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Get the appropriate element type for the numeric code n")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HASHM-GRID-TYPE-ALIST*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASHM-GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ROW-SEPARATOR*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "'GRID:^")
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "+I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "-I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "*I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "/I" :PACKAGE-NAME "ANTIK" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "B" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Select the element from the grid.")
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Set the element from the grid.")
    (:TYPE :GENERIC :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Select the element from the grid using a linearized index.")
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Set the element from the grid using a linearized index.")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LISTIFY" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION "Make the dimension list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "The contents of the grid as nested lists.  This can
   be used as the :initial-contents argument in making
   a new grid.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "GREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Obsolete; use grid:aref.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "GREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Obsolete; use grid:aref*.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Obsolete; use grid:aref.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Obsolete; use grid:aref*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-SPEC-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "The first, or top, type in the specification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-SPEC-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPEC-SCALAR-P" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "Specification is for a scalar; if so, return that type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "Make a specification from the type, dimensions, and element-type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPECIFICATION-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION "The grid dimensions from its specification.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPECIFICATION-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "Replace the grid dimensions in the specification.  Note this works
  only the highest level grid spec.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPEC-ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SPEC" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The element type of the specification.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "Make a new specification based on the existing one, replacing values
   as given.")
    (:TYPE :METHOD :SYMBOL (:NAME "RANK" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ERRORP" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Check that dimension specification for a grid is a list of positive integers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-GRID-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "REST-SPEC" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-ELEMENT-P" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
      ((:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-CONTENTS-P" :PACKAGE-NAME "GRID" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DESTINATION-AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SOURCE-AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Make the grid based on the specification, modified with the
   affi given.  It will be created with initial-element if non-nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-N-GRIDS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOURCES" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION-AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "ELEMENT-FUNCTIONS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "MAKE-LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "SOURCES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
        (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "COMBINATION-FUNCTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "COMBINE-DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "OR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
        (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))))
     :DOCUMENTATION "Map on multiple source grids.  The arguments are:
   sources:
     A list of (grid-or-function affi), each one representing
     either a grid or function from which data will be drawn.  
     If it is a grid, the grid values are used.  If it is a function
     of the appropriate number of non-negative integer arguments,
     values will be created by calling that function on the indices.
     If affi is not specified and grid-or-function is a grid, the affi
     will default to the AFFI of that grid.
   destination:
     A grid in which to put the results, or nil if one is
     to be created.
   destination-affi:
     An AFFI for the destinattion.
   destination-specification:
     A specification for the destination, if destination-affi
     is not given.
   initial-element:  Initial value to give to the destination grid.
   element-functions:
     A list of functions or nil, one for each source.  This function
     is applied to the source element before combination.
   combination-function:
     A function that combines each of the source values after
     being passed through the element-functions.  If nil,
     then just take the value from the first source.
   combine-destination:
     If true, pass as the first argument to the combination-function
     the prior value of the destination grid.  Defaults to T if
     :desination is specified; otherwise nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SOURCE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SOURCE-AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SOURCE-DIMS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION-AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DESTINATION-SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "ELEMENT-FUNCTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "COMBINATION-FUNCTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a new grid by mapping on an existing grid or on indices.
   :source            
      The source grid; if not a grid, it is taken as a
      function to apply to the grid indices to make the
      element of the destination; if this is supplied,
      source is ignored and element-function is only applied
      to the default value.
   :source-affi       
      The affi to be used for extraction; defaults to
      making an affi from source-dims, then destination-specification. 
   :source-dims       
      The dimensions of the source if source not supplied;
      if NIL, dimensions are taken from destination-specification.
   :destination       
      The destination grid, if not supplied, it will be made
      according to destination-affi and destination-specification.
   :destination-affi
      The affi for injection, defaults to (affi destination) 
      if destination is supplied, then
      makes an affi if destination-specification is supplied,
      otherwise source-affi.
   :destination-specification 
      The specification to use for the destination to be make,
      defaults to the specification of source.
   :initial-element     
      The default value to set in a newly-created destination.
   :element-function  
      The function to apply to each element of the source; defaults
      to coercing element to the element type of the destination.
   :combination-function
      A designator for a function of two arguments,
      or nil (default).  If a function, it will be funcalled on
      the destination element and the transformed source element.
      If nil, the destination element is overwritten.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LINEAR-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION "Set the contents of the grid according to the value, which
   is a sequence.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEAR-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)))
     :DOCUMENTATION "The contents of the grid as vector.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENTWISE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TOGGLE-PHYSICAL-DIMENSION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a function on a grid as an elementwise map of a scalar function.  If the result has no physical dimension but the argument does, or vice versa, toggle-physical-dimension should be T.
@example
(funcall (grid:elementwise 'sqrt) #(1.0d0 2.0d0 3.0d0 4.0d0))
#(1.0 1.4142135623730951 1.7320508075688772 2.0)
@end example")
    (:TYPE :FUNCTION :SYMBOL (:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Remove singleton axes (axes with dimension 1) if the argument drop
is true; otherwise return the input grid unchanged.  The destination
is an optional pre-existing grid in which to write the result.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "Create a grid from a block of an existing grid, e.g. a row from a matrix, or a block.  The dimensions give the dimensions of the subgrid, and start gives the lowest values of each index which corresponds to the subgrid element with all index values zero.  If drop is true, all singleton axes are dropped.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AXES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the subgrid of the grid.  Specify the starting indices with
   start, and in the case that the subgrid has lower rank than the
   grid, which axes; default is the first (rank subgrid) axes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CODIMENSION-ONE-SUBSPACE" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Select a subspace with rank one less than the argument grid.  The
   position is a non-negative number indicating which dimension is to be
   dropped, and index is the fixed value it should have.  If
   destination is specified, the result will be written to that grid.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CODIMENSION-ONE-SUBSPACE" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set a subspace with rank one less than the argument grid.  The
   index is a non-negative number indicating which dimension is to be
   dropped, and position is the fixed value it should have.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "ROW" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "The subgrid with the first index set to the specified value.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ROW" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the subgrid with the first index set to the specified value.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "COLUMN" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "The subgrid with the second index set to the specified value.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLUMN" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the subgrid with the second index set to the specified value.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0 1)))
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Transpose the grid, optionally putting the result in destination at
   the element specified by the start indices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      ((:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0 1)))
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Select a subgrid where the two indices are equal or 
   differ by the offset, e.g. the diagonal affi for the matrix.
   The offset specifies sub- (offset<0) or super- (offset>0)
   diagonals.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      ((:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0 1))))
     :DOCUMENTATION "Set a subgrid where the two indices are equal or 
   differ by the offset, e.g. the diagonal affi for the matrix.
   The offset specifies sub- (offset<0) or super- (offset>0)
   diagonals.  If grid is not supplied, a grid of one higher
   dimension than diagonal with default element 0 is used.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-GRID-WITH-DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make a matrix with the default element, setting the diagonal
   to the given diagonal.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTITY-MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIMENSION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCALAR" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 1)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)))
     :DOCUMENTATION
     "A rank-two grid with the off-diagonals zero and the diagonal equal to scalar.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SET-DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "FUNCTION-OR-VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      (:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Set the diagonal of the grid by calling the function on the indices.
   If value is non-nil, then set it to function-or-value, ignoring
   the indices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONCATENATE-GRIDS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID0" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID1" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "AXIS" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Concatenate the grids along the axis specified.  The new grid
   will have the grid type specification and element type
   as grid0.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "STRIDE" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "STRIDE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Create a new grid with every stride-th element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLICE-NO-SELECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX-SELECTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-STRIDE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SELECTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "Replace an index specified as :range with a stride with the
   explicit indices needed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-TO-SELECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "INDEX-SELECTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "SLICE" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "INDEX-SELECTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION
     "Select slice(s) from a grid.  The index-selection is a list with
   length equal to the rank of grid.   Each element should be one of:
     an index, indicating the index to be selected,
     :all, indicating the entire range if indices are to be selected,
     :rev, indicating the entire range if indices are to be selected
         in reverse order,
     (:range start end stride), indicating a range of indices to be
         selected; if stride is omitted, it is presumed to be 1,
     (:select value ...), indicating explicit values to be selected.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "CROSS" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID0" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID1" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "The cross product of two vectors, using the first three components of each.")
    (:TYPE :GENERIC :SYMBOL (:NAME "INNER" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID0" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "GRID1" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The inner product of two grids.")
    (:TYPE :METHOD :SYMBOL (:NAME "INNER" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID0" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "GRID1" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "INNER" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID0" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "GRID1" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EUCLIDEAN" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KIND" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "EUCLIDEAN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "The norm of the grid. Kind can be :euclidean, for the 
   euclidean, or 2-norm.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "NORM" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KIND" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "EUCLIDEAN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "The norm of the grid. Kind can be :euclidean, for the 
   euclidean norm.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NORMALIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "THRESHOLD" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Find the normalized grid, i.e., each element is divided by grid
   norm, and the normalization factor.  If the norm is less than the
   non-nil threshold, then nil is returned; if it is zero and
   threshold is nil, a zero grid is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX-FROM-COLUMNS" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLUMNS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Make the matrix out of the equal-length vectors.
   If *default-grid-type* is non-nil, resultant grid
   will be of the specified type; otherwise, it will
   be the same as the first column.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-GRID" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
       ((:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
        (:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)))
      (:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Copy the grid to another grid.")
    (:TYPE :GENERIC :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Copy contents into existing or new object.")
    (:TYPE :METHOD :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-TO" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)))
     :DOCUMENTATION "Make a grid of the specified type from the object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INDEX-FILL-DECADAL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Element will be computed from the indices by multiplying
   by powers of 10 and summing.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OFFSET-IFD" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OFFSET" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-GRID-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDEX-FILL-FUNCTION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "INDEX-FILL-DECADAL" :PACKAGE-NAME "GRID" :EXTERNALP NIL))))
     :DOCUMENTATION "Make a grid of the specified type and dimensions,
   where the contents are computed by the index-fill-function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-MAYBE-FROM-STRING" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Read from the string if possible.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DATA-LINE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LINE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SEPARATOR" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "WHITESPACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Read the data line and split into fields separated by either a
   separator or white space, designated with :whitespace.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DATA-STREAM" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SEPARATOR" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "WHITESPACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "INCLUDE-COUNT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-INPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Read the data from the stream and collect a list of lists of values
   from columns separated by whitespace.  If include-count is a
   number, line count starting at that number will be prepended as the
   first field.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-DATA-FILE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FILENAME" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SEPARATOR" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "WHITESPACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "INCLUDE-COUNT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DISCARD-HEADER" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Read the data in the file into a list.  If include-count is true, one column will be a serial count of the line of input data.  If discard-header is not nil, discard header line(s); if a number greater than 1, discard that many lines.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-VECTOR-FROM-STRING" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      (:NAME "END" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Read the count element vector from a string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-INDEXED-DATA" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "MAXIMUM-INDEX-PARAMETERS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX-ALGORITHM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "DEFAULT-VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0)
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Read the stream of indexed data; each line contains one record.  The last column is the datum and the preceeding columns are either the indices, or inputs to index-algorithm, a function that should return the indices.  The grid is sized from maximum-indices, which are index parameters if index-algorithm is non-nil.  If a value read is not of the appropriate type (grid:*default-element-type*), then default-value is used instead, which should be of the appropriate type.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FP-TYPE-MAPPING*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION
     "List of floating point types supported by CFFI from the CFFI docs
   plus corresponding complex types."
     :INITIAL-VALUE "'((:FLOAT . SINGLE-FLOAT) (:DOUBLE . DOUBLE-FLOAT)
  ((:STRUCT GRID:COMPLEX-FLOAT-C) COMPLEX SINGLE-FLOAT)
  ((:STRUCT GRID:COMPLEX-DOUBLE-C) COMPLEX DOUBLE-FLOAT))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CSTD-CL-TYPE-MAPPING*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION
     "An alist of the C standard types as keywords, and the CL type
   The exception is complex types, which don't have a definition
   in the C standard; in that case, the C type is the foreign struct
   definition."
     :INITIAL-VALUE "(APPEND GRID::*FP-TYPE-MAPPING*
        (MAPCAR
         (LAMBDA (TYPE)
           (CONS TYPE
                 (LIST
                  (IF (STRING-EQUAL TYPE \"uns\" :END1 3)
                      'UNSIGNED-BYTE
                      'SIGNED-BYTE)
                  (* 8 (CFFI:FOREIGN-TYPE-SIZE TYPE)))))
         CFFI:*BUILT-IN-INTEGER-TYPES*))")
    (:TYPE :MACRO :SYMBOL
     (:NAME "FLOATING-POINT-ASSOCIATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "SPLICE-LIST" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-TYPES" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ALIST" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RIGHT-SIDE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "A list of all types defined by symbol or definition.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOOKUP-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ALIST" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REVERSE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ERROR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Lookup the symbol defined in the alist.  If error is non-nil it
   should be a string describing the class of types, and this function
   will signal an error if the type wasn't found.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CL-SINGLE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CL-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PACKAGE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*PACKAGE*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "The element type name as a single symbol.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CL-CFFI" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CL-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "The CFFI element type from the CL type.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CFFI-CL" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CFFI-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "The CL type from the CFFI element type.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "'DOUBLE-FLOAT")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CFFI-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "The foreign element type of the object.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CL-NUMERIC-CLASSES*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(RATIO INTEGER RATIONAL FLOAT REAL COMPLEX NUMBER)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMBER-CLASS" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Find the class corresponding to the numeric type.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+FOREIGN-POINTER-CLASS+" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION "The class in which foreign pointers fall." :INITIAL-VALUE
     "(CLASS-NAME (CLASS-OF (CFFI-SYS:NULL-POINTER)))")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+FOREIGN-POINTER-TYPE+" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION "The type of foreign pointers." :INITIAL-VALUE
     "(TYPE-OF (CFFI-SYS:NULL-POINTER))")
    (:TYPE :CLASS :SYMBOL
     (:NAME "COMPLEX-FLOAT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "FOREIGN-STRUCT-TYPE" :PACKAGE-NAME "CFFI" :EXTERNALP NIL)
      (:NAME "TRANSLATABLE-FOREIGN-TYPE" :PACKAGE-NAME "CFFI" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSLATE-INTO-FOREIGN-MEMORY" :PACKAGE-NAME "CFFI" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "COMPLEX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "COMPLEX-FLOAT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
      (:NAME "P" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSLATE-FROM-FOREIGN" :PACKAGE-NAME "CFFI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "COMPLEX-FLOAT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "COMPLEX-DOUBLE-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "FOREIGN-STRUCT-TYPE" :PACKAGE-NAME "CFFI" :EXTERNALP NIL)
      (:NAME "TRANSLATABLE-FOREIGN-TYPE" :PACKAGE-NAME "CFFI" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSLATE-INTO-FOREIGN-MEMORY" :PACKAGE-NAME "CFFI" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "COMPLEX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "COMPLEX-DOUBLE-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
      (:NAME "P" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "TRANSLATE-FROM-FOREIGN" :PACKAGE-NAME "CFFI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "COMPLEX-DOUBLE-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAN-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-FLOAT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ELTYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The type of the component of this type (complex).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELTYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ARRAY-ELEMENT-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION "All the array element types supported." :INITIAL-VALUE
     "(REMOVE-DUPLICATES (GRID:ALL-TYPES GRID:*CSTD-CL-TYPE-MAPPING* T) :TEST 'EQUAL)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ARRAY-ELEMENT-TYPES-NO-COMPLEX*" :PACKAGE-NAME "GRID" :EXTERNALP
      T)
     :DOCUMENTATION
     "All the array element types supported except for complex types."
     :INITIAL-VALUE "(REMOVE-IF (LAMBDA (GRID::TP) (SUBTYPEP GRID::TP 'COMPLEX))
           GRID:*ARRAY-ELEMENT-TYPES*)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FLOAT-COMPLEX-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION "All the float or complex array element types supported."
     :INITIAL-VALUE "(REMOVE-IF (LAMBDA (GRID::TP) (SUBTYPEP GRID::TP 'INTEGER))
           GRID:*ARRAY-ELEMENT-TYPES*)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FLOAT-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T) :DOCUMENTATION
     "All the float array element types." :INITIAL-VALUE
     "(REMOVE-IF-NOT (LAMBDA (GRID::TP) (SUBTYPEP GRID::TP 'FLOAT))
               GRID:*ARRAY-ELEMENT-TYPES*)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*COMPLEX-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T) :DOCUMENTATION
     "All the supported complex array element types." :INITIAL-VALUE
     "(REMOVE-IF-NOT (LAMBDA (GRID::TP) (SUBTYPEP GRID::TP 'COMPLEX))
               GRID:*ARRAY-ELEMENT-TYPES*)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DOUBLE-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T) :DOCUMENTATION
     "All the supported double float element types." :INITIAL-VALUE
     "(LIST 'DOUBLE-FLOAT '(COMPLEX DOUBLE-FLOAT))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENT-TYPES" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPES" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "All the element types available of a given category.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ELEMENT-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "The size of each element as stored in C.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ST" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ST-SYMBOL" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ST-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ST-POINTERP" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION
     "If this st represents a pointer, return the type of the object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ST-ACTUAL-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ST-POINTER-GENERIC-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "DCREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DOUBLE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Reference C double(s).")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CLASS-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION
     "The mapping between the class name and the CL element type."
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-CLASS-NAME" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CATEGORY-OR-RANK" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAKING-CLASS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "The class name from the type of element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-DEFCLASS" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "CATEGORY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SUPERCLASS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Define all the subclasses based on the known element types.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Arrays that can be referenced by foreign functions." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FOREIGN-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS
       NIL :READERS
       ((:NAME "FOREIGN-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T))
       :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "AFFI" :PACKAGE-NAME "GRID" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CL-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS ((:NAME "CL-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)) :WRITERS
       NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FOREIGN-METADATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "FOREIGN-METADATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "FOREIGN-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "FINALIZER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "LINEARIZATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "ROW-MAJOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-CONTENTS*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION "Print the contents of the foreign-array." :INITIAL-VALUE
     "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PRINT-FOREIGN-ARRAY-READABLY*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :DOCUMENTATION
     "Print the contents of the foreign-array with the #m reader macro."
     :INITIAL-VALUE "T")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Print the grid readably. The contents-writer is a function that is called on the stream and writes the contents of the grid.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-GRID-READABLY" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "CONTENTS-WRITER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "METADATA-SLOT" :PACKAGE-NAME "GRID" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Access a slot in the foreign-metadata.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-LOAD-FORM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Make a foreign array with the given element type,
   :dimensions, and :initial-contents, :initial-element or :data.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FORTRAN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make an array in column-major order with the given element type,
   :dimensions, and :initial-contents, :initial-element or :data.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "*DEFAULT-DIMENSIONS*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "If object is not a foreign array, make and return a foreign array
   with the dimensions and element-type.  If object is a
   foreign array, it is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FOREIGN-ARRAY-FROM-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "POINTER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FINALIZE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "Given a foreign pointer to an array, make a Lisp object of 
   class 'foreign-array that references that.  This will never
   make a static-vector.  If finalize is true, than the array
   memory will be freed when this object is garbage collected;
   otherwise it is presumed that the foreign code will handle
   that job.")
    (:TYPE :CLASS :SYMBOL (:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "Foreign vectors." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL (:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)) :DOCUMENTATION
     "Foreign matrices." :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :SUPER-CLASS-LIST ((:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL (:NAME "RANK" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FARRAY-ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TYPE-DECLARATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAREF-INT" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE-DECLARATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Access the foreign array element.  The more details provided in
   type-declaration, the faster access will be.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRAP-THE-DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE-DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DO-IT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRAP-SET-THEDECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "WRAP-THE-DECL" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "SET-VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the object if it's not a complex; if it is a complex, assume
   it's a pointer and convert to a CL complex.")
    (:TYPE :MACRO :SYMBOL (:NAME "FAREF" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE-DECLARATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Macro to get an element of the foreign array; type-declaration can
  be nil, a foreign array type, or a list of foreign-array type and
  dimension(s).  The more details provided at macroexpansion time,
  the faster the result at run time.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SET-FAREF" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE-DECLARATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Macro to set an element of the foreign array; type-declaration can
  be nil, a foreign array type, or a list of foreign-array type and
  dimension(s).  The more details provided at macroexpansion time,
  the faster the result at run time.")
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDICES" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "LINEARIZED-INDEX" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-GRID-DATA" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))))
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "REST-SPEC" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "COPY" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "GRID-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
      (:NAME "DESTINATION" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ACCELERATED-AREF-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :DOCUMENTATION
     "A list of grid types whose access through aref or aref* will be
  directly translated into cffi:mem-aref calls for speed if the
  compiler supports it."
     :INITIAL-VALUE "(GRID:ALL-TYPES GRID::*CLASS-ELEMENT-TYPE*)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECLARED-TYPE-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VARIABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "The declaration of type and dimensions for a foreign array, or NIL otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-THE-TYPE-SPECIFIER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION "When something is declared with a 'the special operator,
   return the item and type specifier.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "USING-DECLARED-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "WHOLE-FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "WHEN-DECLARED-EXPANDER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "OBJECT" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "ARG" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION
     "Look for either 'declare or 'the declarations on the object, and expand accordingly if declared, or else return the whole-form.  The second value returned indicates whether there was a replacement; in the former case it is T, in the latter NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SELECT-AREF-EXPANDER" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-FAREF" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPAND-SET-FAREF" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MY-SETF-PAIR" :PACKAGE-NAME "GRID" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "GRID" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL (:NAME "GSETF" :PACKAGE-NAME "GRID" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "GRID" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL (:NAME "ZEROP" :PACKAGE-NAME "ANTIK" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
       (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "MATRIX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "TRANSPOSE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DCREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "SET-DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ARRAY-MISMATCH" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "FLOATING-POINT-ASSOCIATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*CSTD-CL-TYPE-MAPPING*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*DEFAULT-GRID-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "FOREIGN-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAP-N-GRIDS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "AREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*COMPLEX-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "+FOREIGN-POINTER-CLASS+" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "GREF" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COMPLEX-FLOAT-C" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ST-POINTERP" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ST-SYMBOL" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "NUMBER-CLASS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "STRIDE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*DEFAULT-ELEMENT-TYPE*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CHECK-DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*FLOAT-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COLUMN" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "+FOREIGN-POINTER-TYPE+" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "READ-DATA-STREAM" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-SIMPLE-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DIM0" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ST-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-COMPLEX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "METADATA-SLOT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*ARRAY-ELEMENT-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DATA-CLASS-NAME" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ENSURE-FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CODIMENSION-ONE-SUBSPACE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CL-SINGLE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*PRINT-FOREIGN-ARRAY-READABLY*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DIM1" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DIMENSIONS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "^" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "LOOKUP-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "TOTAL-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MVECTOR" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-UNSIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-UNSIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ALL-TYPES" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-ST" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-DOUBLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-FOREIGN-ARRAY-FROM-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAP-GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ELEMENT-TYPES" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*PRINT-CONTENTS*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "READ-VECTOR-FROM-STRING" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "NORMALIZE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ST-POINTER-GENERIC-POINTER" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "SLICE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "GRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "SPECIFICATION" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COMPLEX-DOUBLE-C" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-FORTRAN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*FLOAT-COMPLEX-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CL-CFFI" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "READ-INDEXED-DATA" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COPY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "GSETF" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ST-ACTUAL-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "SUBGRID" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-UNSIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COMPONENT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "NORM" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COPY-TO" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "READ-DATA-FILE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "SPEC-SCALAR-P" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ELEMENTWISE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CL-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "COMPONENT-FLOAT-TYPE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-COMPLEX-SINGLE-FLOAT" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ELEMENT-SIZE" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "ROW" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-SIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*DOUBLE-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-FROM-COLUMNS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MATRIX-SIGNED-BYTE-32" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "AREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-UNSIGNED-BYTE-8" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CONCATENATE-GRIDS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-SIGNED-BYTE-64" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "EUCLIDEAN" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "RANK" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "IDENTITY-MATRIX" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*DEFAULT-DIMENSIONS*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*GRID-TYPES*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "GRIDP" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "INNER" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "GREF*" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "MAKE-GRID-WITH-DIAGONAL" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "DROP" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CROSS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CFFI-CL" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "CONTENTS" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "FOREIGN-ARRAY" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "VECTOR-SIGNED-BYTE-16" :PACKAGE-NAME "GRID" :EXTERNALP T)
    (:NAME "*ARRAY-ELEMENT-TYPES-NO-COMPLEX*" :PACKAGE-NAME "GRID" :EXTERNALP
     T)))
  (:TYPE :PACKAGE :NAME "AFFI" :FULL-NAME "AFFI" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-INTO-FIXNUM-VECTOR" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SEQ" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Copy a sequence into a vector of fixnums.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FIXNUM-VECTOR" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Create a vector with element type fixnum.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-AT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELEM" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "ORG-LIST" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "POS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Insert into the list at the indicated position.")
    (:TYPE :CLASS :SYMBOL (:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONST" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COEFF" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOMAIN" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS ((:NAME "DOMAIN" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
       (:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CONST" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)) :DOCUMENTATION
     "Return the constant in an affine index.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-COEFF" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)) :DOCUMENTATION
     "Return the coefficients in an affine index (copy is made).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DOMAIN" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)) :DOCUMENTATION
     "Return the domain in an affine index (copy is made).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)) :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJ" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       (:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "RANK" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T))
     :DOCUMENTATION "Return the rank of an affine index.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "SIZE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T))
     :DOCUMENTATION
     "Return the size (ie number of integers in the range) of an affine
index.  Note that size is not necessarily the difference of the
endpoints of the range, as the range may be non-contiguous.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "RANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T))
     :DOCUMENTATION
     "Return the smallest and the largest integer in the range of an
affine index.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OFFSET" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Create an affine mapping conforming to the given
  object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-AFFI-INT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "COEFF" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Make an affi instance with the contents not set, except for dimensions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROW-MAJOR-COEFF-FROM-DIMENSIONS" :PACKAGE-NAME "AFFI" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DIMENSIONS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Find the coeff from the dimensions.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "DIMENSIONS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Setup a row-major affine mapping with the given dimensions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-AFFI-CM" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)) :DOCUMENTATION
     "Setup a _column major_ affine mapping using dimensions.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CALCULATE-INDEX" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "SUBSCRIPTS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Calculate the index of a given vector of subscripts.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELINEARIZE-INDEX" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "LINEAR-INDEX" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "AFFI-IN" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "AFFI-OUT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "A function mapping linearized index between affis.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-SUBSCRIPTS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a walker for an affine index that starts at the given
subscripts (zeroes by default).  Return two functions: one that
returns the current index and increments the walker, the other just
returns the index without any side effects.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "TEST-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)) :DOCUMENTATION
     "Output the indices generated by a walker.  For
testing purposes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TEST-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Output the indices generated by a walker.  For testing purposes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "TEST-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
       (:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)))
     :DOCUMENTATION "Make and then test a walker.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-RANGE" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "D" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parse a range specification, returning two values: the starting
point, and the length of the range, whose sign determines the
direction.  [0,d) is the domain.

A range specification is either and atom or a list of two integers.
Negative integers are interpreted as counted backwards from the right
edge of the domain, ie i < 0 denotes element d+i.

If range is an atom, then it can be :all or :rev, denoting the entire
range in regular and reversed order, respectively, or refer to a
single element.

A two-element list denotes an interval, inclusive.  If the first one
is larger then the second, reverse ordering is used.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-CONFORMABILITY" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AFFI1" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "AFFI2" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CONFORMABILITY" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       (:NAME "DROPPED" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Check that two affine indexes are conformable.  There are three
types of conformability: :strict requires that the two domains are
exactly the same, :dropped checks if they are the same when we drop
dimensions of size 1, and :size just checks the size of the two
ranges.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "APPLY-TRANSFORMERS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TRANSFORMERS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a new affi with the transformers applied in succession.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERMUTE" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "PERMUTATION" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Permute the subscripts of an affine index using the given list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDICES" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0 1))))
     :DOCUMENTATION "Transpose any pair of indices.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBRANGE-INT" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "RANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T))
     :DOCUMENTATION
     "Constrain an affine map to a subrange, which is given as a list of
ranges.  For details, see parse-range.  Return the new affine index.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBRANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "DIMS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIM-POSITIONS" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create an affi selecting a subrange from the given affi corresponding
   to the dimensions dims in the positions dim-positions.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "DROP" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "WHICH" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Drop the dimensions from the domain which have size 1, provided
that their index is in `which', or `which' is t.  Return new affine
index.  If `which' is nil, no dimension is dropped.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-POSITION" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Remove the element at position.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIAGONAL" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "AFFI" :EXTERNALP NIL) 0)
      ((:NAME "INDICES" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) (0 1))))
     :DOCUMENTATION "Select a subarray where the two indices are equal or 
   differ by the offset, e.g. the diagonal affi for the matrix.
   The offset specifies sub- (offset<0) or super- (offset>0)
   diagonals.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRUDE" :PACKAGE-NAME "AFFI" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "AFFI" :EXTERNALP NIL)
      (:NAME "NEW-DIMENSION" :PACKAGE-NAME "AFFI" :EXTERNALP NIL))
     :DOCUMENTATION "Create a new AFFI that makes the grid look as if it has an
  additional dimension, with each element replicated along that
  dimension.")
    (:TYPE :FUNCTION :SYMBOL (:NAME "STRIDE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
      (:NAME "STRIDE" :PACKAGE-NAME "AFFI" :EXTERNALP T))
     :DOCUMENTATION "Create a new AFFI that makes the grid look as if is
   been reduced by taking only every stride-th element."))
   :EXTERNAL-SYMBOLS
   ((:NAME "GET-DOMAIN" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "SUBRANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "STRIDE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "MAKE-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "CALCULATE-INDEX" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "TEST-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "DROP" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "RANGE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "CHECK-CONFORMABILITY" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "EXTRUDE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "SIZE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "GET-CONST" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "DIAGONAL" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "GET-COEFF" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "TRANSPOSE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "RANK" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "MAKE-WALKER" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "PERMUTE" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "IN-AFFI" :PACKAGE-NAME "AFFI" :EXTERNALP T)
    (:NAME "MAKE-AFFI-CM" :PACKAGE-NAME "AFFI" :EXTERNALP T)))))
