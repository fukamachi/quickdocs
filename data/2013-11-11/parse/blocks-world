
(:TYPE :SYSTEM :NAME "blocks-world" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "BLOCKS-WORLD" :FULL-NAME "BLOCKS-WORLD" :DOCUMENTATION
   "This package contains the source code of chapter 21, @em{\"The Blocks
    World with Classes and Methods\"} from
    @a[http://www.amazon.com/Lisp-3rd-Patrick-Winston/dp/0201083191]{
      Lisp (3rd edition)}
    by Winston and Horn.
    @begin[A picture of the world]{section}
    The block objects represent a world that \"looks\" like this:
    @begin{pre}
/----\\    ^    /---------\\      ^
| b4 |   /  \\  |         |     / \\
\\____/  /_w7_\\ |         |     / \\
/----\\  /----\\ |         |    /   \\  /--------\\        /^\\
| b1 |  | b2 | | b3      |    /   \\  | b6     |       (l8 )
\\____/  \\____/ \\_________/   /_w5__\\ \\________/        \\./
+-----------------------------------------------------------+
|                                                           |
+-----------------------------------------------------------+
    @end{pre}
    @end{section}
    @begin[Example]{section}
    In the initial configuration, where all blocks have been placed directly
    on the table (not shown), @fun{put-on} will move the objects like this:
    @begin{pre}
BLOCKS-WORLD> (put-on b1 b2)
Move hand to pick up B1 at location (1 2).
Grasp B1.
Removing support relations between B1 and TABLE.
Move B1 to top of B2 at location (2 2).
Adding support relations between B1 and B2.
Ungrasp B1.
T
    @end{pre}
    @end{section}
    @begin[The different kinds of blocks]{section}
    Movable blocks than can be moved onto load supporting blocks.  Using
    multiple inheritance, there are also blocks that can do both.

    @aboutclass{basic-block}
    @aboutclass{load-bearing-block}
    @aboutclass{movable-block}
    @end{section}
    @begin[Block properties]{section}
    Slot readers:

    @aboutfun{block-name}
    @aboutfun{block-position}
    @aboutfun{block-width}
    @aboutfun{block-height}
    @aboutfun{block-supported-by}
    @aboutfun{block-support-for}
    @end{section}
    @begin[Concrete block classes]{section}
    These are the blocks found in our world:

    @aboutclass{table}
    @aboutclass{brick}
    @aboutclass{wedge}
    @aboutclass{ball}
    @end{section}
    @begin[The hand]{section}
    The hand is movable.  It can hold at most one block.

    @aboutclass{hand}
    @aboutfun{hand-name}
    @aboutfun{hand-position}
    @aboutfun{hand-grasping}
    @end{section}"
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*HAND*" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "TABLE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :DOCUMENTATION
     "@unexport{}" :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "B1" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "B2" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "B3" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "B4" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "W5" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "B6" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "W7" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "L8" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :DOCUMENTATION
     NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{basic-block}}
    @return{a symbol}
    @short{Returns the block's name, a symbol.}

    In the examples from the book, a global variable of this name is used
    to refer to @code{instance}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-WIDTH" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{basic-block}}
    @return{an integer}
    @short{Returns the block's width.}

    The size of a block is specified as width and height, and determines which
    parts of the world this block occupies.  No other objects can be
    placed to an overlapping position.

    @see{block-position}
    @see{block-height}")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-HEIGHT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{basic-block}}
    @return{an integer}
    @short{Returns the block's height.}

    The size of a block is specified as width and height, and determines which
    parts of the world this block occupies.  No other objects can be
    placed to an overlapping position.

    @see{block-position}
    @see{block-width}")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{basic-block}}
    @return{a list of two integers}
    @short{Returns the block's position.}

    The position of a block is specified as a list of its x and y coordinates,
    where the first axis runs along the table, and the second axis points
    upwards towards the hand.

    Together with the block's width and height, the position
    determines which
    parts of the world this block occupies.  No other objects can be
    placed to an overlapping position.

    @see{block-height}
    @see{block-width}
    @see{hand-position}")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-SUPPORTED-BY" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{basic-block}}
    @return{nil, or a block}
    @short{Returns the block this instance has been placed onto.}

    All blocks except for the table sit on top of another block, which
    supports them.

    @see{block-support-for}")
    (:TYPE :CLASS :SYMBOL
     (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "@short{The superclass of all objects in the Blocks World
    (not including the hand).}

    Subclasses of @code{basic-block} characterize different kinds of objects,
    and have different properties.

    They all have a name, given as
    @slot{block-name} and in the examples from the book, a global variable
    of that name is used to refer to them.

    Since this chapter is an explanation of CLOS, no specific
    constructor function is defined, and users may call @code{make-instance}
    directly.

    @see-slot{block-width}
    @see-slot{block-height}
    @see-slot{block-position}
    @see-slot{block-supported-by}"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "BLOCK-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "WIDTH" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "BLOCK-WIDTH" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HEIGHT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "BLOCK-HEIGHT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "BLOCK-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUPPORTED-BY" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "BLOCK-SUPPORTED-BY" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION
     "@short{The superclass of objects in the Blocks World that can be moved
    by the hand.}

    This class is mixed into all blocks except for the @class{table}."
     :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BLOCK-SUPPORT-FOR" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{load-bearing-block}}
    @return{a list of blocks}
    @short{Returns the blocks that have been placed onto this instance.}

    @see{block-supported-by}")
    (:TYPE :CLASS :SYMBOL
     (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION
     "@short{The superclass of objects in the Blocks World that other blocks
    can be placed onto.}

    This class is mixed into most blocks, except for the @class{wedge}
    and the @class{ball}.

    @see-slot{block-support-for}"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUPPORT-FOR" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "BLOCK-SUPPORT-FOR" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "BRICK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
      (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION "@short{A useful movable building block with a flat top.}

    Because this block has a flat top, it supports other blocks."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "WEDGE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION "@short{An interesting movable building block.}

    Because this block doesn't have a flat top, it cannot
    support other blocks."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "BALL" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION "@short{The block is a sphere.}

    Because this block doesn't have a flat top, it cannot
    support other blocks."
     :SLOT-LIST NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "TABLE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :DOCUMENTATION "@short{The table supporting the rest of the world.}

    The entire rest of the world sits on this table.  The table itself
    cannot be moved.

    For each world, this class is meant to be a singleton."
     :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HAND-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{hand}}
    @return{a symbol}
    @short{Returns the hand's name, a symbol.}

    @begin{implementation-node}
    The hand is always called @code{blocks-world::*hand*}.
    @end{implementation-node}")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HAND-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{hand}}
    @return{a list of two integers}
    @short{Returns the hand's position.}

    The position of a hand is specified as a list of its x and y coordinates,
    where the first axis runs along the table, and the second axis points
    upwards towards the hand.

    @see{block-position}")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HAND-GRASPING" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INSTANCE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[instance]{a @class{hand}}
    @return{a @class{movable-block}, or nil}
    @short{Returns the block the hand is currently holding.} ")
    (:TYPE :CLASS :SYMBOL
     (:NAME "HAND" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :SUPER-CLASS-LIST
     NIL :DOCUMENTATION "@short{The hand that moves the world.}

    This hand can be used to move every @class{movable-block}.

    @see-slot{hand-name}
    @see-slot{hand-position}
    @see-slot{hand-grasping}"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HAND-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "HAND-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GRASPING" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "HAND-GRASPING" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "BLOCK-SUPPORT-FOR" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PUT-ON" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{basic-block}}
    @return{a boolean}
    @short{Move block @code{object} onto block @code{support}.}

    Prints the steps taken and returns T or prints an error 
    message and returns nil.

    @see{get-space}
    @see{grasp}
    @see{move}
    @see{ungrasp}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PUT-ON" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{basic-block}}
    @return{undocumented, but non-nil}
    @short{Find or make space on support for object.}

    @see{find-space}
    @see{make-space}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @return{t}
    @short{Grasps the block using the hand.}

    Makes sure to ungrasp the block currently grasped by the @class{hand},
    if any.

    @see{ungrasp}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UNGRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @return{a boolean}
    @short{Ungrasps the block if hand is holding it.}

    Returns t if successful, or nil if the @class{hand} didn't hold this block.

    @see{grasp}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNGRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-RID-OF" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @return{unspecified}
    @short{Moves @code{object} onto the @class{table}.}

    @see{put-on}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-RID-OF" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{basic-block}}
    @return{undocumented, but non-nil}
    @short{Make space on support for object.}

    Takes all necessary actions to make space available.

    @see{get-space}
    @see{find-space}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CLEAR-TOP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[support]{a @class{load-bearing-block}}
    @return{nil}
    @short{Make space on top of this object.}

    Removes all blocks @code{support} is supporting.

    @see{get-rid-of}
    @see{block-support-for}")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLEAR-TOP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REMOVE-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @return{a boolean}
    @short{Note that @code{object} has been taken from @code{support}.}

    This function maintains the slots @fun{block-supported-by}
    and @fun{block-support-for}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{basic-block}}
    @return{a boolean}
    @short{Note that @code{object} has been put onto @code{support}.}

    This function maintains the slots @fun{block-supported-by}
    and @fun{block-support-for}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{load-bearing-block}}
    @return{a boolean}
    @short{Move block @code{object} onto block @code{support}.}

    This is a helper function for @fun{put-on}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      (:NAME "IGNORED-PARAMETER" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BLOCK-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[object]{a @class{movable-block}}
    @arg[support]{a @class{basic-block}}
    @return{undocumented or nil}
    @short{Find space on support for object.}

    Returns nil if no space could be found.

    @see{get-space}
    @see{make-space}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTERSECTIONS-P" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "OFFSET" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "BASE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
      (:NAME "OBSTACLES" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TOP-LOCATION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BLOCKS*" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LIST
 (MAKE-INSTANCE 'BLOCKS-WORLD:TABLE :NAME 'BLOCKS-WORLD:TABLE :WIDTH 20 :HEIGHT
                0 :POSITION '(0 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BRICK :NAME 'BLOCKS-WORLD::B1 :WIDTH 2 :HEIGHT 2
                :POSITION '(0 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BRICK :NAME 'BLOCKS-WORLD::B2 :WIDTH 2 :HEIGHT 2
                :POSITION '(2 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BRICK :NAME 'BLOCKS-WORLD::B3 :WIDTH 4 :HEIGHT 4
                :POSITION '(4 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BRICK :NAME 'BLOCKS-WORLD::B4 :WIDTH 2 :HEIGHT 2
                :POSITION '(8 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:WEDGE :NAME 'BLOCKS-WORLD::W5 :WIDTH 2 :HEIGHT 4
                :POSITION '(10 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BRICK :NAME 'BLOCKS-WORLD::B6 :WIDTH 4 :HEIGHT 2
                :POSITION '(12 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:WEDGE :NAME 'BLOCKS-WORLD::W7 :WIDTH 2 :HEIGHT 2
                :POSITION '(16 0))
 (MAKE-INSTANCE 'BLOCKS-WORLD:BALL :NAME 'BLOCKS-WORLD::L8 :WIDTH 2 :HEIGHT 2
                :POSITION '(18 0)))"))
   :EXTERNAL-SYMBOLS
   ((:NAME "BLOCK-WIDTH" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "GRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "HAND" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "TABLE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "UNGRASP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BLOCK-SUPPORT-FOR" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BLOCK-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "HAND-GRASPING" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "MAKE-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "PUT-ON" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BLOCK-HEIGHT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BLOCK-SUPPORTED-BY" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BRICK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BALL" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "GET-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "GET-RID-OF" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "WEDGE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "HAND-POSITION" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "REMOVE-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "BLOCK-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "CLEAR-TOP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "ADD-SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
    (:NAME "HAND-NAME" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-GOALS" :FULL-NAME "BLOCKS-WORLD-GOALS" :DOCUMENTATION
   "This package contains the source code of chapter 22, @em{\"Answering
    Questions about Goals\"} from
    @a[http://www.amazon.com/Lisp-3rd-Patrick-Winston/dp/0201083191]{
      Lisp (3rd edition)}
    by Winston and Horn.

    @begin[Lots of undocumented functions]{section}
    I was too lazy to document this package, which is why all its functions
    have a big fat \"undocumented\" warning.

    This package's page also looks rather empty and sad.
    @end{section}"
   :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "NODE-PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CHILDREN" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "NODE-CHILDREN" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP
         T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "NODE-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-NODE*" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(MAKE-INSTANCE 'BLOCKS-WORLD-GOALS:NODE)")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ATTACH-PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CHILD" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T))
      ((:NAME "PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ATTACH-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
       (:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T))
      (:NAME "ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-HISTORY-METHOD" :PACKAGE-NAME "BLOCKS-WORLD-GOALS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
      (:NAME "PARAMETERS" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-SPECIALIZERS" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PARAMETER-LIST" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PUT-ON" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-RID-OF" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-SPACE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CLEAR-TOP" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "LOAD-BEARING-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "MOVABLE-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      ((:NAME "SUPPORT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "X" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       (:NAME "BASIC-BLOCK" :PACKAGE-NAME "BLOCKS-WORLD" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SHOW-SIMPLE-TREE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDENTATION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
       0))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "GIVEN-FORM" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
       (:NAME "*CURRENT-NODE*" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TELL-WHY" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARAMETERS" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TELL-WHY-AUX" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GIVEN-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "FIND-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "ATTACH-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "NODE-PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "DEFINE-HISTORY-METHOD" :PACKAGE-NAME "BLOCKS-WORLD-GOALS"
     :EXTERNALP T)
    (:NAME "ATTACH-PARENT" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "TELL-WHY" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "NODE-ACTION" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "NODE-CHILDREN" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "NODE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "*CURRENT-NODE*" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP T)
    (:NAME "SHOW-SIMPLE-TREE" :PACKAGE-NAME "BLOCKS-WORLD-GOALS" :EXTERNALP
     T)))))
