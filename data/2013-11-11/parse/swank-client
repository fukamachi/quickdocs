
(:TYPE :SYSTEM :NAME "swank-client" :AUTHOR "Robert Brown" :MAINTAINER NIL
 :VERSION "1.4" :LICENCE
 "GPL version 2.  See the copyright messages in individual files." :DESCRIPTION
 "Client side of the Swank protocol." :LONG-DESCRIPTION
 "An implementation of the client side of Slime's Swank debugging protocol."
 :DEPENDS-ON ("BORDEAUX-THREADS" "COM.GOOGLE.BASE" "SWANK" "USOCKET")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "SWANK-PRINTING" :FULL-NAME "SWANK-PRINTING"
   :DOCUMENTATION
   "A package that imports no symbols, used by the Swank client code to print
s-expressions with fully package-qualified symbols."
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS NIL)
  (:TYPE :PACKAGE :NAME "SWANK-CLIENT" :FULL-NAME "SWANK-CLIENT" :DOCUMENTATION
   "A client interface to Swank servers." :SYMBOL-LIST
   ((:TYPE :TYPE :SYMBOL
     (:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+ABORT+" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION
     "Unique object used to signal that a computation was aborted on the server."
     :INITIAL-VALUE "#:G0")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+ABORT+" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION
     "Unique object used to signal that a computation was aborted on the server."
     :INITIAL-VALUE "#:G0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*THREAD-OFFSET*" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION
     "Counter used to assign each Swank connection a unique range of thread IDs."
     :INITIAL-VALUE "0")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+MAXIMUM-THREAD-COUNT+" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
      NIL)
     :DOCUMENTATION "Maximum number of threads per Swank connection."
     :INITIAL-VALUE "#:G1")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+MAXIMUM-THREAD-COUNT+" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
      NIL)
     :DOCUMENTATION "Maximum number of threads per Swank connection."
     :INITIAL-VALUE "#:G1")
    (:TYPE :CLASS :SYMBOL
     (:NAME "SWANK-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "A connection to a Swank server."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HOST-NAME" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "HOST-NAME" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Name of the host where the Swank server is running.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION
       "Port number used to make a Swank server connection.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "USOCKET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "USOCKET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION "USOCKET used to communicate with the Swank server.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THREAD-OFFSET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "THREAD-OFFSET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "All threads for this connection are presented to Emacs with this value added to
their thread ID.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTINUATION-COUNTER" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "CONTINUATION-COUNTER" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "Used to associate an ID with each evaluated form.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REX-CONTINUATIONS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "REX-CONTINUATIONS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION
       "List of (ID, continuation) pairs, one for each evaluation in progress. Used to
match each returned value with the continuation it should be passed to.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STATE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "STATE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION
       "State of the connection, either :ALIVE, :CLOSING, or :DEAD.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONNECTION-LOCK" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS
       ((:NAME "CONNECTION-LOCK" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
       :WRITERS NIL :DOCUMENTATION
       "Lock protecting slots of this connection that are read and written by
concurrently running threads.")))
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*OPEN-CONNECTIONS*" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION "List of all open Swank connections." :INITIAL-VALUE
     "'NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CONNECTIONS-LOCK*" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION "Lock protecting *OPEN-CONNECTIONS*." :INITIAL-VALUE
     "(BORDEAUX-THREADS:MAKE-LOCK)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-OPEN-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION "Adds CONNECTION to the set of open Swank connections.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-OPEN-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Removes CONNECTION from the set of open Swank connections.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-CONNECTION-FOR-THREAD-ID" :PACKAGE-NAME "SWANK-CLIENT"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "THREAD-ID" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the open Swank connection associated with THREAD-ID.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SERVER-THREAD-ID" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "THREAD-ID" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Maps the THREAD-ID in an event that must be forwarded to the thread ID known
by the remote Lisp to which it will be sent.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*IO-PACKAGE*" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(LET ((PACKAGE (MAKE-PACKAGE :SWANK-CLIENT-IO-PACKAGE :USE 'NIL)))
  (IMPORT '(NIL T QUOTE) PACKAGE)
  PACKAGE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-NET-ENCODE-LENGTH" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "N" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION "Encodes an integer as a 6-character, 24-bit hex string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-NET-SEND" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEXP" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "USOCKET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sends SEXP to a Swank server over USOCKET.  The s-expression is read and
evaluated by the remote Lisp.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-SEND" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEXP" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sends SEXP to a Swank server using CONNECTION.  Signals SLIME-NETWORK-ERROR
if there are communications problems.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-SECRET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Finds the secret file in the user's home directory.  Returns NIL if the file
doesn't exist; otherwise, returns the first line of the file.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SOCKET-KEEP-ALIVE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOCKET" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Configures TCP keep alive packets for SOCKET.  The socket connection will be
considered dead if keep alive packets are lost.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-NET-CONNECT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "HOST-NAME" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Establishes a connection to the Swank server listening on PORT of HOST-NAME.
Returns a SWANK-CONNECTION when the connection attempt is successful.
Otherwise, returns NIL.  May signal SLIME-NETWORK-ERROR if the user has a Slime
secret file and there are network problems sending its contents to the remote
Swank server.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DESTRUCTURE-CASE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATTERNS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Dispatches VALUE to one of PATTERNS.  A cross between CASE and DESTRUCTURING-BIND.
The pattern syntax is: ((HEAD . ARGS) . BODY).  The list of patterns is searched
for a HEAD that's EQ to the car of VALUE.  If one is found, BODY is executed
with ARGS bound to the corresponding values in the CDR of VALUE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEND-TO-EMACS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EVENT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION "Sends EVENT to Emacs.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-DISPATCH-EVENT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EVENT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Handles EVENT for a Swank CONNECTION.  Signals SLIME-NETWORK-ERROR if there
are communications problems.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-NET-READ" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Reads a Swank message from a network CONNECTION to a Swank server.  Returns
the Swank event or NIL, if there was a problem reading data.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "SLIME-REX" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SAVED-VARS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
      ((:NAME "SEXP" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       (:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTINUATIONS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION "(slime-rex (VAR ...) (SEXP CONNECTION) CLAUSES ...)

Remote EXecute SEXP.

VARs are a list of saved variables visible in the other forms.  Each VAR is
either a symbol or a list (VAR INIT-VALUE).

SEXP is evaluated and the PRINCed version is sent over CONNECTION to a remote
Lisp.

CLAUSES is a list of patterns with same syntax as `destructure-case'.  The
result of the evaluation of SEXP is dispatched on CLAUSES.  The result is either
a sexp of the form (:ok VALUE) or (:abort CONDITION).  CLAUSES is executed
asynchronously.

Signals SLIME-NETWORK-ERROR when there are network problems sending SEXP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-EVAL-ASYNC" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEXP" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTINUATION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sends SEXP over CONNECTION to a Swank server for evaluation, then immediately
returns.  Some time later, after the evaluation is finished, CONTINUATION is
called with the result as argument.  Signals SLIME-NETWORK-ERROR when there are
network problems sending SEXP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-EVAL" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEXP" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Sends SEXP over CONNECTION to a Swank server for evaluation and waits for the
result.  When the result is received, it is returned.  Signals
SLIME-NETWORK-ERROR when there are network problems sending SEXP.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-PENDING-EVALS-P" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns T if there are outstanding evaluations pending on CONNECTION;
otherwise, returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-MIGRATE-EVALS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OLD-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "NEW-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Evaluates on NEW-CONNECTION all the work pending on a closed OLD-CONNECTION.
Signals SLIME-NETWORK-ERROR when there are network problems.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-DISPATCH-EVENTS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "CONNECTION-CLOSED-HOOK" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Reads and dispatches incoming events for a CONNECTION to a Swank server.  If
provided, function CONNECTION-CLOSED-HOOK is called when CONNECTION is closed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-CONNECT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "HOST-NAME" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONNECTION-CLOSED-HOOK" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Connects to the Swank server running on HOST-NAME that is listening on PORT.
Returns a SWANK-CONNECTION if the connection attempt is successful.  Otherwise,
returns NIL.  May signal SLIME-NETWORK-ERROR if the user has a Slime secret file
and there are network problems sending its contents to the remote Swank server.
If provided, function CONNECTION-CLOSED-HOOK is called when the connection is
closed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SLIME-CLOSE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION "Closes CONNECTION to a Swank server.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SLIME-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VARIABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HOST-NAME" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       (:NAME "PORT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CONNECTION-CLOSED-HOOK" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
        NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Wraps BODY in a LET form where VARIABLE is bound to the value returned by
(SLIME-CONNECT HOST-NAME PORT CONNECTION-CLOSED-HOOK).  Arranges for the Swank
connection to be closed when control exits BODY."))
   :EXTERNAL-SYMBOLS
   ((:NAME "SLIME-CLOSE" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-CONNECT" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-EVAL" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-EVAL-ASYNC" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-NETWORK-ERROR" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-PENDING-EVALS-P" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SWANK-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "SLIME-MIGRATE-EVALS" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP T)
    (:NAME "WITH-SLIME-CONNECTION" :PACKAGE-NAME "SWANK-CLIENT" :EXTERNALP
     T)))))
