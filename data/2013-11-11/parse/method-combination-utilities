
(:TYPE :SYSTEM :NAME "method-combination-utilities" :AUTHOR
 "Greg Pfeil <greg@technomadic.org>" :MAINTAINER NIL :VERSION NIL :LICENCE
 "MIT" :DESCRIPTION
 "Various method combinations and utilities to make it easy to
                create new method combinations."
 :LONG-DESCRIPTION "See README.md" :DEPENDS-ON ("CLOSER-MOP") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "METHOD-COMBINATION-UTILITIES" :FULL-NAME
   "METHOD-COMBINATION-UTILITIES" :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "CALL-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "It's rare to see a method combination that doesn't define this method, so
   might as well pull it into this utilities package. CALL-METHODS returns a
   list of CALL-METHOD forms; one for each method in METHODS")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRAP-PRIMARY-FORM" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PRIMARY-FORM" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AROUND-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "BEFORE-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "AFTER-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "This is similar to COMBINE-STANDARD-METHODS, but it takes an already-
   generated primary form rather than a list of primary methods. This is because
   it is fairly common for a method combination to deal with primary methods in
   some specialized way, then combine them with normal :AROUND/:BEFORE/:AFTER
   methods. See the BASIC and APPEND/NCONC combinations in this package for
   examples.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINE-STANDARD-METHODS" :PACKAGE-NAME
      "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PRIMARY-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AROUND-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "BEFORE-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL)
      (:NAME "AFTER-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "It is fairly common practice to take the STANDARD method combination and wrap
   it with additional qualified methods. This encapsulates the standard behavior
   as much as possible to make wrapping simpler. Each argument should be a list 
   of methods to be handled the way the corresponding methods are in the
   STANDARD method combination. It assumes all the lists are ordered properly
   already. See the LAX method combination in this package for an example.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "METHOD-COMBINATION-EXPANDER-FUNCTION" :PACKAGE-NAME
      "METHOD-COMBINATION-UTILITIES" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "METHOD-COMBINATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "METHOD-COMBINATION-EXPANSION-FORM" :PACKAGE-NAME
      "METHOD-COMBINATION-UTILITIES" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXPANDER" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP
       NIL)
      (:NAME "GF" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP NIL)
      (:NAME "MC" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP NIL)
      (:NAME "METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "METHOD-COMBINATION-EXPAND" :PACKAGE-NAME
      "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FORM" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Given a function call form, this returns the method-combination form that
   would be generated in the process of satisfying that call. This is only
   expected to work for functions whose method-combination was created using
   the long form of DEFINE-METHOD-COMBINATION."))
   :EXTERNAL-SYMBOLS
   ((:NAME "LAX" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
    (:NAME "METHOD-COMBINATION-EXPAND" :PACKAGE-NAME
     "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
    (:NAME "WRAP-PRIMARY-FORM" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
     :EXTERNALP T)
    (:NAME "BASIC" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
    (:NAME "CALL-METHODS" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
     :EXTERNALP T)
    (:NAME "PRIMARY" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
    (:NAME "COMBINE-STANDARD-METHODS" :PACKAGE-NAME
     "METHOD-COMBINATION-UTILITIES" :EXTERNALP T)
    (:NAME "APPEND/NCONC" :PACKAGE-NAME "METHOD-COMBINATION-UTILITIES"
     :EXTERNALP T)))))
