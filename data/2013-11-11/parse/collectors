
(:TYPE :SYSTEM :NAME "collectors" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.1"
 :LICENCE "BSD" :DESCRIPTION "A library providing various collector type macros
   pulled from arnesi into its own library and stripped of dependencies"
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("ALEXANDRIA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "COLLECTORS" :FULL-NAME "COLLECTORS" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REDUCER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-VALUE-P" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Create a function which, starting with INITIAL-VALUE, reduces
any other values into a single final value.

FUNCTION will be called with two values: the current value and
the new value, in that order. FUNCTION should return exactly one
value.

The reducing function can be called with n arguments which will
be applied to FUNCTION one after the other (left to right) and
will return the new value.

If the reducing function is called with no arguments it will
return the current value.

Example:

 (setf r (make-reducer #'+ 5))
 (funcall r 0) => 5
 (funcall r 1 2) => 8
 (funcall r) => 8")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-REDUCER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Locally bind NAME to a reducing function. The arguments
FUNCTION and INITIAL-VALUE are passed directly to MAKE-REDUCER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      ((:NAME "COLLECT-NIL" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Create a collector function.

A Collector function will collect, into a list, all the values
passed to it in the order in which they were passed. If the
callector function is called without arguments it returns the
current list of values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Create an appender function.

An Appender will append any arguments into a list, all the values
passed to it in the order in which they were passed. If the
appender function is called without arguments it returns the
current list of values.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PUSHER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      ((:NAME "COLLECT-NIL" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Create a function which collects values as by PUSH.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Bind NAME to a collector function and execute BODY. If
  FROM-END is true the collector will actually be a pusher, (see
  MAKE-PUSHER), otherwise NAME will be bound to a collector,
  (see MAKE-COLLECTOR).

    (with-appender (app)
       (app '(1 2))
       (app '(2 3))
       (app '(3 4))
       (app)) => (1 2 2 3 3 4)

  ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-APPENDER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Same as with-appender, but this form returns the collected values
   automatically
  ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "COLLECT-NIL" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
       (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "FROM-END" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Bind NAME to a collector function and execute BODY. If
  FROM-END is true the collector will actually be a pusher, (see
  MAKE-PUSHER), otherwise NAME will be bound to a collector,
  (see MAKE-COLLECTOR).
    (with-collector (col)
       (col 1)
       (col 2)
       (col 3)
       (col)) => (1 2 3)
  ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COLLECTOR-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "COLLECT-NIL" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
       (:NAME "INITIAL-VALUE" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "FROM-END" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COLLECTORS" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAMES" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Bind multiple collectors. Each element of NAMES should be a
  list as per WITH-COLLECTOR's first orgument.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FORMATTER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PRETTY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION "Create a string formatter collector function.

creates a (lambda &optional format-string &rest args) and collects these in a list
When called with no args, returns the concatenated (with delimiter) results

binds *print-pretty* to nil
")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FORMATTER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PRETTY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "A macro makes a function with name for body that is a string formatter
see make-formatter")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FORMATTER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PRETTY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "A macro makes a function with name for body that is a string formatter
see make-formatter.
This form returns the result of that formatter")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-STRING-BUILDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      ((:NAME "IGNORE-EMPTY-STRINGS-AND-NIL" :PACKAGE-NAME "COLLECTORS"
        :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "PRETTY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Create a function that will build up a string for you
   Each call to the function with arguments appends those arguments to the string
   with an optional delimiter between them.

   if ignore-empty-strings-and-nil is true neither empty strings nor nil will be
   printed to the stream

   A call to the function with no arguments returns the output string")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-STRING-BUILDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       ((:NAME "IGNORE-EMPTY-STRINGS-AND-NIL" :PACKAGE-NAME "COLLECTORS"
         :EXTERNALP NIL)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "A macro that creates a string builder with name in scope during the
   duration of the env")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-STRING-BUILDER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DELIMITER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       ((:NAME "IGNORE-EMPTY-STRINGS-AND-NIL" :PACKAGE-NAME "COLLECTORS"
         :EXTERNALP NIL)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "A macro that creates a string builder with name in scope during the
   duration of the env, the form returns the string that is built")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-MAPPING-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "FN-ARGS" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FN-BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like a with-collector, but instead of a name we take a function spec

   if you call the resultant function with no arguments, you get the
     collection so far
   if you call it with arguments the results of calling your function spec are
     collected
   (with-mapping-collector (col (x) (* 2 x))
       (col 1)
       (col 2)
       (col 3)
       (col)) => (2 4 6)
   ")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-MAPPING-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "FN-ARGS" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL)
       (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "FN-BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "COLLECTORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like a with-appender, but instead of a name we take a function spec

   if you call the resultant function with no arguments, you get the
     collection so far
   if you call it with arguments the results of calling your function spec are
     collected
   (with-mapping-appender (app (l) (mapcar #'(lambda (x) (* 2 x)) l))
       (app '(1 2))
       (app '(2 3))
       (app '(3 4))
       (app)) => (2 4 4 6 6 8)
  "))
   :EXTERNAL-SYMBOLS
   ((:NAME "WITH-COLLECTOR-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-APPENDER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-REDUCER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-MAPPING-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-PUSHER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-COLLECTORS" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-FORMATTER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-MAPPING-APPENDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-STRING-BUILDER-OUTPUT" :PACKAGE-NAME "COLLECTORS" :EXTERNALP
     T)
    (:NAME "WITH-REDUCER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-FORMATTER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-STRING-BUILDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-FORMATTER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "WITH-COLLECTOR" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)
    (:NAME "MAKE-STRING-BUILDER" :PACKAGE-NAME "COLLECTORS" :EXTERNALP T)))))
