
(:TYPE :SYSTEM :NAME "quux-time" :AUTHOR NIL :MAINTAINER NIL :VERSION NIL
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON NIL
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "QUUX-TIME" :FULL-NAME "QUUX-TIME" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT-EQL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT-EQUAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT-EQUALP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT-UNEQUAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT-EQX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "EQX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DEFCONSTANT-EQX-VALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "EQX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFUN-INLINE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "ARGLIST" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$FIXNUM-MAX-BIT-INDEX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The maximum amount that a fixnum can be shifted."
     :INITIAL-VALUE "28")
    (:TYPE :MACRO :SYMBOL (:NAME "I+" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the + function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I-" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the - function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I*" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the * function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I/" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the / function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I=" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the = function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "I/=" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the /= function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I<" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the < function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "I<=" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the <= function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL (:NAME "I>" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the > function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "I>=" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the >= function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMAX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the max function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMIN" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the min function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMOD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the mod function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IREM" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the rem function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IFLOOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the floor function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IFLOOR+" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the floor+ function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ITRUNCATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the truncate function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ICEILING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the ceiling function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ICEILING+" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the ceiling+ function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "I1+" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the 1+ function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "I1-" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the 1- function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IZEROP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the zerop function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IPLUSP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the plusp function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMINUSP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the minusp function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IASH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "A version of the ash function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGIOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logior function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGAND" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logand function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGXOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logxor function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGEQV" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIXNUMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logeqv function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGANDC2" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logandc2 function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGNOT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     "A version of the lognot function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGTEST" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the logtest function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGBITP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "INDEX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "A version of the logbitp function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILOGCOUNT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NUMBER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "A version of the logcount function that can only be used on fixnums.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ILOGBIT-SET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a fixnum and an index, return the fixnum with the index'ed bit set to one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ILOGBIT-UNSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a fixnum and an index, return the fixnum with the index'ed bit set to zero.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ILOGSUBSETP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N1" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "N2" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given two fixnums, return true if the bits set in n1 are a subset
   of the bits set in n2.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ILDB" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "BYTESPEC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the ldb function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IDPB" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NEWVALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "BYTESPEC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "A version of the dpb function that can only be used on fixnums.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IINCF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DELTA" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 1)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION "Set place to + of place and argument, for fixnums only.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IDECF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DELTA" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 1)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION "Set place to - of place and argument, for fixnums only.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MINF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "XS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION "Set place to min of place and argument.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAXF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "XS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION "Set place to max of place and argument.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMINF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "XS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION
     "Set place to min of place and argument, for fixnums only.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "IMAXF" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "XS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION
     "Set place to max of place and argument, for fixnums only.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CHECK-TYPES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Each clause looks like (type form1 form2 ..).
   For each clause, assert that all the forms are of that type.
   Example: (check-types (integer x y) (string z) ...).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MULTIPLE-VALUE-LET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DECLS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "MULTIPLE-VALUE-LET ({(Varlist [Multiple-Value]) | (Var [Value]) | Var}*) Declaration* Form*
  During evaluation of the Forms, Bind the Vars to the result of evaluating the
  Value forms.  If a list of variables is given, they are bound to each of the
  VALUES returned by the expression, in order.  The variables are bound in
  parallel after all of the Values are evaluated.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MULTIPLE-VALUE-LET*" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "DECL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "DECLS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "MULTIPLE-VALUE-LET* ({(Varlist [Multiple-Value]) | (Var [Value]) | Var}*) Declaration* Form*
  During evaluation of the Forms, Bind the Vars to the result of evaluating the
  Value forms.  If a list of variables is given, they are bound to each of the
  VALUES returned by the expression, in order.  The variables are bound in
  series, so any declaration may refer to any earlier one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASCII-DIGIT-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "If the character is an ASCII digit, return the value of the digit.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UPPER-CASE-ASCII-LETTER-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return true if the character is an ASCII uppercase character.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOWER-CASE-ASCII-LETTER-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "CH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return true if the character is an ASCII lowercase character.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ASCII-LETTER-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "CH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return true if the character is an ASCII alphabetic character.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENDS-WITH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SUFFIX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENDS-WITH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SUFFIX" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENDS-WITH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SUFFIXES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-GENSYMS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "BINDINGS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "BINDINGS is a list of clauses.  The canonical clause looks like
    (VARIABLE PREFIX) where VARIABLE is a Lisp variable, and PREFIX
    is a string (or anything acceptable to the STRING) function.
    Each VARIABLE is bound to a gensym, made with the PREFIX, and
    the body is run inside those bindings.  A clause of the form
    (VARIABLE) or VARIABLE is treated as (VARIABLE VARIABLE).
    This is available at compile-time, so macro bodies can use it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-TO-INTEGER" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-RIGHT-TRIMMING-WHITESPACE" :PACKAGE-NAME "QUUX-TIME"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNPADDED-INTEGER-STRINGS*" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "A 1000-element vector of the printed representation of each integer
   without any padding."
     :INITIAL-VALUE "(LET ((VECTOR (MAKE-ARRAY 10000)))
  (LOOP QUUX-TIME::FOR QUUX-TIME::I FIXNUM QUUX-TIME::FROM 0 QUUX-TIME::BELOW 10000
        DO (SETF (SVREF VECTOR QUUX-TIME::I) (FORMAT NIL \"~D\" QUUX-TIME::I)))
  VECTOR)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ZERO-PADDED-INTEGER-STRINGS-2*" :PACKAGE-NAME "QUUX-TIME"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "A 100-element vector of the printed representation of each integer
   zero-padded to two characters."
     :INITIAL-VALUE "(APPLY #'VECTOR
       (LOOP QUUX-TIME::FOR QUUX-TIME::I FIXNUM QUUX-TIME::FROM 0 QUUX-TIME::BELOW 100
             QUUX-TIME::COLLECTING (FORMAT NIL \"~2,'0D\" QUUX-TIME::I)))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ZERO-PADDED-INTEGER-STRINGS-4*" :PACKAGE-NAME "QUUX-TIME"
      :EXTERNALP NIL)
     :DOCUMENTATION
     "A 10000-element vector of the printed representation of each integer
    zero-padded to two characters."
     :INITIAL-VALUE "(LET ((VECTOR (MAKE-ARRAY 10000)))
  (LOOP QUUX-TIME::FOR QUUX-TIME::I FIXNUM QUUX-TIME::FROM 0 QUUX-TIME::BELOW 10000
        DO (SETF (SVREF VECTOR QUUX-TIME::I)
                   (FORMAT NIL \"~4,'0D\" QUUX-TIME::I)))
  VECTOR)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-INTEGER" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      ((:NAME "PADDING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) #\ ))
     :DOCUMENTATION
     "Write the integer to the stream.  If it's a fixnum and width
   is provided, pad it to that width with the padding character.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-UNPADDED-FIXNUM" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FIXNUM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Write the fixnum to the stream.  This is more efficient
   than using the regular Lisp printer.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-PADDED-FIXNUM" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FIXNUM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "PAD-CHAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Write the fixnum to the stream, with the given width and padding.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-PADDED-FIXNUM-INTERNAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "FIXNUM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ABSOLUTE-VALUE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PAD-CHAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PAD-STRING-TO-WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "PAD-CHAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Pad the string on the left until it is as long as width.
   If it is already longer than that, signal an exception.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-INTEGER-TO-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WIDTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      ((:NAME "PADDING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) #\ ))
     :DOCUMENTATION "Convenience function for int to string conversion.
   Is actually a lot cheaper than prin1-to-string (1/3 the time and consing)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INTEGER-NUMBER-OF-DIGITS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "I" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Return the number of digits in the printed representation
   of I, which must be a non-negative integer.")
    (:TYPE :TYPE :SYMBOL
     (:NAME "INTEGER-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "INTEGER-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "INTEGER-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "INTEGER-DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+400-YEARS-OF-SECONDS+" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The number of seconds in four hundred years"
     :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::+400-YEARS-OF-SECONDS+
                                   (-
                                    (ENCODE-UNIVERSAL-TIME 0 0 0 1 4
                                                           (+ 400 2010) 0)
                                    (ENCODE-UNIVERSAL-TIME 0 0 0 1 4 2010 0))
                                   #'EQUAL)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-UNIVERSAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SECOND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MINUTE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "HOUR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME-ZONE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Extend to return negative values for years < 1900")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-UNIVERSAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIVERSAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME-ZONE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Extend to decode negative numbers")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$1WEEK" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one week, in integer-time." :INITIAL-VALUE "604800")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$24HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one day, in integer-time." :INITIAL-VALUE "86400")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$12HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one half-day, in integer-time." :INITIAL-VALUE "43200")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$4HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of four hours, in integer-time." :INITIAL-VALUE "14400")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$1HOUR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one hour, in integer-time." :INITIAL-VALUE "3600")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$1MINUTE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one minute, in integer-time." :INITIAL-VALUE "60")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$1SECOND" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :DOCUMENTATION
     "The duration of one second, in integer-time." :INITIAL-VALUE "1")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LARGEST-TZ-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The largest possible timezone offset, in integer-time."
     :INITIAL-VALUE "50400")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$FIRST-MINUTE-OF-DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION
     "The first minute of a day (i.e. 00:00, midnight), in integer-time."
     :INITIAL-VALUE "0")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LAST-MINUTE-OF-DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The last minute of a day (i.e. 23:59), in integer-time."
     :INITIAL-VALUE "86340")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$TIME-IN-DISTANT-PAST" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "A time in the distant past." :INITIAL-VALUE "0")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$TIME-IN-DISTANT-FUTURE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "A time in the distant future." :INITIAL-VALUE
     "19723132800")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-TOFD-ONLY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Zero the date bits of a integer-time, leaving the tofd bits alone.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-ONLY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Zero the time bits of a integer-time, leaving the date bits alone.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-MINUTE-OF-LOCAL-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return the integer-time representing the first minute on the given date.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LAST-MINUTE-OF-LOCAL-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return the integer-time representing the last minute on the given date.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROLL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "MONTHS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "YEARS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Return an integer-time before/after TIME by SECONDS, MINUTES,
HOURS, DAYS, MONTHS or YEARS.

TIME - an integer-time (number of seconds since epoch).

SECONDS, MINUTES, HOURS, DAYS, MONTHS, YEARS - integers.

ROLL-TIME operates by adding/subtracting SECONDS, MINUTES, HOURS,
DAYS, MONTHS and YEARS (in that order) to the facsimile time
TIME. ROLL-TIME treats TIME simply as the number of seconds since
epoch ignoring DST, time zones and anything else which isn't
passed as an argument to `encode-integer-time'.

Notes:

1) The length of months, expressed as a number of days,
varies. Therefore it does not always hold that:

  (= x (roll-time (roll-time x :months M :years Y)
       :months -M :years -Y))

2) If the result of rolling, even in an interedmiate step, ends
   up before 1900-01-01T00:00:00 we lose. Example:

 (roll-time (encode-universal-time 0 0 0 1 1 1900)
            :days -31 :months 3)
 ==> ERROR")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADVANCE-LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An immutable time object which includes timezone information.
   If both local and UTC views are ever relevant for some absolute temporal
   quantity, then a zoned-time should be used to represent that quantity."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "UTC-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION "UTC integer-time representation of moment")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TZ-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS
       ((:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :WRITERS
       NIL :DOCUMENTATION "Offset (seconds) to local timezone (from UTC)")))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Pretty-print a zoned-time object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "TIME-DESIGNATOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Transform the argument into a ZONED-TIME instance.
 A string is parse  in ISO8601 syntax, a ZONED-TIME instance is returned, and an integer is used as
 the utc argument to construct a new ZONED-TIME instance with offset 0.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "TIME-DESIGNATOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "UTC-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "INTEGER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)))
     :DOCUMENTATION "Return the local time of a zoned-time object.

  Returns an 'integer-time', i.e. seconds since the beginning of the
  lisp epoch.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      ((:NAME "B" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Compute the signed duration (in seconds) from moment 'a' to moment 'b'.

  'a' and 'b' are 'zoned-time' quantities.
   If b is later than a, then the result is positive.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ZONED-TIME-EQUAL-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      ((:NAME "B" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Return T if zoned-times A and B are equal (same time and tzoffset)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-IS-BEFORE-UTC-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Return T if 'a' precedes 'b' in absolute (UTC) time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-IS-AFTER-UTC-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Return T if 'a' succeeds 'b' in absolute (UTC) time.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-ZONED-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "Z" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Create a zoned-time matching input, but with zero'ed time components.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "Z" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Add some number of days to a zoned-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SERVER-SYSTEM-TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Return the server's true UTC system time (as an integer-time).

  This function returns the real UTC time as seen by the server's clock,
  and should only be used in situations such as logging, where the true
  physical clock time is important.

  Otherwise, one should always use CURRENT-TIME-UTC.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURRENT-TIME-FUNCTION*" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "#'GET-UNIVERSAL-TIME")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Return the 'current' UTC time (as an integer-time).

  The 'current' time may have been cached by 'with-current-time-cached',
  or it may be skewed by 'with-current-time-function'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-TIME-UTC-DB-OVERRIDE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-TIME-UTC-DB-OVERRIDE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-TIME-ZONED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Return the 'current' UTC time (as a zoned time).

  The 'current' time may have been cached by 'with-current-time-cached',
  or it may be skewed by 'with-current-time-function'.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CURRENT-TIME-CACHED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "OVERRIDE-TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Create a scope which caches/freezes the current UTC time.

  This scope caches the result of (current-time-utc).  Evaluations of
  (current-time-utc) within the scope will return the cached value.
  If the optional 'override-time-utc' is provided, then the scope will
  cache that value instead.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITHOUT-CURRENT-TIME-TRICKERY" :PACKAGE-NAME "QUUX-TIME"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a scope that undoes any of the current-time caches/functions.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITHOUT-CURRENT-TIME-CACHED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "DEPRECATED; use 'without-current-time-trickery' instead.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CURRENT-TIME-FUNCTION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "NEW-TIME-FUNCTION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ALLOW-NESTING?" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a scope in which the current time is generated by a function.

  Within this scope, evaluations of (current-time-utc) will report the
  time as generated by 'new-time-function', instead of the time as
  reported by the operating system.

  For example, to create a scope where time runs 5x faster than normal:
    (with-current-time-function ((time-speeder-upper 5))
      (process-sleep 1)
      (current-time-utc))   ; This returns a time 4s in the future

  These scopes may be nested. Nesting is disabled by default, since you're
  probably shooting yourself in the foot by it.

  The inner-most function is first executed; if it refers to
  (current-time-utc), which (time-speeder-upper) does, then the function in the
  outer scope will provide that value. E.g. nesting two (tims-speeder-upper)s
  will have the effect of speeding time by the product of their rates.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CURRENT-INTEGER-TIME-FIXED" :PACKAGE-NAME "QUUX-TIME"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "INTEGER-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CURRENT-TIME-FIXED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SECOND" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "MINUTE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "HOUR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-VIRTUAL-SLEEP" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
       ((:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
       ((:NAME "MINS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
       ((:NAME "SECS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-SPEEDER-UPPER" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a lambda that generates time at 'rate' x normal rate.

  For use in the (with-current-time-function) macro.

  Note that this clock still 'ticks' once per wallclock second; it is just that each tick moves
  the time forward a large amount. If 'current-time-utc' is called multiple times within that
  second, time will appear to be frozen.

  See 'time-speeder-upper-hires' for a clock that ticks more often.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-SPEEDER-UPPER-HIRES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "RATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a lambda that generates time at 'rate' x normal rate, at high resolution.

  For use in the (with-current-time-function) macro.

  This clock ticks at the rate given by 'internal-time-units-per-second', typically 100.

  Note: this clock breaks nesting, since it only relies on the outer scope to set
  the initial time for the clock.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROUND-TIME-TO-NEXT-MINUTE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Round up an integer-time to the nearest larger minute.

   Returns an integer number of minutes, which, when multiplied by $1minute, will be 0-60 greater
   than the input.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$IT-CACHE-FIRST-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The first year of precomputed integer-time en-/de-coding"
     :INITIAL-VALUE "1900")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$IT-CACHE-LAST-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "The last year of precomputed integer-time en-/de-coding"
     :INITIAL-VALUE "2100")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$IT-CACHE-FIRST-DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION
     "The first day (since epoch) of precomputed integer-time en-/de-coding."
     :INITIAL-VALUE "(FLOOR
 (QUUX-TIME::ENCODE-UNIVERSAL-TIME 0 0 0 1 1 QUUX-TIME::$IT-CACHE-FIRST-YEAR 0)
 QUUX-TIME::$24HOURS)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$IT-CACHE-LAST-DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION
     "The last day (since epoch) of precomputed integer-time en-/de-coding."
     :INITIAL-VALUE "(FLOOR
 (QUUX-TIME::ENCODE-UNIVERSAL-TIME 0 0 0 31 12 QUUX-TIME::$IT-CACHE-LAST-YEAR
                                   0)
 QUUX-TIME::$24HOURS)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$DAYS-UNTIL-YEAR-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION
     "An array which maps (year,month) --> (days preceding that year/month)
   where 'days' starts at the lisp epoch.
   The map starts with the first month of year '$it-cache-first-year'
   and ends with the last month of year '$it-cache-last-year'.
   And, there are 13 months in a year -- i.e. [0,12] are valid months,
   and month 0 is the same as month 1."
     :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$DAYS-UNTIL-YEAR-MONTH
                                   (LET ((QUUX-TIME::V
                                          (MAKE-ARRAY
                                           (QUUX-TIME::I* 13
                                                          (1+
                                                           (-
                                                            QUUX-TIME::$IT-CACHE-LAST-YEAR
                                                            QUUX-TIME::$IT-CACHE-FIRST-YEAR))))))
                                     (DO ((QUUX-TIME::YEAR QUUX-TIME::$IT-CACHE-FIRST-YEAR
                                                           (1+
                                                            QUUX-TIME::YEAR)))
                                         ((> QUUX-TIME::YEAR
                                             QUUX-TIME::$IT-CACHE-LAST-YEAR)
                                          QUUX-TIME::V)
                                       (DECLARE (TYPE FIXNUM QUUX-TIME::YEAR))
                                       (DO ((QUUX-TIME::MONTH 0
                                                              (1+
                                                               QUUX-TIME::MONTH)))
                                           ((> QUUX-TIME::MONTH 12))
                                         (DECLARE
                                          (TYPE FIXNUM QUUX-TIME::MONTH))
                                         (SETF (SVREF QUUX-TIME::V
                                                      (QUUX-TIME::I+
                                                       QUUX-TIME::MONTH
                                                       (QUUX-TIME::I* 13
                                                                      (QUUX-TIME::I-
                                                                       QUUX-TIME::YEAR
                                                                       QUUX-TIME::$IT-CACHE-FIRST-YEAR))))
                                                 (LET* ((QUUX-TIME::MONTH
                                                         (IF (QUUX-TIME::I=
                                                              QUUX-TIME::MONTH
                                                              0)
                                                             1
                                                             QUUX-TIME::MONTH))
                                                        (TIME
                                                         (QUUX-TIME::ENCODE-UNIVERSAL-TIME
                                                          0 0 0 1
                                                          QUUX-TIME::MONTH
                                                          QUUX-TIME::YEAR 0)))
                                                   (FLOOR TIME
                                                          QUUX-TIME::$24HOURS))))))
                                   #'EQUALP)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DAYS-UNTIL-YEAR-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the number of days since the lisp epoch which precede the
   given (year, month).  For example:  (1900 2) --> 31 days.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$DAYS-PER-FEBRUARY-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array which maps (year) --> (days in february that year)
   The map starts with the first month of year '$it-cache-first-year'
   and ends with the last month of year '$it-cache-last-year'."
     :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$DAYS-PER-FEBRUARY-YEAR
                                   (LET ((QUUX-TIME::V
                                          (MAKE-ARRAY
                                           (QUUX-TIME::I+ 1
                                                          (QUUX-TIME::I-
                                                           QUUX-TIME::$IT-CACHE-LAST-YEAR
                                                           QUUX-TIME::$IT-CACHE-FIRST-YEAR)))))
                                     (DO ((QUUX-TIME::YEAR QUUX-TIME::$IT-CACHE-FIRST-YEAR
                                                           (1+
                                                            QUUX-TIME::YEAR)))
                                         ((> QUUX-TIME::YEAR
                                             QUUX-TIME::$IT-CACHE-LAST-YEAR)
                                          QUUX-TIME::V)
                                       (DECLARE (TYPE FIXNUM QUUX-TIME::YEAR))
                                       (SETF (SVREF QUUX-TIME::V
                                                    (QUUX-TIME::I-
                                                     QUUX-TIME::YEAR
                                                     QUUX-TIME::$IT-CACHE-FIRST-YEAR))
                                               (QUUX-TIME::I-
                                                (QUUX-TIME::%DAYS-UNTIL-YEAR-MONTH
                                                 QUUX-TIME::YEAR 3)
                                                (QUUX-TIME::%DAYS-UNTIL-YEAR-MONTH
                                                 QUUX-TIME::YEAR 2)))))
                                   #'EQUALP)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DAYS-PER-FEBRUARY-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Return the number of days in February of the given year
   For example:  1900 --> 28 days.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$DAYS-PER-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array mapping (month) --> (days in month)
   The value for February is, of course, incorrect during leap years,
   hence the need for %days-per-february-year defined above."
     :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$DAYS-PER-MONTH
                                   (MAKE-ARRAY 12 :INITIAL-CONTENTS
                                               '(31 28 31 30 31 30 31 31 30 31
                                                 30 31))
                                   #'EQUALP)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "$DAYS-UNTIL-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION
     "An array mapping (month) --> (days before beginning of month)
   The value for months after February is, of course, incorrect
   during leap years."
     :INITIAL-VALUE "(LET ((QUUX-TIME::V (MAKE-ARRAY 12 :INITIAL-ELEMENT 0)))
  (LOOP QUUX-TIME::FOR QUUX-TIME::M QUUX-TIME::FROM 0 QUUX-TIME::BELOW 12
        QUUX-TIME::FOR QUUX-TIME::TOTAL = 0 QUUX-TIME::THEN (+ QUUX-TIME::TOTAL
                                                               QUUX-TIME::NEXT)
        QUUX-TIME::FOR QUUX-TIME::NEXT = (SVREF QUUX-TIME::$DAYS-PER-MONTH
                                                QUUX-TIME::M)
        QUUX-TIME::DOING (SETF (SVREF QUUX-TIME::V QUUX-TIME::M)
                                 QUUX-TIME::TOTAL))
  QUUX-TIME::V)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "$YEAR-FROM-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array which maps (days since epoch) --> (year)
   The zeroth entry in the array is for $it-cache-first-day,
   the last entry is for $it-cache-last-day."
     :INITIAL-VALUE "(LET ((QUUX-TIME::V
       (MAKE-ARRAY
        (- QUUX-TIME::$IT-CACHE-LAST-DAY QUUX-TIME::$IT-CACHE-FIRST-DAY -1))))
  (DO ((QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-FIRST-DAY (1+ QUUX-TIME::DAYS)))
      ((> QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-LAST-DAY) QUUX-TIME::V)
    (MULTIPLE-VALUE-BIND
        (QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY QUUX-TIME::MONTH
         QUUX-TIME::YEAR)
        (QUUX-TIME::DECODE-UNIVERSAL-TIME
         (* QUUX-TIME::DAYS QUUX-TIME::$24HOURS) 0)
      (DECLARE
       (IGNORE QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY
        QUUX-TIME::MONTH))
      (SETF (SVREF QUUX-TIME::V QUUX-TIME::DAYS) QUUX-TIME::YEAR))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "$MONTH-FROM-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array which maps (days since epoch) --> (month-of-year),
   where month-of-year is in the range [1,12].
   The zeroth entry in the array is for $it-cache-first-day,
   the last entry is for $it-cache-last-day."
     :INITIAL-VALUE "(LET ((QUUX-TIME::V
       (MAKE-ARRAY
        (- QUUX-TIME::$IT-CACHE-LAST-DAY QUUX-TIME::$IT-CACHE-FIRST-DAY -1))))
  (DO ((QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-FIRST-DAY (1+ QUUX-TIME::DAYS)))
      ((> QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-LAST-DAY) QUUX-TIME::V)
    (MULTIPLE-VALUE-BIND
        (QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY QUUX-TIME::MONTH
         QUUX-TIME::YEAR)
        (QUUX-TIME::DECODE-UNIVERSAL-TIME
         (* QUUX-TIME::DAYS QUUX-TIME::$24HOURS) 0)
      (DECLARE
       (IGNORE QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY
        QUUX-TIME::YEAR))
      (SETF (SVREF QUUX-TIME::V QUUX-TIME::DAYS) QUUX-TIME::MONTH))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "$DAY-FROM-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array which maps (days since epoch) --> (day-of-month)
   where day-of-month is in the range [1,N].
   The zeroth entry in the array is for $it-cache-first-day,
   the last entry is for $it-cache-last-day."
     :INITIAL-VALUE "(LET ((QUUX-TIME::V
       (MAKE-ARRAY
        (- QUUX-TIME::$IT-CACHE-LAST-DAY QUUX-TIME::$IT-CACHE-FIRST-DAY -1))))
  (DO ((QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-FIRST-DAY (1+ QUUX-TIME::DAYS)))
      ((> QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-LAST-DAY) QUUX-TIME::V)
    (MULTIPLE-VALUE-BIND
        (QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY QUUX-TIME::MONTH
         QUUX-TIME::YEAR)
        (QUUX-TIME::DECODE-UNIVERSAL-TIME
         (* QUUX-TIME::DAYS QUUX-TIME::$24HOURS) 0)
      (DECLARE
       (IGNORE QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::MONTH
        QUUX-TIME::YEAR))
      (SETF (SVREF QUUX-TIME::V QUUX-TIME::DAYS) QUUX-TIME::DAY))))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "$DOFW-FROM-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION "An array which maps (days since epoch) --> (day-of-week)
   where day-of-week is in the range [0,6] for [mon,sun].
   The zeroth entry in the array is for $it-cache-first-day,
   the last entry is for $it-cache-last-day."
     :INITIAL-VALUE "(LET ((QUUX-TIME::V
       (MAKE-ARRAY
        (- QUUX-TIME::$IT-CACHE-LAST-DAY QUUX-TIME::$IT-CACHE-FIRST-DAY -1))))
  (DO ((QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-FIRST-DAY (1+ QUUX-TIME::DAYS)))
      ((> QUUX-TIME::DAYS QUUX-TIME::$IT-CACHE-LAST-DAY) QUUX-TIME::V)
    (MULTIPLE-VALUE-BIND
        (QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY QUUX-TIME::MONTH
         QUUX-TIME::YEAR QUUX-TIME::WEEKDAY)
        (QUUX-TIME::DECODE-UNIVERSAL-TIME
         (* QUUX-TIME::DAYS QUUX-TIME::$24HOURS) 0)
      (DECLARE
       (IGNORE QUUX-TIME::S QUUX-TIME::M QUUX-TIME::H QUUX-TIME::DAY
        QUUX-TIME::MONTH QUUX-TIME::YEAR))
      (SETF (SVREF QUUX-TIME::V QUUX-TIME::DAYS) QUUX-TIME::WEEKDAY))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%YEAR-FROM-2DIGIT-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "2DIGIT-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Convert an ambiguous 2-digit year into an unambiguous 4+-digit year.

  Years before '70 are assumed to be in the 2000's.
  '70 and later are assumed to be in the 1900's.
  This function doesn't check that input *is* a 2-digit year.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DAYS-PER-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Return the number of days in a given month in a given year.

  'month' is in the range [1,12] (where 1 == January).
  'year' is the year -- which only affects the result for February.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-INTEGER-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Encode a broken-down time specification into integer-time.
  Input is the seconds, minutes, hours, day, month, and year.
  Result is an integer-time (seconds since lisp epoch).

  This function is equivalent to (encode-univeral-time ... 0),
  but is precomputed and thus faster for years in the range
  [$it-cache-first-year,$it-cache-last-year].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-INTEGER-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Encode a broken-down date specification into integer-time.
  Input is the day, month, and year.
  Result is an integer-time (seconds since lisp epoch).

  This function is equivalent to (encode-integer-time 0 0 0 ...),
  but can be 3x as fast.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENCODE-INTEGER-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Encode a broken-down time-of-day specification into integer-time.
  Input is the seconds, minutes, and hours.
  Result is an integer-tofd (seconds since midnight).

  This function is equivalent to (encode-integer-time ... 0 0 0),
  but is 7.5x as fast and does almost no consing (since a tofd always
  fits in a fixnum.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-INTEGER-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Decode an integer-time into its broken-down components.

  Input is an integer-time.
  Result is the values
      <seconds> <minutes> <hours> <day> <month> <year> <dofw>.
  This function is equivalent to (decode-universal-time ... 0),
  but is precomputed and thus faster for years in the range
  [$it-cache-first-year,$it-cache-last-year].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-INTEGER-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Decode an integer-time into only its broken-down date components.

  Input is an integer-time.
  Result is the values <day> <month> <year> <dofw>.
  This function is equivalent to (decode-universal-time ... 0),
  but is precomputed and thus faster for years in the range
  [$it-cache-first-year,$it-cache-last-year].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-INTEGER-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Decode an integer-time into only its broken-down time-of-day components.

  Input is an integer-time.
  Result is the values <seconds> <minutes> <hours>.
  This function is equivalent to (decode-universal-time ... 0),
  but is precomputed and thus faster for years in the range
  [$it-cache-first-year,$it-cache-last-year].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DAYS-UNTIL-MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the number of days preceding the given month in the given year.
   For example:  March, 2004 --> (3 2004) --> 60 days")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DAY-OF-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Extract the 1-based day-of-year from an integer-time.
    E.g. January 1 (of any year) --> 1

  'time' is an integer-time.
  Result is an integer in the range [1,366].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME1" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME2" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the (integer) difference in _date_ between two local times.

  This is essentially the difference in 'printed days', not the
  difference in '24-hour periods'.
  For example, '2005-03-05 23:00' and '2005-03-06 01:00' will yield
  a 1 day difference in date, even though they are only 2 hours apart.

  'time1' and 'time2' are local 'integer-times'.
  The result is positive if time2 is later than time1.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-TIME-TO-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a local integer-time and a TZ offset, return the UTC integer-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-TIME-TO-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a UTC integer-time and a TZ offset, return the local integer-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-EQUAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATE1" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "DATE2" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return T if 'date1' and 'date2' have equal day, month, and year.

  'date1' and 'date2' are integer-time's.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-DATE-AND-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Merge a 'date' with a 'tofd'.

   Take the date components of 'date' (an integer-time)
   and merge them with the time components of 'tofd' (another
   integer-time), generating a new integer-time.

   ('date' and 'time' should be local to the same TZ, although
   the result is effectively in the same relative TZ as 'tofd'.)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-TO-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LOCAL-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "LOCAL-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Convert the given LOCAL-DATE/LOCAL-TOFD to UTC and return the date part.
   For example: 1-MAR 23:00 EST -> 2-MAR")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-DATE-TO-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UTC-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "LOCAL-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TZOFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the local date for the given local time and UTC date.
   For example: 2-MAR 23:00 EST -> 1-MAR")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OVERRIDE-LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Override specific date/tofd components of an integer-time.

  Returns the new integer-time constructed by replacing the specified
  components of the original integer-time 'time'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADVANCE-TO-NEXT-DAY-OF-WEEK" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEEP-TOFD-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the time corresponding to the next WEEKDAY calculated from TIME.
   WEEKDAY is an integer with 0 corresponding to Monday, 6 to Sunday.
   KEEP-TOFD-P, if non-NIL, indicates that the time portion of TIME should be
   carried over to the generated time.  By default, 0:00h is returned for the
   time potions.  Returns a timezone agnostic universal time.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$UPPERCASE-MONTHS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$UPPERCASE-MONTHS
                                   '#(\"JAN\" \"FEB\" \"MAR\" \"APR\" \"MAY\" \"JUN\" \"JUL\"
                                      \"AUG\" \"SEP\" \"OCT\" \"NOV\" \"DEC\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$MIXEDCASE-MONTHS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$MIXEDCASE-MONTHS
                                   '#(\"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\"
                                      \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LOWERCASE-MONTHS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$LOWERCASE-MONTHS
                                   '#(\"jan\" \"feb\" \"mar\" \"apr\" \"may\" \"jun\" \"jul\"
                                      \"aug\" \"sep\" \"oct\" \"nov\" \"dec\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$UPPERCASE-MONTHS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$UPPERCASE-MONTHS-LONG
                                   #(\"JANUARY\" \"FEBRUARY\" \"MARCH\" \"APRIL\" \"MAY\"
                                     \"JUNE\" \"JULY\" \"AUGUST\" \"SEPTEMBER\"
                                     \"OCTOBER\" \"NOVEMBER\" \"DECEMBER\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$MIXEDCASE-MONTHS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$MIXEDCASE-MONTHS-LONG
                                   #(\"January\" \"February\" \"March\" \"April\" \"May\"
                                     \"June\" \"July\" \"August\" \"September\"
                                     \"October\" \"November\" \"December\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LOWERCASE-MONTHS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$LOWERCASE-MONTHS-LONG
                                   #(\"january\" \"february\" \"march\" \"april\" \"may\"
                                     \"june\" \"july\" \"august\" \"september\"
                                     \"october\" \"november\" \"december\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$UPPERCASE-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$UPPERCASE-DAYS
                                   '#(\"MON\" \"TUE\" \"WED\" \"THU\" \"FRI\" \"SAT\"
                                      \"SUN\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$MIXEDCASE-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$MIXEDCASE-DAYS
                                   '#(\"Mon\" \"Tue\" \"Wed\" \"Thu\" \"Fri\" \"Sat\"
                                      \"Sun\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LOWERCASE-DAYS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$LOWERCASE-DAYS
                                   '#(\"mon\" \"tue\" \"wed\" \"thu\" \"fri\" \"sat\"
                                      \"sun\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$UPPERCASE-DAYS-WS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$UPPERCASE-DAYS-WS
                                   '#(\"MON \" \"TUE \" \"WED \" \"THU \" \"FRI \" \"SAT \"
                                      \"SUN \")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$MIXEDCASE-DAYS-WS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$MIXEDCASE-DAYS-WS
                                   '#(\"Mon \" \"Tue \" \"Wed \" \"Thu \" \"Fri \" \"Sat \"
                                      \"Sun \")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LOWERCASE-DAYS-WS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$LOWERCASE-DAYS-WS
                                   '#(\"mon \" \"tue \" \"wed \" \"thu \" \"fri \" \"sat \"
                                      \"sun \")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$UPPERCASE-DAYS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$UPPERCASE-DAYS-LONG
                                   '#(\"MONDAY\" \"TUESDAY\" \"WEDNESDAY\" \"THURSDAY\"
                                      \"FRIDAY\" \"SATURDAY\" \"SUNDAY\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$MIXEDCASE-DAYS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$MIXEDCASE-DAYS-LONG
                                   '#(\"Monday\" \"Tuesday\" \"Wednesday\" \"Thursday\"
                                      \"Friday\" \"Saturday\" \"Sunday\")
                                   #'EQUALP)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "$LOWERCASE-DAYS-LONG" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(QUUX-TIME::%DEFCONSTANT-EQX-VALUE 'QUUX-TIME::$LOWERCASE-DAYS-LONG
                                   '#(\"monday\" \"tuesday\" \"wednesday\" \"thursday\"
                                      \"friday\" \"saturday\" \"sunday\")
                                   #'EQUALP)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MONTH-NAME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIZE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "SHORT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "CASE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UPPER" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Return a string containing the English name of a numeric month.

  'month' belongs to the range [1,12] (1==January).
  'size' is one of :short (default) or :long, specifying size of name.
  'case' is one of :upper (default), :mixed or :lower.
  Return value is a string, or NIL if the month is not in [1,12].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DOFW-NAME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "DOFW" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIZE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "SHORT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "CASE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UPPER" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Return a string containing the English name of a numeric day-of-week.

  'dofw' belongs to the range [0,6] (0==Monday).
  'size' is one of :short (default) or :long, specifying size of name.
  'case' is one of :upper (default), :mixed or :lower.
  Return value is a string, or NIL if the dofw is not in [0,6].")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-LONG-DOFW-NAME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CASE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UPPER" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Return a string with the full English name of the day-of-week.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE-LOCAL-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Parse a string (or substring) as a local time-of-day.
  Valid formats are:    HHMM      HHMMSS
                     H..H:MM  H..H:MM:SS
  Returns multiple-values:  <seconds> <minutes> <hours>")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE-LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "DEFAULT-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Explode a string into (local) date and tofd components.
   Valid input formats are (maybe?):

   [D]D-MTH[-YY[YY]]
   [D]D-MM-YYYY
   [D]D[-]M[M][-]YYYY
   YYYY-MM-D[D]
   YYYY[-]M[M][-]D[D]
   DDMMYY

   MM-YY  - day is set to last day of month
   MM-YYYY  - day is set to last day of month




   Return values are:  <seconds> <minutes> <hours> <day> <month> <year>.
   'year' may be NIL if no year was supplied.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE-ISO8601-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 date string into its numerical components.
  'string' may have one of precisely must be YYYY-MM-DD syntax.
  Return values are:
      <day> <month> <year>
  If parsing fails, all NILs are returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE-ISO8601-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 tofd string into its numerical components.
  'string' may have one of these syntaxes:

     hh:mm[:ss[.ffff...]]Z
     hh:mm[:ss[.ffff...]]Saa[:bb]
     hh:mm[:ss[.ffff...]]

  where:   hh = hour
           mm = minute
           ss = second
        fff.. = fractional seconds
            Z = literal 'Z', meaning a UTC time
            S = timezone offset sign:  either '-' or '+'
           aa = timezone offset hour
           bb = timezone offset minute

  The return values are the components:
      <seconds>             [optional]
      <minutes> <hours>     [required]
      <tz-offset minutes> <tz-offset hours> <tz-offset sign> [optional]
      <seconds fraction>    [optional]

  All values are integers, except for <seconds fraction> (a rational),
   or missing optional values (NIL).

  <tz-offset sign> is zero iff the timestring is in the UTC 'Z' form;
   if any timezone is specified (even 00:00), it will be +1 or -1.
   <tz-offset minutes/hours> are zero if <tz-offset sign> is zero.
   All tz-offset values are NIL if timezone fields are not supplied.

  If parsing fails, all NILs are returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPLODE-ISO8601" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 date+tofd string into its numerical components.
  'string' may have one of these syntaxes:

     YYYY-MM-DDThh:mm[:ss[.ffff...]]Z
     YYYY-MM-DDThh:mm[:ss[.ffff...]]Saa[:bb]
     YYYY-MM-DDThh:mm[:ss[.ffff...]]

  where: YYYY = year
           MM = month
           DD = day/date
            T = literal 'T'
           hh = hour
           mm = minute
           ss = second
        fff.. = fractional seconds
            Z = literal 'Z', meaning a UTC time
            S = timezone offset sign:  either '-' or '+'
           aa = timezone offset hour
           bb = timezone offset minute

  The return values are the components:
      <seconds>             [optional]
      <minutes> <hours>     [required]
      <day> <month> <year>  [required]
      <tz-offset minutes> <tz-offset hours> <tz-offset sign> [optional]
      <seconds fraction>    [optional]

  All values are integers, except for <seconds fraction> (a rational),
   or missing optional values (NIL).

  <tz-offset sign> is zero iff the timestring is in the UTC 'Z' form;
   if any timezone is specified (even 00:00), it will be +1 or -1.
   <tz-offset minutes/hours> are zero if <tz-offset sign> is zero.
   All tz-offset values are NIL if timezone fields are not supplied.

  If parsing fails, all NILs are returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert the duration 'string' to a number of seconds.  'string' may take
  one of the following forms:
    HH:MM   HH:MM:SS   HHMM   HHMMSS
   +HH:MM  +HH:MM:SS  +HHMM  +HHMMSS
   -HH:MM  -HH:MM:SS  -HHMM  -HHMMSS
  The sign of the result reflects the sign of the duration.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-LOCAL-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Parse a string (or substring) as a local tofd.
   Valid formats are:  HHMM   HHMMSS
                       HH:MM  HH:MM:SS
   Returns the number of seconds since (local) midnight.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-LOCAL-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "GUESS-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "UTC-FUTURE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "GUESS-YEAR-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "GUESS-CENTURY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "UNIX-Y2K" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Parse a (sub)string as a local time (date+tofd).

  STRING is the time string to parse.

  START and END are optional bounds.

  GUESS-YEAR specifies how the year should be inferred if it is
  missing from STRING.  The options for GUESS-YEAR are:

        A number - The given number is used when STRING does not specify a year.
     :utc-future - Choose the year such that the time is in the future (or same date), relative to
                   the current printed UTC date.  [default]
    :utc-current - Use the year from the current printed UTC date.
             NIL - Return NIL if no year is specified.
       :utc-past - Choose the year such that the time is in the past (or same date), relative to the
                   current printed UTC date.

  GUESS-YEAR-OFFSET specifies an offset (in seconds) which is added
  to the current UTC time before inferring the year for a yearless
  STRING.  It is applicable only when GUESS-YEAR is :UTC-FUTURE or
  :UTC-PAST.  GUESS-YEAR-OFFSET defaults to zero.

  GUESS-CENTURY specifies how the year should be interpreted if
  it is specified as (exactly) two digits.  The options are:

    :utc-nearest - Choose a date within 50 years of the current UTC date.
       :utc-past - Choose the latest century giving a past UTC date.
     :utc-future - Choose the earliest century not giving a past UTC date.
       :unix-y2k - Calls %year-from-2digit-year, resulting in a year
                   in the range 1970 to 2069 [default].

  The function returns a local datetime as an integer-time, or NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-LOCAL-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "GUESS-YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "UTC-FUTURE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "GUESS-YEAR-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "GUESS-CENTURY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "UNIX-Y2K" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Parse a (sub)string as a local date, neglecting tofd components.

  STRING is the time string to parse.

  START and END are optional bounds.

  GUESS-YEAR specifies how the year should be inferred if it is
  missing from STRING.  The options for GUESS-YEAR are:

        a number - The given number is used when STRING does not
                   specify a year.
     :utc-future - Choose the year such that the time is in the
                   future, relative to the current printed UTC
                   time.  [default]
    :utc-current - Use the year from the current printed UTC time.
             NIL - Return NIL if no year is specified.
       :utc-past - Choose the year such that the time is in the
                   past, relative to the current printed UTC time.

  GUESS-YEAR-OFFSET specifies an offset (in seconds) which is added
  to the current UTC time before inferring the year for a yearless
  STRING. It is applicable only when GUESS-YEAR is :UTC-FUTURE or
  :UTC-PAST.  GUESS-YEAR-OFFSET defaults to zero.

  GUESS-CENTURY specifies how the year should be interpreted if
  it is specified as (exactly) two digits.  The options are:

    :utc-nearest - Choose a date within 50 years of the current UTC date.
       :utc-past - Choose the latest century giving a past UTC date.
     :utc-future - Choose the earliest century not giving a past UTC date.
       :unix-y2k - Calls %year-from-2digit-year, resulting in a year
                   in the range 1970 to 2069 [default].

  The function returns a local date represented as an integer-time, or NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ISO8601-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Convert an ISO-8601 date (sub)string into an integer-date.
   Must be in YYYY-MM-DD syntax.
   If parsing fails, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ISO8601-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 date+tofd (sub)string into a UTC integer-time.
  (For allowed syntaxes, see 'explode-iso8601'.)
  Any fractional seconds are truncated.
  If parsing fails, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ISO8601-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 date+tofd (sub)string into an integer-time.
  (For allowed syntaxes, see 'explode-iso8601'.)
  Any fractional seconds are truncated.
  Any time zone specification is ignored.
  If parsing fails, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ISO8601-TOFD-ZONED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Convert an ISO-8601 tofd (sub)string into a zoned-time.
  (For allowed syntaxes, see 'explode-iso8601-tofd'.)
  Any fractional seconds are truncated.
  If parsing fails, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-ISO8601-ZONED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Convert an ISO-8601 date+tofd (sub)string into a zoned-time.
  (The allowed syntax is YYYY-MM-DDThh:mm[:ss[.ffff...]]Saa:bb;
  see 'explode-iso8601' for an explanation.)
  Any fractional seconds are truncated.
  If parsing fails, NIL is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-DATE-AND-TOFD-ZONED" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LOCAL-DATE-OFFSET" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     "Combines an integer-date and a the time portion of a zoned-time,
   and optionally a day offset for the local-date.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HH-MM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "SHOW-PLUS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-EXPLODED-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MONTH" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "YEAR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "YYYY-MM-DD" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "SHOW-WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "USE-UPPERCASE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Write an exploded local date to a stream; input is the component fixnums
    day, month, year, weekday.
   If 'weekday' is not NIL, ':show-weekday' specifies where to write an
    English weekday:
       :before, :before-dash - before the date
       :after,  :dash-after  - after the date
           NIL - do not display weekday
   If 'use-uppercase' is NIL, mixed-case is used for English months and
    weekdays.

   Possible output formats are:

    English Month:   :ddmth        '07JAN'
                     :ddmthyy      '07JAN99'
                     :ddmthyyyy    '07JAN1999'
                     :dd-mth-yyyy  '07-JAN-1999'

    Numeric Month:   :ddmmyy       '070199'
                     :mmddyy       '010799'
                     :ddmmyyyy     '07011999'
                     :yyyymmdd     '19990107'
                     :yymmdd       '990107'
                     :yyyy-mm-dd   '1999-01-07'
                     :nu/mm/yy     '01/99'
                     :nu/mm/yyyy   '01/1999'
                     :nu/mmyy      '0199'

   Return value is NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-EXPLODED-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SECONDS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "MINUTES" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "HOURS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HH-MM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Write an exploded local tofd to a stream; input is the component
    seconds, minutes, and hours.
   Possible output formats are:
      :hh-mm = HH:MM  :hh-mm-ss = HH:MM:SS   :hh-mm-ap = HH:MMAM, HH:MMPM
      :_h-mm =  H:MM                         :_h-mm-ap =  H:MMa,   H:MMp
      :hhmm  = HHMM   :hhmmss   = HHMMSS     :hhmmap   = HHMMA, HHMMP
                                             :_hmmap   =  HMMA,  HMMP

   The \"_h\" formats use a leading space instead of a leading zero.
   Return value is NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-ZONED-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DATE-AS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "YYYY-MM-DD" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "TIME-AS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "HH-MM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
       (:NAME "TIME-AS-SUPPLIED-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      ((:NAME "SHOW-WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "AS-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "SHOW-TIMEZONE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "SHOW-TZ-SUPPLIED-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
      ((:NAME "USE-UPPERCASE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Write the zoned-time ZUL to the STREAM.  If DATE-AS is specified as :ISO8601,
   use ISO-8601 format with possible variations as specified by DATE-AS and
   TIME-AS.  AS-UTC, if non-NIL, indicates that the the time should be considered
   as being UTC, with no timezone information output.  The DATE-AS and TIME-AS
   arguments accept format arguments as accepted by WRITE-EXPLODED-DATE and
   WRITE-EXPLODED-TOFD.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ZONED-TIME" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "ATSIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Format function for displaying a zoned time, with defaulted write-zoned-time parameters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-LOCAL-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HH-MM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Write a local tofd to a stream.  'tofd' is an integer-tofd,
    i.e. seconds from midnight.
   Possible output formats are:
      :hh-mm = HH:MM  :hh-mm-ss = HH:MM:SS   :hh-mm-ap = HH:MMAM, HH:MMPM
      :hhmm  = HHMM   :hhmmss   = HHMMSS     :hhmmap   = HHMMA, HHMMP
   Return value is NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-LOCAL-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "YYYY-MM-DD" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "SHOW-WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "USE-UPPERCASE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Write the given local integer-date DATE to STREAM according to the FORMAT,
   SHOW-WEEKDAY and USE-UPPERCASE arguments as expected by WRITE-EXPLODED-DATE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-TO-STRING-FORMAT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return the given local integer-date DATE as formatted string according to the FORMAT,
   SHOW-WEEKDAY and USE-UPPERCASE arguments as expected by WRITE-EXPLODED-DATE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-TO-ISO8601-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the given local integer-date DATE as a string formatted as YYYY-MM-DDD.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-DATE-TO-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return the given local integer-date DATE as string.  FORMAT specifies how the
   date should be formatted.

   The following keywords are accepted for FORMAT:

   :DATE-ONLY -> DDMTHYYY
   :BRIEF -> DD-MTH-YYYY HH:MM
   any of (:DDMTH :DDMTHYY :DDMTHYYYY :DD-MTH-YYYY :DDMMYY
           :MMDDYY :DDMMYYYY :MMDDYYYY :YYYYMMDD :YYYYMM :YYMMDD :YYYY-MM-DD)
    -> whatever WRITE-LOCAL-DATE produces for that format specification.
   For all other values of FORMAT, YYYY-MM-DD HH:MM:SS is produced.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-TOFD-TO-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FORMAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "HH-MM" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Return the given time of day TOFD as string.  FORMAT may be specified to
   control the format produced by WRITE-LOCAL-TOFD, it defaults to :HH-MM.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-DATE-CHANGE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME1-ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME2-ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "If TIME1-ZUL and TIME2-ZUL are on the same date, return nil, otherwise return
   the days between the two.  See LOCAL-DATE-OFFSET for an explanation of
   the value returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATE-CHANGE-INDICATOR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME1-ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME2-ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a ``date change'' indicator that describes how many days are between
   TIME1-ZUL and TIME2-ZUL.  If they are on the same date, \" \" is returned,
   otherwise it will be a string consisting of a #+ or a #- if TIME1-ZUL is
   before or after TIME2-ZUL and the number of days between the two.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-ISO8601-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC/LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME-FORMAT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-ISO8601-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Write an integer-time to a stream in ISO-8601 format.
 decode as UTC, write with UTC/ZULU indicator.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-ISO8601-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Write an integer-time to a stream in ISO-8601 format.
 decode as UTC, write as local (w/o ZULU indicator).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIME-TO-ISO8601-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC/LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME-FORMAT" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION "Create a string in ISO-8601 format from an integer-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC-TO-ISO8601-STRING" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TIME-UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a string in ISO-8601 format from a UTC integer-time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC%ISO8601" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Format function for dates, prints UTC in ISO-8601 format to STREAM.  If
   prefixed by a colon in the format specification (e.g. ~:/utc%ISO8601/),
   uppercase letters are used.  UTC may be either an integer-time or a
   zoned-time, but it is always printed as UTC time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC%DDMTH" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Format function for dates, prints UTC in DDMTH format to STREAM.  If prefixed
   by a colon in the format specification (e.g. ~:/utc%DDMTH/), uppercase
   letters are used.  UTC may be either an integer-time or a zoned-time, but it
   is always printed as UTC time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UTC%DDMTHYYYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UTC" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION
     "Format function for dates, prints UTC in DDMTHYYYY format to STREAM.  If
   prefixed by a colon in the format specification (e.g. ~:/utc%DDMTHYYYY/),
   uppercase letters are used.  UTC may be either an integer-time or a
   zoned-time, but it is always printed as UTC time.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ZUL%ISO8601" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ZUL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DDMTH" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DDMTHYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DDMTHYYYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DDMTHYYWW" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DD-MTH-YYYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%DDMMYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYMMDD" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%WW-YYYY-MM-DD" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%WW-DD-MTH-YYYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYYY-MM-DD-HH-MM-SS" :PACKAGE-NAME "COMMON-LISP-USER"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYYY-MM-DDTHH-MM-SS" :PACKAGE-NAME "COMMON-LISP-USER"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYYY-MM-DD" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYYY-MM-DDTHH-MM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%MM-YY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%MMYY" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%YYYY-MM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%HH-MM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%_H-MM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%HHMM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%HHMMAP" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%_HMMAP" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%HH-MM-AP" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%H-MM-AP-WORD" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUR%H_M" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUR%HHMM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUR%+HHMM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DUR%_HMM" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-LOCAL-DATE-RANGE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TIME1" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "TIME2" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "*STANDARD-OUTPUT*" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CASE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UPPER" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "LONG-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      ((:NAME "SHOW-WEEKDAY" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
       (:NAME "AUTOMATIC" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "SHOW-YEAR-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%WW-MTH-DD-PAIR" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TIME-PAIR" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOC%WW-MTH-DD" :PACKAGE-NAME "COMMON-LISP-USER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATE-LOCAL" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "COLON-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)
      (:NAME "AT-SIGN-P" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%SHOW-ALL-NEW-TIME-FORMATS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "TIME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ITUS-TO-MS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ITUS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ITUS-TO-US" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ITUS" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP NIL)) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "INTEGER-TIME" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T)
    (:NAME "INTEGER-DATE" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T)
    (:NAME "INTEGER-DURATION" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T)
    (:NAME "INTEGER-TOFD" :PACKAGE-NAME "QUUX-TIME" :EXTERNALP T)))))
