
(:TYPE :SYSTEM :NAME "recursive-regex" :AUTHOR NIL :MAINTAINER NIL :VERSION
 "0.1" :LICENCE "BSD" :DESCRIPTION
 "Recursive regular expression parsing engine" :LONG-DESCRIPTION NIL
 :DEPENDS-ON
 ("ITERATE" "ANAPHORA" "CL-INTERPOL" "CL-PPCRE" "ALEXANDRIA" "SYMBOL-MUNGER")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "RECURSIVE-REGEX" :FULL-NAME "RECURSIVE-REGEX"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*BODY-REGEX*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*UNCOMPILED-BR*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRACE-PARSE*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TRACE-DEPTH*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "0")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MINIMIZE-RESULTS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "T")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CASE-INSENSITIVE*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRACER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%TRACER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LABEL" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "POS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "MATCH-END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATA" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "LEVEL" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRACE-LOG" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MSG" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%TRACE-LOG" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MSG" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TRACED-MATCHER-LAMBDA" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "POS-NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "REST-TRACING" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INNER-MATCH" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DATA" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTINUE-MATCHING" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "C" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DISPLACED-ARRAY" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) 0)
      ((:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "RESULT-NODE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) :ACCESSORS
       ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) :ACCESSORS
       ((:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) :ACCESSORS
       ((:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FULL-MATCH" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "FULL-MATCH" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) :ACCESSORS
       ((:NAME "GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "KIDS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) :ACCESSORS
       ((:NAME "KIDS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESULT-NODE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TARGET" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "*STRING*" :PACKAGE-NAME "CL-PPCRE" :EXTERNALP NIL))
      (:NAME "GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "KIDS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "O" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "RESULT-NODE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
      (:NAME "S" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CHILD-PUSHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "PLACE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION "pushes child-matches into the place and continues-matching
   discards results that have been backtracked passed")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%COLLECT-GROUPS-TO-TREE" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "SCANNER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "TARGET" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) 0)
      ((:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TARGET" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)))
      (:NAME "OUTER-MATCH-START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
       NIL)
      (:NAME "OUTER-MATCH-END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CHILDREN" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEVOID" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-TO-FULL-MATCH" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MATCHED-PAIR-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "OPEN-CHAR" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "CLOSE-CHAR" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ESCAPE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Will create a regex filter that can match arbitrary pairs of
   matched characters such as (start (other () some) end)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NAMED-REGEX-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "NAMED-REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION
     "Handles matching by delegating to another named regular expression")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-BODY-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       (:NAME "BODY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Handles matching the body of a named regular expression")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CLEAR-DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "removes all the dispatchers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-BODY-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
     :DOCUMENTATION "Add a new body matcher that dispatches on name")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-NAMED-REGEX-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION "Add a new dispatcher on name to child regex")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-MATCHED-PAIR-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "OPEN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLOSE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ESCAPE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION "Add a matched pair matcher dispatched on name")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DEFAULT-DISPATCH-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Creates a default dispatch table with a parens dispatcher that can match
   pairs of parentheses")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISPATCH-FN" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUNCTION-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-DISPATCHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "BODY-REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "FUNCTION-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION
     "Whenever we meet a named group, change it to a named dispatcher
   if we find it in the list we use that matcher, otherwise we use
   a body matcher.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATE-RECURSIVE-SCANNER" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUNCTION-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "*ALLOW-NAMED-REGISTERS*" :PACKAGE-NAME "CL-PPCRE" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       (:NAME "FUNCTION-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Allows named registers to refer to functions that should be in
   the place of the named register")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TREEIFY-REGEX-RESULTS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION "Make a lisp tree of the results
   of the matches from the clos tree")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REGEX-RECURSIVE-GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "TARGET" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
      (:NAME "TREE-RESULTS?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
       (:NAME "DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
      (:NAME "RES" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION
     "run a recursive regular expression and gather all the results for
   each of them into a tree")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+OPTION+" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"%option\\\\s\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+OPTION-CASE-INSENSITIVE+" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"%option\\\\scase-insensitive\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+END-OF-DEFS+" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"^%%\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+PRODUCTION-SPLIT+" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"\\\\s*=>\\\\s*\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIMMED-READLINE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EOF-ERROR-P" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "EOF-VALUE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "RECURSIVE-P" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION
     "read a line and trim it, if it is empty return nil instead of empty string")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-ALL" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PART" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "REPLACEMENT" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "CHAR=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a new string in which all the occurences of the part 
is replaced with replacement. [FROM http://cl-cookbook.sourceforge.net/strings.html#manip]")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNESCAPED-QUOTE-POS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T))
     :DOCUMENTATION "find the index of an unescaped quote")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HANDLE-QUOTED-RULES" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "IDX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "IDX2" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      ((:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T) 0))
     :DOCUMENTATION
     "quotes in rex productions should be direct string matches (not regex)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTION?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LINE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTION-CI?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LINE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "END-OF-DEFS?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LINE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPLACE-EXPANSIONS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DEFS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "NEW-REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION
     "If we encounter {name} style definitions in the right hand side
   replace them with their text (regex fragment) value")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESS-REX-DEF" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
      (:NAME "REGEX" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "DEFS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "READ-REX-FILE-TO-DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FILE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CI?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      ((:NAME "DEFS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
       ((:NAME "MAKE-HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TEST" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQUALP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
      (:NAME "DONE-WITH-DEFS?" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP NIL)
      ((:NAME "*ALLOW-NAMED-REGISTERS*" :PACKAGE-NAME "CL-PPCRE" :EXTERNALP T)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "reads a set of definitions in from a rex file, calls
   add-named-regex-matcher for each production
      name => regex
  "))
   :EXTERNAL-SYMBOLS
   ((:NAME "GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "ADD-MATCHED-PAIR-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX"
     :EXTERNALP T)
    (:NAME "CREATE-RECURSIVE-SCANNER" :PACKAGE-NAME "RECURSIVE-REGEX"
     :EXTERNALP T)
    (:NAME "TREEIFY-REGEX-RESULTS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
     T)
    (:NAME "ADD-NAMED-REGEX-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
     T)
    (:NAME "MAKE-DEFAULT-DISPATCH-TABLE" :PACKAGE-NAME "RECURSIVE-REGEX"
     :EXTERNALP T)
    (:NAME "ADD-BODY-MATCHER" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "RESULT-NODE" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "FULL-MATCH" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "READ-REX-FILE-TO-DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX"
     :EXTERNALP T)
    (:NAME "CLEAR-DISPATCHERS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "END" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "START" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "KIDS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "*DISPATCHERS*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "*CASE-INSENSITIVE*" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)
    (:NAME "REGEX-RECURSIVE-GROUPS" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP
     T)
    (:NAME "NAME" :PACKAGE-NAME "RECURSIVE-REGEX" :EXTERNALP T)))))
