
(:TYPE :SYSTEM :NAME "xpath" :AUTHOR "Ivan Shvedunov, David Lichteblau"
 :MAINTAINER NIL :VERSION "0.1" :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION
 NIL :DEPENDS-ON ("CXML" "PARSE-NUMBER" "CL-PPCRE" "YACC") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "-PROTOCOL" :FULL-NAME "XPATH-PROTOCOL" :DOCUMENTATION
   "XPATH-PROTOCOL package contains generic functions that are used to support
    multiple representations of XML documents for XPath."
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "NAMESPACE-PREFIX-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "QUALIFIED-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "PROCESSING-INSTRUCTION-TARGET-USING-NAVIGATOR" :PACKAGE-NAME
     "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "PARENT-NODE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "CHILD-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NODE-EQUAL" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NAMESPACE-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "HASH-KEY" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "GET-ELEMENT-BY-ID-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "BASE-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NODE-P" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "PROCESSING-INSTRUCTION-TARGET" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NAMESPACE-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NAMESPACE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NODE-TYPE-P" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "ATTRIBUTE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NAMESPACE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "UNPARSED-ENTITY-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "BASE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
     T)
    (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "GET-ELEMENT-BY-ID" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "LOCAL-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NODE-TEXT" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "QUALIFIED-NAME" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NODE-EQUAL-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "HASH-KEY-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
     T)
    (:NAME "ATTRIBUTE-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "DEFINE-DEFAULT-METHOD" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NODE-TEXT-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
     :EXTERNALP T)
    (:NAME "NODE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
     T)
    (:NAME "UNPARSED-ENTITY-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
    (:NAME "NAMESPACE-PREFIX" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "XPATTERN" :FULL-NAME "XPATTERN" :DOCUMENTATION
   "The XPATTERN package implements pattern matching compatible with XSLT 1.0.

    @begin[Utilities powered by pattern matchers]{section}
    The following convenience functions and macros use patterns.  They
    are implemented using the lower-level functions listed below.

    @aboutfun{node-matches-p}
    @aboutmacro{pattern-case}
    @aboutmacro{pattern-ecase}
    @end{section}
    @begin[Compiling pattern matchers dynamically]{section}
    Pattern are represented as objects:

    @aboutclass{pattern}
    @aboutfun{pattern-value}
    @aboutfun{pattern-priority}
    Use @code{compute-patterns} to parse a pattern expression into
    pattern objects:

    @aboutfun{compute-patterns}
    @code{make-pattern-matcher} builds a matcher functions from multiple
    pattern objects.  The matcher will find the highest-priority match
    among them.

    @aboutfun{make-pattern-matcher}
    @aboutfun{make-pattern-matcher*}
    @end{section}
    @begin[Applying pattern matchers]{section}
    To invoke a matcher created by @code{make-pattern-matcher}, use
    @code{matching-value} or @code{matching-values}:

    @aboutfun{matching-value}
    @aboutfun{matching-values}
    @end{section}"
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "MAKE-PATTERN-MATCHER" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "PATTERN-VALUE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "COMPUTE-PATTERNS" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "PATTERN-CASE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "MAKE-PATTERN-MATCHER*" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "PARSE-PATTERN-EXPRESSION" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "MATCHING-VALUES" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "*ALLOW-VARIABLES-IN-PATTERNS*" :PACKAGE-NAME "XPATTERN" :EXTERNALP
     T)
    (:NAME "PATTERN" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "PATTERN-ECASE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "NODE-MATCHES-P" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "PATTERN-PRIORITY" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
    (:NAME "MATCHING-VALUE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "XPATH" :FULL-NAME "XPATH" :DOCUMENTATION
   "Plexippus XPath is an XPath 1.0 implementation for Common Lisp.

    @begin[Using XPath]{section}
      Almost all uses of XPath involve the @code{evaluate} function, which
      can parse, compile, and invoke XPath expressions.

      @aboutfun{evaluate}
      @aboutmacro{xpath}
    @end{section}
    @begin[Compiling XPath dynamically]{section}
      @code{compile-xpath} allows the compilation of XPath into a closure
      ahead of time, so that @code{evaluate} only needs to invoke that closure
      rather than having to re-compile it first.

      Although @code{evaluate} itself already performs caching of compiled
      closures, explicit precompilation can aid optimizations if one
      call site uses multiple XPath expressions.

      Explicit compilation using @code{compile-xpath} is also required when
      using custom environment classes, since @code{evaluate} compiles
      expressions using the dynamic environment only.

      @code{parse-xpath} can be used to translate the standard string
      representation of XPath into a Plexippus-specific sexp representation.
      Both @code{compile-xpath} and @code{evaluate} accept sexps instead of
      strings.

      @aboutfun{parse-xpath}
      @aboutfun{compile-xpath}
    @end{section}
    @begin[Type coercion]{section}
      These correspond to the XPath functions boolean(),
      string(), and number().  In addition, @code{node-set-value}
      is provided, which turns nodes into node sets.

      @aboutfun{boolean-value}
      @aboutfun{string-value}
      @aboutfun{number-value}
      @aboutfun{node-set-value}
    @end{section}
    @begin[The dynamic environment]{section}
      The default enviroment used by @code{evaluate} is the dynamic
      environment, backed by information bound in dynamic variables.
      The following macros are used to bind these variables.  They have
      dynamic scope.  (The dynamic environment is currently not capable
      of dynamic declarations for variables, but can be used with extension
      functions that are declared globally.)

      (The XPATH-SYS defined an @a[xpath-sys.html]{environment protocol}
      for user-defined environment classes.)

      @aboutmacro{with-namespaces}
      @aboutmacro{with-variables}
    @end{section}
    @begin[The run-time context]{section}
      Instead of passing a node to @code{evaluate}, user code can construct
      a full context object.

      The context object specifies values to be returned by position(),
      current(), and last().

      @aboutclass{context}
      @aboutfun{make-context}
      @aboutfun{context-node}
      @aboutfun{context-starting-node}
      @aboutfun{context-position}
      @aboutfun{context-size}
    @end{section}
    @begin[Node sets]{section}
      Node sets are the XPath data type used to represent the results of
      evaluations that select multiple nodes.  As sets, they never contain
      duplicates.

      In addition to the high-level functions defined here, the XPATH-SYS
      package defined several @a[xpath-sys.html]{low-level node set functions}.
      Please also refer to the description there for details on node set order.

      @aboutfun{first-node}
      @aboutfun{all-nodes}
      @aboutfun{map-node-set}
      @aboutfun{map-node-set->list}
      @aboutmacro{do-node-set}
      @aboutfun{make-node-set-iterator}
      @aboutfun{node-set-iterator-end-p}
      @aboutfun{node-set-iterator-next}
      @aboutfun{node-set-iterator-current}
      @aboutfun{node-set-p}
      @aboutfun{node-set-empty-p}
      @aboutfun{node-set}
      @aboutfun{list->node-set}
      @aboutfun{sort-node-set}
    @end{section}
    @begin[Miscellaneous]{section}
      Other useful functions, variables, and classes:

      @aboutmacro{with-plx-extensions}
      @aboutvar{*navigator*}
      @aboutclass{xpath-error}
    @end{section}"
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "MKLIST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONCAT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Concatenate string representations (PRINC-TO-STRING) of VALUES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-REPLACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBSTRING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "REPLACEMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Replace occurences of SUBSTRING in STRING with REPLACEMENT.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-GENSYMS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SYMS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Execute the body binding syms to gensyms")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ONCE-ONLY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NAMES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPER-LIST-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "True if the LIST is proper list")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-PROGN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "Wrap the BODY with PROGN if it contains more than one form.
Otherwise return the first form or NIL if the body is empty")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HYPSYM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARTS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "Assemble a symbol from PARTS interleaving them with hyphens")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CACHE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEYS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COMPILATION-BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TESTS*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ASSERT-EQUAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPECTED" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ACTUAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Check whether two values are equal")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ASSERT-EQUAL*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PAIRS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ASSERT*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPRESSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFTEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN-ALL-TESTS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "EMPTY-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-EMPTY-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAKE-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "HEAD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "TAIL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[head]{pipe head (evaluated)}
   @arg[tail]{tail expression}
   @return{a pipe}
   @short{Constructs a pipe (lazy list).}

   The @code{head} expression is evaluated immediatelly. The value of @code{head} will
   be returned by @fun{pipe-head} called for the pipe object returned by @code{make-pipe}.
   Evaluation of @code{tail} expression is delayed until @fun{pipe-tail} is called for
   the pipe returned by this function. Evaluation of @code{tail} expression should produce
   a pipe or a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-HEAD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[pipe]{a pipe}
   @return{an object}
   Returns the head of the @code{pipe}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-TAIL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[pipe]{a pipe}
   @return{an object}
   @short{Returns the tail of the list.}

   First time @code{pipe-tail} is called it causes pipe tail expression to be evaluated
   and remembered for later calls.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENUMERATE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      ((:NAME "RESULT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION "@arg[pipe]{a pipe}
   @arg[count]{a non-negative integer}
   @arg[key]{a function}
   @arg[result]{an object}
   @return{the value of @key{result} (the value of @code{pipe} by default)}
   Goes through all or @code{count} elements of pipe,
   possibly applying the @code{key} function.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-LENGTH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-ELT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILTER-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-PIPE-FILTERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FILTER-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Map fn over pipe, delaying all but the first fn call,
           collecting results")
    (:TYPE :MACRO :SYMBOL
     (:NAME "APPEND-PIPES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPEX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "return a pipe that appends two pipes.

   The evaluation style of this macro has been chosen to be consistent
   with MAKE-PIPE: The first argument is evaluated eagerly; the second
   argument lazily.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%APPEND-PIPES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPEX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPEY-FUN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPEND-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "lazily map fn over pipe, appending results")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPEND-PIPE-FILTERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FILTER-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Map fn over pipe, delaying all but the first fn call,
  appending results, filtering along the way")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBPIPE-BEFORE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBPIPE-AFTER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ELT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-IN-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ITEM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQUAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-IN-PIPE-IF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PRED" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*NAVIGATOR*" :PACKAGE-NAME "XPATH" :EXTERNALP T) :DOCUMENTATION
     NIL :INITIAL-VALUE ":DEFAULT-NAVIGATOR")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-P" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODE-EQUAL-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "OTHER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-EQUAL" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "OTHER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "HASH-KEY-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HASH-KEY" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHILD-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ATTRIBUTE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATTRIBUTE-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NAMESPACE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMESPACE-PIPE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENT-NODE" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODE-TEXT-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEXT" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "QUALIFIED-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUALIFIED-NAME" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "LOCAL-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NAMESPACE-PREFIX-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMESPACE-PREFIX" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NAMESPACE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMESPACE-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PROCESSING-INSTRUCTION-TARGET-USING-NAVIGATOR" :PACKAGE-NAME
      "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROCESSING-INSTRUCTION-TARGET" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TYPE-P" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "BASE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BASE-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-ELEMENT-BY-ID-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-ELEMENT-BY-ID" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UNPARSED-ENTITY-URI-USING-NAVIGATOR" :PACKAGE-NAME
      "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNPARSED-ENTITY-URI" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-DEFAULT-METHOD" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-EQUAL-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HASH-KEY-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARENT-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VECTOR->PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) 0))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ATTR" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PREFIX-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "QUALIFIED-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PROCESSING-INSTRUCTION-TARGET-USING-NAVIGATOR" :PACKAGE-NAME
      "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "BASE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOCUMENT" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ELEMENT" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ATTRIBUTE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ATTRIBUTE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ELEMENT" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-EQUAL-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      ((:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "HASH-KEY-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHILD-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ATTRIBUTE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PARENT-NODE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "QUALIFIED-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PREFIX-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PIPE-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ELEMENT" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TEXT-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TEXT-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T))
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "COMMENT" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "COMMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "PROCESSING-INSTRUCTION" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PROCESSING-INSTRUCTION" :PACKAGE-NAME "KEYWORD" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "TEXT" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TEXT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ATTR" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ATTRIBUTE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "ELEMENT" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ELEMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOM-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NAMESPACE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NODE-TYPE-P-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DOCUMENT" :PACKAGE-NAME "DOM" :EXTERNALP T))
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DOCUMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-ELEMENT-BY-ID-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T))
      (:NAME "ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UNPARSED-ENTITY-URI-USING-NAVIGATOR" :PACKAGE-NAME
      "XPATH-PROTOCOL" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "DOM" :EXTERNALP T))
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LOCAL-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "CHARACTER-DATA" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-PREFIX-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "CHARACTER-DATA" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NAMESPACE-URI-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "CHARACTER-DATA" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "QUALIFIED-NAME-USING-NAVIGATOR" :PACKAGE-NAME "XPATH-PROTOCOL"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAVIGATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DEFAULT-NAVIGATOR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "CHARACTER-DATA" :PACKAGE-NAME "DOM" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FLOAT-TRAPS-MASKED" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL (:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAN-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "X-ZEROP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "X-PLUSP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "X-MINUSP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INF-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FINITE-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE-NUMBERS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-/" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-+" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM--" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FMOD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "G" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LONG-TO-DOUBLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "L" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+NAN+" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION NIL
     :INITIAL-VALUE "(XPATH::LONG-TO-DOUBLE 9221120237041090560)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-MOD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "F" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "G" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ROUND-TO-INTEGER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-ROUND" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-CEILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM-FLOOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PREPROCESS-NUMBER-STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XNUM->STRING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ASSERT-FLOAT-EQUAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXPECTED" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ACTUAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Check whether two floating-point values are equal")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ASSERT-FLOAT-EQUAL*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PAIRS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-XNUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-NODE-TEXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Represents an XPath node set

    @see-constructor{make-node-set}"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ORDERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "ORDERING-OF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PIPE-OF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[node-set]{a @class{node-set}}
   @return{a pipe}
   Returns the pipe that contains the elements of the @code{node-set}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PIPE-OF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[pipe]{a pipe}
   @arg[node-set]{a @class{node-set}}
   @return{the value of @code{pipe}}
   Sets the pipe that contains the element sof the @code{node-set}.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-P" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[object]{a value of any type}
   @return{a generalized boolean}
   Returns true if @code{object} is a @class{node-set}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-EMPTY-P" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[node-set]{a @class{node-set}}
   @return{a generalized boolean}
   Returns true if @code{node-set} is empty")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ORDERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "UNORDERED" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "@arg[pipe]{a pipe}
   @arg[ordering]{one of :document-order, :reverse-document-order, :unordered}
   @return{a @class{node-set}}
   Makes a @class{node-set} containing nodes from the @code{pipe} with specified @code{ordering}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORT-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[node-set]{a @class{node-set}}
   @return{a sorted version of @code{node-set}}
   Sorts the @code{node-set} according to document order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORTED-PIPE-OF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORT-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ORDERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "UNORDERED" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEXTUALLY-FIRST-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE<" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "Compare nodes according to document order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SORT-NODES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE-NODE-SETS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE-WITH-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE/NO-NODE-SETS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPARE-VALUES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "OP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "A" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BOOLEAN-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[value]{value of an XPath-supported type or an XML node}
   @return{an XPath boolean}
   @short{Returns the value of XPath boolean() function.}

   For XML nodes returns the value of XPath boolean() function applied
   to the result of calling @fun{string-value} for the specified @code{value}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NUMBER-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[value]{value of an XPath-supported type or an XML node}
   @return{an XPath number}
   @short{Returns the value of XPath number() function.}

   For XML nodes returns the value of XPath number() function applied
   to the result of calling @fun{string-value} for the specified @code{value}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[value]{value of an XPath-supported type or an XML node}
   @return{an XPath string}
   @short{Returns the value of XPath number() function.}

   For XML nodes returns the value of @fun{xpath-protocol:node-text} applied
   to the specified @code{value}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[value]{value of an XPath-supported type or an XML node}
   @return{a @class{node-set}}
   @short{Returns the value of XPath node-set() function.}

   For XML nodes returns a @class{node-set} consisting of the single node
   specified by @code{value}.")
    (:TYPE :CLASS :SYMBOL (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Represents XPath context" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STARTING-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) 1)
      ((:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 1)
      ((:NAME "STARTING-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))
     :DOCUMENTATION "@arg[node]{an XML node}
   @arg[size]{context size, a non-negative integer or a function without arguments returning non-negative integer}
   @arg[position]{context position, a positive integer}
   Makes a @class{context} object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTEXT-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[context]{an XPath context}
   @return{an XML node}
   Returns the context node of the XPath @code{context}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTEXT-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[node]{an XML node}
   @arg[context]{an XPath context}
   @return{the @code{node}}
   Sets the context node of @code{context} and returns that node.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTEXT-SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[context]{an XPath context}
   @return{a non-negative number}
   @short{Returns the size of @code{context}}
   If the context size was specified as a function,
   the result of calling that function is returned.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTEXT-SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION
     "@arg[size]{context size, a non-negative integer or a function without arguments returning non-negative integer}
   @arg[context]{an XPath context}
   @return{the value of @code{size}}
   Sets the size of the XPath @code{context} and returns it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTEXT-POSITION" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[context]{an XPath context}
   @return{a positive integer}
   Returns the current position of the XPath @code{context}.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTEXT-POSITION" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[position]{context position, a positive integer}
   @arg[context]{an XPath context}
   @return{the value of @code{position}}
   Sets the position of the XPath @code{context} and returns it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTEXT-STARTING-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[context]{an XPath context}
   @return{an XML node}
   Returns the node for which the whole XPath expression is evaluated.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CONTEXT-STARTING-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[context]{an XPath context}
   @return{the value of @code{node}}
   Sets the node which is considered \"starting\" one, i.e. for which the whole
   XPath extension is evaluated.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-NODE-INDEX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-NODE-ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE-OR-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[node-or-node-set]{a @class{node-set} or a single XML node}
     @return{an alphanumeric string}
     @short{Generates an unique identifier for the first node @code{node-set}
     (or, if a node is specified, for that node).}

     This function is similar to the generate-id() XSLT function, but its
     results are unique only within its document, whereas XSLT also prepends
     an ID designating the document.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-NODE-ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE-OR-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[node-or-node-set]{a @class{node-set} or a single XML node}
     @return{an alphanumeric string}
     @short{Generates an unique identifier for the first node @code{node-set}
     (or, if a node is specified, for that node).}

     This function is similar to the generate-id() XSLT function, but its
     results are unique only within its document, whereas XSLT also prepends
     an ID designating the document.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*EXTENSIONS*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "EXTENSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FUNCTIONS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-EXTENSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUNCTIONS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "MAKE-HASH-TABLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "TEST" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "EQUAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPILER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MIN-ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAX-ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COMPILER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "MIN-ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "MAX-ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-XPATH-FUNCTION-CALL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGUMENT-THUNKS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%DEFINE-EXTENSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-EXTENSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOCUMENTATION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "@arg[name]{the name of XPath extension (a symbol)}
   @arg[uri]{URI corresponding to XPath extension (a string)}
   @arg[documentation]{documentation string for the XPath extension}
   @short{Defines an XPath extension with specified @code{name} and @code{uri}.}

   An XPath extension is a collection of XPath functions that are defined
   using one of @fun{define-xpath-function/lazy},
   @fun{define-xpath-function/eager} or @fun{define-xpath-function/single-type}
   macros. In order to use the extension, one must bind a prefix string to
   its @code{uri} using @fun{with-namespaces} macro.

   Example:
   @begin{pre}
   (defparameter *my-namespace* \"http://example.net/my-xpath-extension\")

   (xpath-sys:define-extension
       my-ext *my-namespace*
     \"My Extension\")

   (xpath-sys:define-xpath-function/single-type my-ext add-quotes string (string)
     (concat \"\\\"\" string \"\\\"\"))

   (defun get-my-quoted-string(doc)
     (with-namespaces ((\"my\" *my-namespace*))
       (evaluate \"add-quotes(//some-element)\" doc)))
   @end{pre}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[local-name]{local part of the function name}
   @arg[uri]{namespace URI of the function}
   @return[uri]{an XPath function object}
   @short{Performs an XPath function lookup using standard lookup rules}

   All defined extensions for the namespace specified by @code{uri}
   are scanned for function with specified @code{local-name}.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ARG-COUNT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "ARGLIST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "FUNC" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGLIST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-XPATH-FUNCTION/LAZY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[ext]{name of an XPath extension (a symbol)}
   @arg[name]{XPath function name}
   @arg[args]{XPath function arguments}
   @short{Defines an XPath function, \"lazy\" style.}

   The @code{body} is evaluated during compilation of XPath
   expressions each time the function being defined is referenced.
   It's passed a list of \"thunks\" corresponding to XPath function arguments
   and should return a new \"thunk\". A \"thunk\" is a function that takes
   an XPath @class{context} as argument and returns value of one of XPath
   types (string, boolean, number, node set).

   Example:
   @begin{pre}
   (define-xpath-function/lazy my-ext my-if (v if-part else-part)
     #'(lambda (ctx)
         (if (boolean-value (funcall v ctx))
             (funcall if-part ctx)
             (funcall else-part ctx))))
   @end{pre}
   @see{define-xpath-extension}
   @see{define-xpath-function/eager}
   @see{define-xpath-function/single-type}")
    (:TYPE :MACRO :SYMBOL
     (:NAME "%DEFINE-XPATH-FUNCTION/EAGER" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "EXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CONVERTER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-XPATH-FUNCTION/EAGER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[ext]{name of an XPath extension (a symbol)}
   @arg[name]{XPath function name}
   @arg[args]{XPath function arguments}
   @short{Defines an XPath function, \"eager\" style.}

   The @code{body} is evaluated during evaluation of XPath
   expressions each time the function being defined is called.
   It's passed a list of values corresponding to XPath function arguments
   and should return a value of one of XPath types (string, boolean, number,
   node set).

   Example:
   @begin{pre}
   (define-xpath-function/eager my-ext join (delim node-set)
     (reduce (lambda (a b) (concatenate 'string a delim b))
             (map-node-set->list #'string-value node-set)))
   @end{pre}
   @see{define-xpath-extension}
   @see{define-xpath-function/lazy}
   @see{define-xpath-function/single-type}")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-XPATH-FUNCTION/SINGLE-TYPE" :PACKAGE-NAME "XPATH"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[ext]{name of an XPath extension (a symbol)}
   @arg[name]{XPath function name}
   @arg[args]{XPath function arguments}
   @short{Defines an XPath function, \"eager\" style with automatic type conversion.}

   The @code{body} is evaluated during evaluation of XPath
   expressions each time the function being defined is called.
   It's passed a list of values corresponding to XPath function arguments
   and should return a value of one of XPath types (string, boolean, number,
   node set). Argument values are automatically converted to specified XPath @code{type}.

   Example:
   @begin{pre}
   (xpath-sys:define-xpath-function/single-type my-ext add-quotes string (string)
     (concat \"\\\"\" string \"\\\"\"))
   @end{pre}
   @see{define-xpath-extension}
   @see{define-xpath-function/lazy}
   @see{define-xpath-function/eager}")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENVIRONMENT-FIND-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[environment]{an XPath environment object}
  @arg[prefix]{prefix part of a QName}
  Returns namespace URI for specified @code{prefix}.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENVIRONMENT-FIND-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[environment]{an XPath environment object}
  @arg[local-name]{local part of expanded-name of the function}
  @arg[uri]{namespace URI of the function}
  @return{an XPath function or nil if it cannot be found}
  @short{Finds an XPath function by @code{local-name} and @code{uri}}.

  XPath function is a Lisp function that takes zero or more \"thunks\"
  as its arguments (corresponding to XPath expressions passed as function
  arguments) and returns a new \"thunk\". A \"thunk\" is a function
  that takes an instance of @class{context} as its argument and returns
  the value of one of XPath types.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ENVIRONMENT-FIND-VARIABLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[environment]{an XPath environment object}
  @arg[local-name]{local part of expanded-name of the function}
  @arg[uri]{namespace URI of the function}
  @return{XPath variable \"thunk\"}
  @short{Finds an XPath variable by @code{local-name} and @code{uri}}.
  
  XPath variable is represented by a \"thunk\". A \"thunk\" is a function
  that takes an instance of @class{context} as its argument and returns
  the value of one of XPath types.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NAMESPACES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NAMESPACES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INITIAL-NAMESPACES*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'((NIL . \"\") (\"xmlns\" . \"http://www.w3.org/2000/xmlns/\")
  (\"xml\" . \"http://www.w3.org/XML/1998/namespace\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DYNAMIC-NAMESPACES*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "XPATH::*INITIAL-NAMESPACES*")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DYNAMIC-VAR-BINDINGS*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "LNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-VARIABLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "LNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%NAMESPACE-BINDING-PAIR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-NAMESPACES" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "BINDINGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[bindings]{bindings in the form (PREFIX VALUE). PREFIXes and VALUEs are evaluated}
   @return{the tresult of evaluating @code{body}}
   @short{Provides namespace bindings for XPath compilation}

   Namespace bindings are used for compilation of XPath expressions.
   nil is equivalent of \"\" prefix. Bindings provided by this macro
   have dynamic scope.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-DYNAMIC-QNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "QNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-DYNAMIC-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%VARIABLE-BINDING-PAIR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "QNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-VARIABLES" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "BINDINGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[bindings]{bindings in the form (QNAME VALUE). QNAMEs and VALUEs are evaluated}
   @return{the tresult of evaluating @code{body}}
   @short{Provides bindings for XPath variables}

   Variable bindings are used for evaluation of compiled XPath expressions. Bindings
   provided by this macro have dynamic scope.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "TEST-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-TEST-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "TEST-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "TEST-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "LNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ENVIRONMENT-FIND-VARIABLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "TEST-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "LNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-AXIS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      ((:NAME "ORDERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "PRINCIPAL-NODE-TYPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
        (:NAME "ELEMENT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "AXIS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-PROPERTIES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "AXIS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-PRINCIPAL-NODE-TYPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "AXIS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-CHILD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-SELF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-PARENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-DESCENDANT-OR-SELF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-REVERSE-DESCENDANT-OR-SELF" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-DESCENDANT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-FOLLOWING-SIBLING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-PRECEDING-SIBLING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-FOLLOWING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-PRECEDING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-ANCESTOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-ANCESTOR-OR-SELF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-ATTRIBUTE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "AXIS-ROOT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "LOCAL-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) ""))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-PRINCIPAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-TEXT-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-PROCESSING-INSTRUCTION" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-COMMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TEST-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LOCATION-STEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AXIS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PREDICATES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-PREDICATES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-LOCATION-PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STEPS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-TRUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-LOCATION-PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DECODE-QNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "QNAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ATTRIBUTEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PREFIX" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ATTRIBUTEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-XPATH/SEXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-VARIABLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-NODE-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ATTRIBUTEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-LOCATION-STEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STEP-SPEC" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-FILTER-PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FILTER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PREDICATE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-EQUAL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "U" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-AND" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPRS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XF-OR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "EXPRS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-=" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-23" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-/=" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-46" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-<" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-69" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD->" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-92" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-<=" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-115" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD->=" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-138" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-AND" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-160" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-OR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-165" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-NOT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-171" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-TRUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-194" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-FALSE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-200" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-BOOLEAN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-206" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-LANG-ATTRIBUTE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-LANG" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-234" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-POSITION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-355" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-LAST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-361" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-COUNT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-367" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-LOCAL-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-390" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-413" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-NAMESPACE-URI" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-436" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-UNION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-459" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-SUM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-493" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-518" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-STRING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-548" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-CONCAT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-559" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-CONTAINS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-581" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-SUBSTRING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-604" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-STARTS-WITH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-643" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-SUBSTRING-BEFORE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-667" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-SUBSTRING-AFTER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-690" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-STRING-LENGTH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-712" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-NORMALIZE-SPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-722" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-TRANSLATE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-731" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-NUMBER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-767" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-FLOOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-778" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-ROUND" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-801" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-CEILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-824" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-+" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-851" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-874" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-/" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-897" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-MOD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-920" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD--" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-943" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFLEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME-AND-OPTIONS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RULES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NC-NAME-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XPATH-LEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-FIXUP-LEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RULES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FIXUP-LEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NEXT-LEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "LAMBDA*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-FUNCTION-NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*XPATH-PARSER*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "'#S(YACC::PARSER
    :STATES 122
    :GOTO #(((XPATH::EXPR . 1) (XPATH::OR-EXPR . 2) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL
            ((XPATH::AND-EXPR . 4) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::EQUALITY-EXPR . 101) (XPATH::RELATIONAL-EXPR . 121)
             (XPATH::ADDITIVE-EXPR . 120) (XPATH::MULTIPLICATIVE-EXPR . 115)
             (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::EQUALITY-EXPR . 6) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::RELATIONAL-EXPR . 8) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::ADDITIVE-EXPR . 120) (XPATH::MULTIPLICATIVE-EXPR . 115)
             (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::ADDITIVE-EXPR . 10) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::MULTIPLICATIVE-EXPR . 12) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::UNARY-EXPR . 14) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL NIL
            ((XPATH::EXPR . 17) (XPATH::OR-EXPR . 2)
             (XPATH::FUNCTION-CALL . 21) (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL NIL NIL NIL
            ((STEP . 24) (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL
            ((XPATH::NODE-TEST . 26) (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            ((XPATH::PREDICATES . 27) (XPATH::PREDICATE . 28)) NIL
            ((XPATH::PREDICATES . 29) (XPATH::PREDICATE . 28)) NIL
            ((XPATH::PREDICATE-EXPR . 31) (XPATH::EXPR . 33)
             (XPATH::OR-EXPR . 2) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL NIL
            ((XPATH::RELATIVE-LOCATION-PATH . 36) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL
            ((STEP . 38) (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL ((XPATH::PREDICATES . 40) (XPATH::PREDICATE . 28)) NIL NIL NIL
            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
            NIL NIL NIL NIL NIL NIL NIL NIL NIL
            ((XPATH::ARGUMENTS . 70) (XPATH::EXPR . 72) (XPATH::OR-EXPR . 2)
             (XPATH::FUNCTION-CALL . 21) (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL
            ((XPATH::ARGUMENTS . 74) (XPATH::EXPR . 72) (XPATH::OR-EXPR . 2)
             (XPATH::FUNCTION-CALL . 21) (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL
            ((XPATH::ARGUMENTS . 78) (XPATH::EXPR . 72) (XPATH::OR-EXPR . 2)
             (XPATH::FUNCTION-CALL . 21) (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL
            ((XPATH::RELATIVE-LOCATION-PATH . 81) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL NIL
            ((XPATH::ARGUMENTS . 84) (XPATH::EXPR . 72) (XPATH::OR-EXPR . 2)
             (XPATH::FUNCTION-CALL . 21) (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::AND-EXPR . 100) (XPATH::EQUALITY-EXPR . 101)
             (XPATH::RELATIONAL-EXPR . 121) (XPATH::ADDITIVE-EXPR . 120)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL
            ((XPATH::PATH-EXPR . 88) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL NIL ((XPATH::PREDICATE . 95))
            ((XPATH::RELATIVE-LOCATION-PATH . 92) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL
            ((XPATH::RELATIVE-LOCATION-PATH . 94) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48))
            NIL NIL NIL NIL
            ((XPATH::PATH-EXPR . 99) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL NIL NIL
            ((XPATH::RELATIONAL-EXPR . 103) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::ADDITIVE-EXPR . 120) (XPATH::MULTIPLICATIVE-EXPR . 115)
             (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::ADDITIVE-EXPR . 105) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::MULTIPLICATIVE-EXPR . 107) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::UNARY-EXPR . 109) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL
            ((XPATH::UNARY-EXPR . 111) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL
            ((XPATH::UNARY-EXPR . 113) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96))
            NIL NIL NIL
            ((XPATH::ADDITIVE-EXPR . 117) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL
            ((XPATH::ADDITIVE-EXPR . 119) (XPATH::FUNCTION-CALL . 21)
             (XPATH::RELATIVE-LOCATION-PATH . 22)
             (XPATH::ABSOLUTE-LOCATION-PATH . 34)
             (XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH . 67) (STEP . 65)
             (XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH . 66)
             (XPATH::AXIS-SPECIFIER . 25) (XPATH::NODE-TEST . 39)
             (XPATH::ABBREVIATED-STEP . 41)
             (XPATH::ABBREVIATED-AXIS-SPECIFIER . 44)
             (XPATH::OPERATOR-ACTUALLY-NCNAME . 48) (XPATH::PATH-EXPR . 86)
             (XPATH::UNION-EXPR . 97) (XPATH::LOCATION-PATH . 89)
             (XPATH::FILTER-EXPR . 90) (XPATH::PRIMARY-EXPR . 96)
             (XPATH::MULTIPLICATIVE-EXPR . 115) (XPATH::UNARY-EXPR . 114))
            NIL NIL NIL)
    :ACTION #(((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((YACC::YACC-EOF-SYMBOL . #<YACC::ACCEPT-ACTION >))
              ((:OR . #<YACC::SHIFT-ACTION 3>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION XPATH::EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::EXPR (1)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:AND . #<YACC::SHIFT-ACTION 5>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (3)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:!= . #<YACC::SHIFT-ACTION 102>) (:= . #<YACC::SHIFT-ACTION 7>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:>= . #<YACC::SHIFT-ACTION 118>)
               (:> . #<YACC::SHIFT-ACTION 116>)
               (:<= . #<YACC::SHIFT-ACTION 104>) (:< . #<YACC::SHIFT-ACTION 9>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:- . #<YACC::SHIFT-ACTION 106>) (:+ . #<YACC::SHIFT-ACTION 11>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:MOD . #<YACC::SHIFT-ACTION 112>)
               (:DIV . #<YACC::SHIFT-ACTION 108>)
               (:MULTIPLY . #<YACC::SHIFT-ACTION 13>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:MOD . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 18>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (3)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>))
              ((:// . #<YACC::SHIFT-ACTION 37>) (:/ . #<YACC::SHIFT-ACTION 23>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (3)>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>))
              ((:RPAREN . #<YACC::REDUCE-ACTION STEP (2)>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION STEP (2)>)
               (:/ . #<YACC::REDUCE-ACTION STEP (2)>)
               (:// . #<YACC::REDUCE-ACTION STEP (2)>)
               (:PIPE . #<YACC::REDUCE-ACTION STEP (2)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION STEP (2)>)
               (:DIV . #<YACC::REDUCE-ACTION STEP (2)>)
               (:MOD . #<YACC::REDUCE-ACTION STEP (2)>)
               (:+ . #<YACC::REDUCE-ACTION STEP (2)>)
               (:- . #<YACC::REDUCE-ACTION STEP (2)>)
               (:< . #<YACC::REDUCE-ACTION STEP (2)>)
               (:<= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:> . #<YACC::REDUCE-ACTION STEP (2)>)
               (:>= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:!= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:AND . #<YACC::REDUCE-ACTION STEP (2)>)
               (:OR . #<YACC::REDUCE-ACTION STEP (2)>)
               (:COMMA . #<YACC::REDUCE-ACTION STEP (2)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION STEP (2)>)
               (:LBRACKET . #<YACC::SHIFT-ACTION 30>))
              ((:OR . #<YACC::REDUCE-ACTION STEP (3)>)
               (:AND . #<YACC::REDUCE-ACTION STEP (3)>)
               (:!= . #<YACC::REDUCE-ACTION STEP (3)>)
               (:= . #<YACC::REDUCE-ACTION STEP (3)>)
               (:>= . #<YACC::REDUCE-ACTION STEP (3)>)
               (:> . #<YACC::REDUCE-ACTION STEP (3)>)
               (:<= . #<YACC::REDUCE-ACTION STEP (3)>)
               (:< . #<YACC::REDUCE-ACTION STEP (3)>)
               (:- . #<YACC::REDUCE-ACTION STEP (3)>)
               (:+ . #<YACC::REDUCE-ACTION STEP (3)>)
               (:MOD . #<YACC::REDUCE-ACTION STEP (3)>)
               (:DIV . #<YACC::REDUCE-ACTION STEP (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION STEP (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION STEP (3)>)
               (:// . #<YACC::REDUCE-ACTION STEP (3)>)
               (:/ . #<YACC::REDUCE-ACTION STEP (3)>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION STEP (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION STEP (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION STEP (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION STEP (3)>))
              ((:LBRACKET . #<YACC::SHIFT-ACTION 30>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PREDICATES (1)>))
              ((:RPAREN . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PREDICATES (2)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:RBRACKET . #<YACC::SHIFT-ACTION 32>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PREDICATE (3)>))
              ((:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PREDICATE-EXPR (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::LOCATION-PATH (1)>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>))
              ((:// . #<YACC::SHIFT-ACTION 37>) (:/ . #<YACC::SHIFT-ACTION 23>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (2)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>))
              ((:RBRACKET
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:OR
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:AND
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:!=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:>=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:>
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:<=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:<
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:-
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:+
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:MOD
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:DIV
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (://
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:/
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-RELATIVE-LOCATION-PATH (3)>))
              ((:OR . #<YACC::REDUCE-ACTION STEP (1)>)
               (:AND . #<YACC::REDUCE-ACTION STEP (1)>)
               (:!= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:>= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:> . #<YACC::REDUCE-ACTION STEP (1)>)
               (:<= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:< . #<YACC::REDUCE-ACTION STEP (1)>)
               (:- . #<YACC::REDUCE-ACTION STEP (1)>)
               (:+ . #<YACC::REDUCE-ACTION STEP (1)>)
               (:MOD . #<YACC::REDUCE-ACTION STEP (1)>)
               (:DIV . #<YACC::REDUCE-ACTION STEP (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION STEP (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION STEP (1)>)
               (:// . #<YACC::REDUCE-ACTION STEP (1)>)
               (:/ . #<YACC::REDUCE-ACTION STEP (1)>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION STEP (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION STEP (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION STEP (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION STEP (1)>)
               (:LBRACKET . #<YACC::SHIFT-ACTION 30>))
              ((:RBRACKET . #<YACC::REDUCE-ACTION STEP (2)>)
               (:RPAREN . #<YACC::REDUCE-ACTION STEP (2)>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION STEP (2)>)
               (:/ . #<YACC::REDUCE-ACTION STEP (2)>)
               (:// . #<YACC::REDUCE-ACTION STEP (2)>)
               (:PIPE . #<YACC::REDUCE-ACTION STEP (2)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION STEP (2)>)
               (:DIV . #<YACC::REDUCE-ACTION STEP (2)>)
               (:MOD . #<YACC::REDUCE-ACTION STEP (2)>)
               (:+ . #<YACC::REDUCE-ACTION STEP (2)>)
               (:- . #<YACC::REDUCE-ACTION STEP (2)>)
               (:< . #<YACC::REDUCE-ACTION STEP (2)>)
               (:<= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:> . #<YACC::REDUCE-ACTION STEP (2)>)
               (:>= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:!= . #<YACC::REDUCE-ACTION STEP (2)>)
               (:AND . #<YACC::REDUCE-ACTION STEP (2)>)
               (:OR . #<YACC::REDUCE-ACTION STEP (2)>)
               (:COMMA . #<YACC::REDUCE-ACTION STEP (2)>))
              ((:OR . #<YACC::REDUCE-ACTION STEP (1)>)
               (:AND . #<YACC::REDUCE-ACTION STEP (1)>)
               (:!= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:>= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:> . #<YACC::REDUCE-ACTION STEP (1)>)
               (:<= . #<YACC::REDUCE-ACTION STEP (1)>)
               (:< . #<YACC::REDUCE-ACTION STEP (1)>)
               (:- . #<YACC::REDUCE-ACTION STEP (1)>)
               (:+ . #<YACC::REDUCE-ACTION STEP (1)>)
               (:MOD . #<YACC::REDUCE-ACTION STEP (1)>)
               (:DIV . #<YACC::REDUCE-ACTION STEP (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION STEP (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION STEP (1)>)
               (:// . #<YACC::REDUCE-ACTION STEP (1)>)
               (:/ . #<YACC::REDUCE-ACTION STEP (1)>)
               (YACC::YACC-EOF-SYMBOL . #<YACC::REDUCE-ACTION STEP (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION STEP (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION STEP (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION STEP (1)>))
              ((:COLONS . #<YACC::SHIFT-ACTION 43>))
              ((:NS-NAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:QNAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:STAR . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:NCNAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:NODE-TYPE-OR-FUNCTION-NAME
                . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>)
               (:PROCESSING-INSTRUCTION
                . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (2)>))
              ((:PROCESSING-INSTRUCTION
                . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:NODE-TYPE-OR-FUNCTION-NAME
                . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:NCNAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:NS-NAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:QNAME . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>)
               (:STAR . #<YACC::REDUCE-ACTION XPATH::AXIS-SPECIFIER (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (1)>))
              ((:LPAREN . #<YACC::SHIFT-ACTION 51>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 52>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>))
              ((:LPAREN . #<YACC::SHIFT-ACTION 54>))
              ((:LITERAL . #<YACC::SHIFT-ACTION 56>)
               (:RPAREN . #<YACC::SHIFT-ACTION 55>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (3)>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 57>))
              ((:RBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::NODE-TEST (4)>))
              ((:OR
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:!=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:-
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:+
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (://
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:/
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:LBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>))
              ((:OR
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:!=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:-
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:+
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (://
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:/
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:LBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>))
              ((:OR
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:!=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:-
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:+
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (://
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:/
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:LBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>))
              ((:OR
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:!=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:>
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<=
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:<
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:-
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:+
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (://
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:/
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:LBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::OPERATOR-ACTUALLY-NCNAME (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-STEP (1)>))
              ((:PROCESSING-INSTRUCTION
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:NODE-TYPE-OR-FUNCTION-NAME
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:NCNAME
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:NS-NAME
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:QNAME
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:OR
                . #<YACC::REDUCE-ACTION XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>)
               (:STAR
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-AXIS-SPECIFIER (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::RELATIVE-LOCATION-PATH (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:AND
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:MOD
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:DIV
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::ABSOLUTE-LOCATION-PATH (1)>))
              ((:LPAREN . #<YACC::SHIFT-ACTION 69>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>)
               (:RPAREN . #<YACC::SHIFT-ACTION 52>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 71>))
              ((:RBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>))
              ((:COMMA . #<YACC::SHIFT-ACTION 73>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ARGUMENTS (1)>))
              ((:RPAREN . #<YACC::REDUCE-ACTION XPATH::ARGUMENTS (0)>)
               (:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:RPAREN . #<YACC::REDUCE-ACTION XPATH::ARGUMENTS (3)>))
              ((:LPAREN . #<YACC::SHIFT-ACTION 76>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>)
               (:LITERAL . #<YACC::SHIFT-ACTION 77>)
               (:RPAREN . #<YACC::SHIFT-ACTION 55>))
              ((:COMMA . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::PRIMARY-EXPR (1)>)
               (:RPAREN . #<YACC::SHIFT-ACTION 57>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 79>))
              ((:COMMA . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:// . #<YACC::SHIFT-ACTION 37>)
               (:COMMA
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:PIPE
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:DIV
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:MOD
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:+
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:-
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:<
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:<=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:>
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:>=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:!=
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:AND
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:OR
                . #<YACC::REDUCE-ACTION
                    XPATH::ABBREVIATED-ABSOLUTE-LOCATION-PATH (2)>)
               (:/ . #<YACC::SHIFT-ACTION 23>))
              ((:LPAREN . #<YACC::SHIFT-ACTION 83>))
              ((:RPAREN . #<YACC::REDUCE-ACTION XPATH::ARGUMENTS (0)>)
               (:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:RPAREN . #<YACC::SHIFT-ACTION 85>))
              ((:COMMA . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::FUNCTION-CALL (4)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:PIPE . #<YACC::SHIFT-ACTION 87>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (1)>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>))
              ((:LBRACKET . #<YACC::SHIFT-ACTION 30>)
               (:// . #<YACC::SHIFT-ACTION 93>) (:/ . #<YACC::SHIFT-ACTION 91>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (1)>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:// . #<YACC::SHIFT-ACTION 37>)
               (:/ . #<YACC::SHIFT-ACTION 23>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 53>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 50>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::PATH-EXPR (3)>)
               (:// . #<YACC::SHIFT-ACTION 37>)
               (:/ . #<YACC::SHIFT-ACTION 23>))
              ((:COMMA . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (2)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:// . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:/ . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:LBRACKET . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::FILTER-EXPR (1)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (1)>)
               (:PIPE . #<YACC::SHIFT-ACTION 98>))
              ((:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:PIPE . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::UNION-EXPR (3)>))
              ((:AND . #<YACC::SHIFT-ACTION 5>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::OR-EXPR (1)>))
              ((:!= . #<YACC::SHIFT-ACTION 102>) (:= . #<YACC::SHIFT-ACTION 7>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::AND-EXPR (1)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:>= . #<YACC::SHIFT-ACTION 118>)
               (:> . #<YACC::SHIFT-ACTION 116>)
               (:<= . #<YACC::SHIFT-ACTION 104>) (:< . #<YACC::SHIFT-ACTION 9>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (3)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:- . #<YACC::SHIFT-ACTION 106>) (:+ . #<YACC::SHIFT-ACTION 11>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:MOD . #<YACC::SHIFT-ACTION 112>)
               (:DIV . #<YACC::SHIFT-ACTION 108>)
               (:MULTIPLY . #<YACC::SHIFT-ACTION 13>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:COMMA . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:MULTIPLY . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::UNARY-EXPR (2)>))
              ((:- . #<YACC::SHIFT-ACTION 110>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:/ . #<YACC::SHIFT-ACTION 35>) (:// . #<YACC::SHIFT-ACTION 80>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:DOT . #<YACC::SHIFT-ACTION 62>))
              ((:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (3)>))
              ((:OR . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:MOD . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:DIV . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:MULTIPLY
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:RPAREN
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:RBRACKET
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>)
               (:COMMA
                . #<YACC::REDUCE-ACTION XPATH::MULTIPLICATIVE-EXPR (1)>))
              ((:MOD . #<YACC::SHIFT-ACTION 112>)
               (:DIV . #<YACC::SHIFT-ACTION 108>)
               (:MULTIPLY . #<YACC::SHIFT-ACTION 13>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:- . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:+ . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::ADDITIVE-EXPR (1)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:- . #<YACC::SHIFT-ACTION 106>) (:+ . #<YACC::SHIFT-ACTION 11>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>))
              ((:DOT . #<YACC::SHIFT-ACTION 62>)
               (:TWO-DOTS . #<YACC::SHIFT-ACTION 63>)
               (:AT . #<YACC::SHIFT-ACTION 64>)
               (:AXIS-NAME . #<YACC::SHIFT-ACTION 42>)
               (:STAR . #<YACC::SHIFT-ACTION 49>)
               (:OR . #<YACC::SHIFT-ACTION 61>)
               (:MOD . #<YACC::SHIFT-ACTION 58>)
               (:DIV . #<YACC::SHIFT-ACTION 59>)
               (:AND . #<YACC::SHIFT-ACTION 60>)
               (:NS-NAME . #<YACC::SHIFT-ACTION 45>)
               (:QNAME . #<YACC::SHIFT-ACTION 46>)
               (:NCNAME . #<YACC::SHIFT-ACTION 47>)
               (:// . #<YACC::SHIFT-ACTION 80>) (:/ . #<YACC::SHIFT-ACTION 35>)
               (:NUMBER . #<YACC::SHIFT-ACTION 20>)
               (:VARIABLE . #<YACC::SHIFT-ACTION 15>)
               (:LPAREN . #<YACC::SHIFT-ACTION 16>)
               (:LITERAL . #<YACC::SHIFT-ACTION 19>)
               (:FUNCTION-NAME . #<YACC::SHIFT-ACTION 82>)
               (:NODE-TYPE-OR-FUNCTION-NAME . #<YACC::SHIFT-ACTION 68>)
               (:PROCESSING-INSTRUCTION . #<YACC::SHIFT-ACTION 75>)
               (:- . #<YACC::SHIFT-ACTION 110>))
              ((:- . #<YACC::SHIFT-ACTION 106>) (:+ . #<YACC::SHIFT-ACTION 11>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (3)>))
              ((:- . #<YACC::SHIFT-ACTION 106>) (:+ . #<YACC::SHIFT-ACTION 11>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:>= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:> . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:<= . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:< . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::RELATIONAL-EXPR (1)>))
              ((:>= . #<YACC::SHIFT-ACTION 118>)
               (:> . #<YACC::SHIFT-ACTION 116>)
               (:<= . #<YACC::SHIFT-ACTION 104>) (:< . #<YACC::SHIFT-ACTION 9>)
               (:OR . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:AND . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:!= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:= . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (YACC::YACC-EOF-SYMBOL
                . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:RPAREN . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:RBRACKET . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>)
               (:COMMA . #<YACC::REDUCE-ACTION XPATH::EQUALITY-EXPR (1)>))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION
     "@arg[str]{a string}
   @return{a s-expression-based XPath expression}
   Parses a string-based XPath expression into s-expression-based one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-LEXER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DRIBBLE-TESTS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIRST-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[node-set]{a @class{node-set}}
   @return{a @class{node-set} or nil}
   Returns the first node in the @code{node-set} or nil if it's empty.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-NODES" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)) :DOCUMENTATION
     "@arg[node-set]{a @class{node-set}}
   @return{a list of nodes}
   Returns all nodes of the @code{node-set} as a list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[func]{a function}
   @arg[node-set]{a @class{node-set}}
   @return{nil}
   @short{Calls @code{func} for each node in @code{node-set}}

   The operation is performed lazily, i.e. if it's terminated via
   a non-local exit it doesn't necessarily cause the XPath engine to find
   out all nodes in the @class{node-set} internally.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAP-NODE-SET->LIST" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNC" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[func]{a function}
   @arg[node-set]{a @class{node-set}}
   @return{a list}
   @short{Calls @code{func} for each node in @code{node-set} and conses up
   a list of its return values}

   The operation is performed lazily, i.e. if it's terminated via
   a non-local exit it doesn't necessarily cause the XPath engine to find
   out all nodes in the @class{node-set} internally.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DO-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "RESULT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[var]{symbol, a variable name}
   @arg[node-set]{a @class{node-set}}
   @arg[result]{a form}
   @return{the result of evaluating @code{result}}
   @short{Executes @code{body} with @code{var} bound to successive nodes
     in @code{node-set}}

   The operation is performed lazily, i.e. if it's terminated via
   a non-local exit it doesn't necessarily cause the XPath engine to find
   out all nodes in the @class{node-set} internally.

   Returns nil if @code{result} form isn't specified.")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "NODE-SET-ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-NODE-SET-ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-NODE-SET-ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T))
     :DOCUMENTATION "@arg[node-set]{a @class{node-set}}
   @return{a node-set iterator}
   @short{Creates a node set iterator for @code{node-set}}

  Node set iterators can be used to iterate over node-sets.
  This can be done without causing the XPath engine to find out
  all their nodes and using non-local exits.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-ITERATOR-END-P" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[iterator]{a node-set iterator returned by @fun{make-node-set-iterator}}
   @return{a generalized boolean}
   Returns true if @code{iterator} points to the end of its node set")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-ITERATOR-NEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[iterator]{a node-set iterator returned by @fun{make-node-set-iterator}}
   @return{the value of @code{iterator}}
   Advances @code{iterator} if it's not at the end of its node set,
   does nothing otherwise.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-SET-ITERATOR-CURRENT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@arg[iterator]{a node-set iterator returned by @fun{make-node-set-iterator}}
   @return{a node or nil}
   Returns current node of @code{iterator} or nil if it's at the end
   of its node set.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST->NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "@arg[list]{a list of nodes}
   @return{a @class{node-set}}
   Makes a @class{node-set} from the @code{list} of nodes.")
    (:TYPE :MACRO :SYMBOL (:NAME "XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "FORM" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[form]{a sexpr-based XPath form}
   @return{a list consisting of symbol XPATH and the @code{form}}
   This macro is used to specify sexpr-based XPath expression for @fun{evaluate}")
    (:TYPE :TYPE :SYMBOL
     (:NAME "XPATH-EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       ((:NAME "MAKE-DYNAMIC-ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
        (:NAME "*DYNAMIC-NAMESPACES*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))))
     :DOCUMENTATION "@arg[xpath]{an XPath expression}
   @return{a compiled XPath expression}
   @short{Compiles an XPath expression}

   The @code{xpath} expression is compiled using current environment if it isn't
   compiled yet. @code{xpath} can be a string, a sexpr-based XPath epression or
   a compiled expression. In the latter case @code{xpath} argument value itself
   is returned.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EVALUATE-COMPILED" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "COMPILED-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNORDERED-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[compiled-xpath]{a compiled XPath expression}
   @arg[context]{an XPath context}
   @arg[unordered-p]{specify true to get unordered node-set}
   @return{the result of evaluating @code{compiled-xpath} within the @code{context}}
   @short{Evaluates a compiled XPath expression returned by @fun{compile-xpath}}

   The @code{context} can be obtained using @fun{make-context}. As an alternative,
   a node can be specifed.

   If @code{unordered-p} is false (default) and value being returned is a @class{node-set},
   it will be sorted using @fun{sort-node-set} so its nodes will be in document
   order. If @code{unordered-p} is true, the order of the nodes is unspecified.
   Unordered mode can be significantly faster in some cases (and never slower).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAME-EXPR-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "PREV-EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "CUR-BINDINGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMESPACES-MATCH-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OLD-BINDINGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "CUR-BINDINGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EVALUATE" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNORDERED-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[xpath]{an XPath expression}
   @arg[context]{an XPath context}
   @arg[unordered-p]{specify true to get unordered node-set}
   @return{the result of evaluating @code{xpath} within the @code{context}}
   @short{Evaluates an XPath expression}

   @code{xpath} can be a string, a sexpr-based XPath epression or
   a compiled expression. The @code{context} can be obtained using @fun{make-context}.
   As an alternative, a node can be specifed.

   If @code{unordered-p} is false (default) and value being returned is a @class{node-set},
   it will be sorted using @fun{sort-node-set} so its nodes will be in document
   order. If @code{unordered-p} is true, the order of the nodes is unspecified.
   Unordered mode can be significantly faster in some cases (and never slower).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XPATH-ERROR" :PACKAGE-NAME "XPATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FMT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[fmt]{format control string}
   @arg[args]{format arguments}
   Signals the @class{xpath-error} condition with specified message.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PLX-URI*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "\"http://common-lisp.net/project/plexippus-xpath/plx\"")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-PLX-EXTENSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION
     "@short{Binds plx prefix to Plexippus XPath extensions namespace.}

   The following functions are currently available:

   @pre{plx:matches(string, pattern, flags?)}
   Returns true if @code{string} is matched by regular expression @code{pattern},
   false otherwise. Optional @code{flags} specify modifiers (i, m, s). CL-PPCRE
   is used as regular expression engine.

   @pre{plx:replace(string, pattern, replacement, flags?)}
   Returns @code{string} with all matches of regular expression @code{pattern}
   replaced with @code{replacement}. Optional @code{flags} specify modifiers
   (i, m, s).

   @pre{plx:current()}
   Returns a @class{node-set} consisting of one node which was specifed
   as context node for expression evaluation. Analagous to @code{current()}
   function of XSLT.

   @pre{plx:generate-id(node-set?)}
   Returns an alphanumeric string that uniquely identifies the first node of
   the @code{node-set} (or context node if @code{node-set} isn't specified)
   within its document. Analagous to @code{generate-id()} of XSLT (except
   that the latter works across multiple documents).")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-REGEX-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-MATCHES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-32" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-REPLACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-69" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-CURRENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "THUNKS-106" :PACKAGE-NAME NIL :EXTERNALP NIL)) :DOCUMENTATION
     NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XFD-GENERATE-ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THUNKS-112" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALLOW-VARIABLES-IN-PATTERNS*" :PACKAGE-NAME "XPATTERN" :EXTERNALP
      T)
     :DOCUMENTATION
     "If set to T, predicates in patterns are permitted to reference variables
   using $var syntax.  If set to NIL, such variable references signal a
   compilation-time error.  The default is T.  Bind this variable to NIL to
   enable compatibility with XSLT 1.0.
   @see{compute-patterns}"
     :INITIAL-VALUE "T")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "PATTERN" :PACKAGE-NAME "XPATTERN" :EXTERNALP T) :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Represents a parsed XSLT pattern.
       @see-constructor{compute-patterns}
       @see-slot{pattern-value}
       @see-slot{pattern-priority}
       @see{make-pattern-matcher}"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PRIORITY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THUNK" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%MAKE-PATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "THUNK" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PRIORITY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCHING-VALUES" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATCHER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[matcher]{a pattern matching function}
   @arg[node]{any node implementing the XPath protocol}
   @return{an object}
   @short{Apply a pattern matcher to node, and return one or more matching
   values.}

   For use with @code{matcher} functions that have been returned by
   @fun{make-pattern-matcher} or a higher-level function like
   @fun{make-pattern-matcher*}.

   The resulting list will contain the user-specified values as
   returned by @fun{pattern-value} on the patterns for this matcher, in
   any order.   Duplicates under @code{eql} will have been removed from
   the list.

   @see{node-matches-p}
   @see{pattern-case}
   @see{pattern-ecase}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCHING-VALUE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATCHER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEFAULT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "@arg[matcher]{a pattern matching function}
   @arg[node]{any node implementing the XPath protocol}
   @arg[default]{an object}
   @return{an object}
   @short{Apply a pattern matcher to node, and return exactly one value.}

   For use with @code{matcher} functions that have been returned by
   @fun{make-pattern-matcher} or a higher-level function like
   @fun{make-pattern-matcher*}.

   If exactly one pattern matches, or several patterns for the same value
   match, the user-specified values as determined by @fun{pattern-value}
   will be returned by this function.

   If no pattern matches, @code{default} will be returned instead.

   If more than one pattern of highest priority and different values
   match, an @code{xpath-error} will be signalled.

   @see{node-matches-p}
   @see{pattern-case}
   @see{pattern-ecase}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-PATTERN-EXPRESSION" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[str]{a string}
   @return{a s-expression-based pattern expression}
   Parses an XSLT pattern into an s-expression.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PATTERN-MATCHER*" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[expression]{a string or s-expression}
   @arg[environment]{an @code{environment}}
   @return{the pattern matcher, a function}
   @short{Create a pattern matcher for a single pattern.}

   This function is a convenience wrapper around @fun{compute-patterns}
   and @fun{make-pattern-matcher}.

   The resulting matcher will return T if the specified @code{expression}
   matches, or NIL if it doesn't.

   @see{compute-patterns}
   @see{matching-value}
   @see{matching-values}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PATTERN-MATCHER" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATTERNS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[patterns]{a list of @class{pattern}s}
   @return{the pattern matcher, a function}
   @short{Create a pattern matcher that distinguishes between
     multiple patterns.}

   This function combines several patterns, and creates a matcher function
   for use with @fun{matching-value} or @fun{matching-values}.
   The matcher function will compare a node against each pattern, and
   find the highest-priority pattern or patterns that match the node.

   @see{compute-patterns}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-PATTERNS" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PRIORITY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[expression]{a string or s-expression}
   @arg[priority]{an integer}
   @arg[value]{an object}
   @arg[environment]{an @code{environment}}
   @return{a list of @class{pattern}s}
   @short{Parse an XSLT pattern expression into one or more pattern objects.}

   Parses an expression, resolves its namespace-, variable-, and
   function-references using the specified @code{environment}, and creates
   a @class{pattern} object for the expression (if it does not use a union)
   or one @class{pattern} object for each sub-expression that is being
   joined into the union.

   The specified @code{priority} is used as the @fun{pattern-priority},
   and the specified @code{value} is used as the @fun{pattern-value}.

   @see{make-pattern-matcher*}
   @see{make-pattern-matcher}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-MATCHES-P" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PATTERN-EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[node]{any node implementing the XPath protocol}
   @arg[pattern-expression]{a string or s-expression}
   @return{a boolean}
   @short{Determine whether @code{node} matches the pattern expression.}

   The expression is compiled using the dynamic environment.

   @see{with-namespaces}
   @see{with-variables}
   @see{pattern-case}
   @see{pattern-ecase}")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PATTERN-ECASE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[node]{any node implementing the XPath protocol}
   @arg[clauses]{cases of the form (expression &rest body)}
   @return{The value returned by the matching clause body.}
   @short{Match a node against static expressions.}

   Evaluates @code{node}, and matches them against the specified XSLT
   patterns. The first matching pattern will be chosen, i.e. earlier
   clauses have higher priority that later clauses.

   Expressions are compiled using the dynamic environment.

   If no clause matches, an error will be signalled.

   @see{with-namespaces}
   @see{pattern-case}
   @see{node-matches-p}
   @see{with-variables}")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PATTERN-CASE" :PACKAGE-NAME "XPATTERN" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION "@arg[node]{any node implementing the XPath protocol}
   @arg[clauses]{cases of the form (expression &rest body)}
   @return{The value returned by the matching clause body, or nil.}
   @short{Match a node against static expressions.}

   Evaluates @code{node}, and matches them against the specified XSLT
   patterns. The first matching pattern will be chosen, i.e. earlier
   clauses have higher priority that later clauses.

   Expressions are compiled using the dynamic environment.

   As a special case, the last expression can be @code{t}, in which case
   it matches unconditionally.

   @see{with-namespaces}
   @see{pattern-ecase}
   @see{node-matches-p}
   @see{with-variables}")
    (:TYPE :TYPE :SYMBOL
     (:NAME "PATTERN-EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALID-EXPRESSION-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-PATTERN-EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STEP-KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-PATTERN-EXPRESSION/SEXPR" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME "XPATTERN" :EXTERNALP T)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBPATTERN-KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "SUBPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%COMPILE-SUBPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-SUBPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REVERSE-LOCATION-STEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REVERSE-PREDICATE-CHECK" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "STEP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENVIRONMENT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REVERSE-LOCATION-PATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STARTING-NODE-CHECK" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "STEPS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "PREDICATE-CHECKS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-TYPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PROFILING-ENABLED-P*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-WRAP-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "FUN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SAMPLES*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENABLE-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "VERBOSEP" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "@return{nil}
   @short{Enables profiling.}

   Resets any existing profile samples and enables profiling for future
   XPath compilations.

   Previously returned closures that were created with profiling disabled
   are not affected by this setting, but closures created during an earlier
   profiling session will start sampling again.

   But note that @fun{evaluate}, @fun{node-matches-p}, and @fun{pattern-case}
   will recompile their cached closure when this setting has changed.

   Profiling is not thread safe.

   @see{disable-profiling}
   @see{report}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISABLE-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "@return{nil}
   @short{Disables profiling.}
   
   Disables profiling for future XPath compilations, but keeps recorded
   profiling samples for @fun{report}.

   Previously returned closures that were created with profiling enabled
   will not record samples until profiling is re-activated.

   @see{enable-profiling}")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-NODE-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "S" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRINGIFY-PATTERN-EXPRESSION" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "EXPR" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRINGIFY-PATTERN-EXPRESSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "PATTERNS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRAP-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "FUN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GROUP-AND-SORT-SAMPLES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GROUP-IDENTICAL-EXPRESSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPORT-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "GROUPED-SAMPLES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPORT-XPATTERN" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "GROUPED-SAMPLES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REPORT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "GROUP-IDENTICAL-EXPRESSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "@arg[group-identical-expressions]{Boolean, indicates whether times
     recorded for closures that were compiled separately, but for the same
     expression, are to be summed together.  Default is T.}
   @short{Shows profiling output.}

   Shows cumulative run time and real time, number of calls, and average
   run time for each XPath expression or XPattern matcher that was invoked.
   @see{enable-profiling}
   @see{disable-profiling}")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SAMPLE-XML*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE
     "(XPATH::CONCAT \"<?xml version=\\\"1.0\\\"?>\" \"<div class='something'>\"
               \"<a href='zzz'>\" \"<span class='sample'>val1</span>\" \"val2\"
               \"</a>\" \"<a href='qqq' id='a2'>\"
               \"<span class='sample'>val3</span>\" \"<span><br/></span>\" \"</a>\"
               \"<span class='another'>another-value</span>\"
               \"<span class='yetanother' id='s5'>42<hr/></span>\" \"<h4>5</h4>\"
               \"</div>\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SAMPLE-XML-2*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(XPATH::CONCAT \"<div class='something' xmlns:special='http://special'>\"
               \"<special:a href='zzz'>\" \"<span class='sample'>val1</span>\"
               \"val2\" \"</special:a>\" \"<a href='qqq' id='a2'>\"
               \"<span class='sample'>val3</span>\" \"<span><br/></span>\" \"</a>\"
               \"<special:span class='another'>another-value</special:span>\"
               \"<span class='yetanother' id='s5'>42<hr/></span>\" \"</div>\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SAMPLE-XML-3*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"<?xml version='1.0'?>
<!DOCTYPE main [
  <!ELEMENT main (a|b)*>
  <!ELEMENT a (#PCDATA)>
  <!ATTLIST a id ID #REQUIRED>
  <!ELEMENT b (#PCDATA)>
]>
<main>
  <a id='w'>W</a>
  <a id='x'>X</a>
  <a id='y'>Y</a>
  <a id='z'>Z</a>
  <b>y</b>
  <b>w</b>
  <b>x</b>
</main>\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*SAMPLE-XML-4*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(XPATH::CONCAT \"<?xml version='1.0'?>\" \"<doc>\" \"  <a>\" \"    <b><c/></b>\"
               \"    <b><c><d><e/></d></c></b>\" \"    <e><c/></e>\"
               \"    <e><b><c/></b></e>\" \"    <e><c><d/></c></e>\" \"  </a>\"
               \"<A level='1'>\" \"  <X level='2'>\" \"     <B level='3'>\"
               \"        <X level='4'>\" \"          <C level='5'>\"
               \"            <X level='6'/>\" \"          </C>\" \"        </X>\"
               \"     </B>\" \"  </X>\" \"</A>\" \"</doc>\")")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DOM-BUILDER*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(RUNE-DOM:MAKE-DOM-BUILDER)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DOCUMENT-ELEMENT*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "#'DOM:DOCUMENT-ELEMENT")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-XPATH-TEST" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "JOIN-XPATH-RESULT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESULT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAMPLE-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "XML" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) ""))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-VALUES" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-COMPARISON" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "VERIFY-XPATH*" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "XML" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ITEMS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-NAMESPACES-0" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-NAMESPACES-1" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-NAMESPACES-2" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-NAMESPACES-3" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-NAMESPACES-4" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-VARIABLES-1" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-VARIABLES-2" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-WITH-VARIABLES-3" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-COMPUTED-WITH-VARIABLES" :PACKAGE-NAME "XPATH" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-EAGER-WITH-VARIABLE-EVALUATION" :PACKAGE-NAME "XPATH"
      :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FOLLOWING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-FILTERING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-NODE-SET-API" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PLX-EXTENSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-PATTERN-CASE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-NODE-MATCHES-P" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-XMLS" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAPPEND-LAZY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "EVALUATE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "ALL-NODES" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "CONTEXT-STARTING-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "WITH-VARIABLES" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "EVALUATE-COMPILED" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-EMPTY-P" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "CONTEXT-SIZE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "FIRST-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-ITERATOR-CURRENT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "LIST->NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "MAP-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "WITH-PLX-EXTENSIONS" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "SORT-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "DO-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "COMPILE-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "XPATH-ERROR" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "WITH-NAMESPACES" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "PARSE-XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-ITERATOR-NEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "MAKE-NODE-SET-ITERATOR" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "XPATH" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "STRING-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-P" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "MAP-NODE-SET->LIST" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "*NAVIGATOR*" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NODE-SET-ITERATOR-END-P" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "CONTEXT-POSITION" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "BOOLEAN-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "NUMBER-VALUE" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "XPATH" :EXTERNALP T)
    (:NAME "CONTEXT-NODE" :PACKAGE-NAME "XPATH" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-SYS" :FULL-NAME "XPATH-SYS" :DOCUMENTATION
   "The XPATH-SYS package provides an API for extensions to Plexippus XPath.

   @begin[Pipes]{section}
   Pipes are lazy lists, inspired by their implementation in
   Norvig's 'Paradigms of Artificial Intelligence Programming'.

   @aboutmacro{make-pipe}
   @aboutfun{pipe-head}
   @aboutfun{pipe-tail}
   @end{section}
   @begin[Node sets]{section}
   Node sets are the XPath data type used to represent the results of
   evaluations that select multiple nodes.  As sets, they never contain
   duplicates. Conceptually, they are unordered, with the most important
   order defined on them being the document order.

   As a data structure though, node sets are backed by a pipe, and the order
   of elements in that pipe is well-documented: By default, the pipe of
   returned node sets is sorted into document order.  When unordered
   results are requested, the order is usually not specified, but in some
   cases, are already sorted according to the axis being queried, which
   is usually sorted either in document order,or in reverse document order.
   See @fun{xpath:evaluate} for the @code{unordered} argument.

   @aboutclass{node-set}
   @aboutfun{make-node-set}
   @aboutfun{pipe-of}
   @end{section}
   @begin[Implementing environments]{section}
   Environments provide compilation-time configuration for XPath.
   An environment is a CLOS object, which is queried by the compiler using
   generic functions that users can implement on their own subclasses
   of @class{xpath::environment}.

   The default environment class implements a `dynamic' environment, backed
   by information bound in dynamic variables, so that typical uses of XPath
   work without special environment classes.

   @aboutfun{environment-find-namespace}
   @aboutfun{environment-find-variable}
   @aboutfun{environment-find-function}
   @end{section}
   @begin[Defining extension functions]{section}
   XPath defines built-in functions in the empty namespace.  Using
   the extension API, user code can implement XPath functions addressed
   using other namespaces.

   @aboutmacro{define-extension}
   @aboutmacro{define-xpath-function/lazy}
   @aboutmacro{define-xpath-function/eager}
   @aboutmacro{define-xpath-function/single-type}
   @aboutfun{find-xpath-function}
   @end{section}
   @begin[Profiling support]{section}
   The profiling facility records the run time of XPath evaluations
   and pattern matching.

   @aboutfun{enable-profiling}
   @aboutfun{disable-profiling}
   @aboutfun{report}
   @end{section}
   @begin[Miscellaneous functions]{section}
   Other useful functions:

   @aboutfun{get-node-id}
   @end{section}"
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "ENVIRONMENT-FIND-VARIABLE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "PIPE-TAIL" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "MAKE-NODE-SET" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "FIND-XPATH-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "PIPE-HEAD" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "DEFINE-XPATH-FUNCTION/LAZY" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "ENABLE-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "DISABLE-PROFILING" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "ENVIRONMENT-FIND-NAMESPACE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "PIPE-OF" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "DEFINE-XPATH-FUNCTION/SINGLE-TYPE" :PACKAGE-NAME "XPATH" :EXTERNALP
     NIL)
    (:NAME "DEFINE-EXTENSION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "REPORT" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "ENVIRONMENT-FIND-FUNCTION" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "DEFINE-XPATH-FUNCTION/EAGER" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "MAKE-PIPE" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)
    (:NAME "GET-NODE-ID" :PACKAGE-NAME "XPATH" :EXTERNALP NIL)))))
