
(:TYPE :SYSTEM :NAME "data-table" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.1"
 :LICENCE "BSD" :DESCRIPTION
 "A library providing a data-table class, and useful functionality around this"
 :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("ITERATE" "SYMBOL-MUNGER" "ALEXANDRIA" "CL-INTERPOL") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "DATA-TABLE" :FULL-NAME "DATA-TABLE" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "+COMMON-WHITE-SPACE-TRIMBAG+" :PACKAGE-NAME "DATA-TABLE"
      :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "'(#\\  #\\Newline #\\Return #\\Tab #\\NO-BREAK_SPACE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM-WHITESPACE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRIM-AND-NULLIFY" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "trims the whitespace from a string returning nil
   if trimming produces an empty string or the string 'nil' ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLIST-KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLIST-VALUES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALIST-KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "AL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALIST-VALUES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "AL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      ((:NAME "TEST" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQUALP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TRANSPOSE-LISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIST-OF-LISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "Transpose a matrix represented as a list of lists.
  Example: (transpose '((a b c) (d e f))) => ((a d) (b e) (c f)).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RELAXED-PARSE-FLOAT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "DOUBLE-FLOAT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "trys to read a value we hope to be a floating point number returns nil on failure

   The goal is to allow reading strings with spaces commas and dollar signs in them correctly 
  ")
    (:TYPE :CLASS :SYMBOL
     (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "A class representing a table of data" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COLUMN-TYPES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "COLUMN-TYPES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T) :ACCESSORS
       ((:NAME "ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "NUMBER-OF-COLUMNS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NUMBER-OF-ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SYMBOLIZE-COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)))
     :DOCUMENTATION
     "Turn the column names of the data table into lisp symbols")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SYMBOLIZE-COLUMN-NAMES!" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)))
     :DOCUMENTATION "Turn the column names of the data table into lisp symbols
   save the new column names to the data table")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DATA-TABLE-VALUE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COL-NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "ROW-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "COL-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "Extract a value or set of values from the data table
   can be used to pull a column of data, a row of data or a specific cell of data")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%INSERT-VALUE-IN-LIST" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ROW" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "INDEX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION
     "build a new data row by splicing a value into the existing row")
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DATA-TABLE-VALUE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "NEW" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "COL-NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "ROW-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "COL-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "Set a specific row, column or cell of the data table")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-SUB-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARENT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LCI" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL) 0)
      ((:NAME "UCI" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "NUMBER-OF-COLUMNS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
        (:NAME "PARENT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)))
      ((:NAME "LRI" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL) 0)
      ((:NAME "URI" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "NUMBER-OF-ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
        (:NAME "PARENT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))))
     :DOCUMENTATION "Make a new data table from a subset of another data-table
   lci - low column index
   uci - upper column index (as per subseq 1 beyond the col you want)
   lri - low row index
   uri - upper row index (as per subseq 1 beyond the row you want)
  ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SELECT-COLUMNS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
     :DOCUMENTATION
     "returns a new data table with only the columns requested, by name")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DATA-TABLE-DATA-COMPARE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DT1" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "DT2" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQUALP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEY" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "tries to comapre the data in two data-tables")
    (:TYPE :METHOD :SYMBOL
     (:NAME "OVERLAY-REGION" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NEW" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ROW-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL) 0)
      ((:NAME "COL-IDX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL) 0))
     :DOCUMENTATION
     " puts all values from new-dt into dt starting at row-idx col-idx")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILL-IN-MISSING-CELLS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MISSING-VALUE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Ensures that the data table is square and that every column has the same number of rows
   and every row has the same number of columns, filling in nil to accomplish this")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+LARGEST-NUMBER+" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :DOCUMENTATION
     "this is the largest number that will be considered a number for data-type purposes."
     :INITIAL-VALUE "(EXPT 2 63)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLIFY-TYPES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COMPLEX-TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "TYPE-OF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "VAL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))))
     :DOCUMENTATION "try to get simple type definitions from complex ones")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAYBE-APPLY" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FN" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "Call a function, when it exists
   used to avoid calling clsql code if it does not exits
  ")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*GUESSING-TYPES-SAMPLE-SIZE*" :PACKAGE-NAME "DATA-TABLE"
      :EXTERNALP T)
     :DOCUMENTATION
     "how many rows to look at when trying to guess the types for each column of a data table"
     :INITIAL-VALUE "1000")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAMPLE-ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SAMPLE-SIZE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "*GUESSING-TYPES-SAMPLE-SIZE*" :PACKAGE-NAME "DATA-TABLE"
        :EXTERNALP T)))
     :DOCUMENTATION "get a subset of the rows using reservior sampling")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GUESS-TYPES-FOR-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "O" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "BAD-TYPE-GUESS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      ((:NAME "S" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DATA-TABLE-COERCE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "D" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-COLUMN-DATA-TYPES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given missing data types or data-types only of strings, figure out
   what the data-types for the table should be set the slot on the data-table")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COERCE-DATA-TABLE-OF-STRINGS-TO-TYPES" :PACKAGE-NAME "DATA-TABLE"
      :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "Figure out what the data-table-types should be then convert
   all the data in the table to those types")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LIST-DELIMITER*" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
     :DOCUMENTATION
     "What we will splice lists together with in coerce-value-for-output"
     :INITIAL-VALUE "\", \"")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COERCE-VALUE-FOR-OUTPUT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T))
      (:NAME "COLUMN-NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "VAL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "OUTPUT-TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&AUX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "*LIST-DELIMITER*" :PACKAGE-NAME "CL-INTERPOL" :EXTERNALP T)
       (:NAME "*LIST-DELIMITER*" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)))
     :DOCUMENTATION "Coerce a data-tables-value to a specified output format.
   By default only strings are supported.  This method is intended to be extended in
   other applications to allow mutating to html / csv / etc
  ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COERCE-DATA-TABLE-VALUES-FOR-OUTPUT!" :PACKAGE-NAME "DATA-TABLE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT-TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Coerce for output all the values in all the rows and save the result to the rows slot")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COERCE-DATA-TABLE-VALUES-FOR-OUTPUT" :PACKAGE-NAME "DATA-TABLE"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT-TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION
     "Coerce for output all the values in all the rows and return the new rows")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%ADD-COLUMN-HEADING/TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INDEX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION "this function tries to handle their not being any
   current column types or names or incomplete specification
   but will leave us with the same (+ 1 number-of-columns)
   as we started with ")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ADD-COLUMN" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "COLUMN-NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DEFAULT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      ((:NAME "COLUMN-TYPE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "INDEX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Adds a new column to the data table passed in")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALISTS-TO-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LIST-OF-ALISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQUALP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "ALIST-KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
        ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "LIST-OF-ALISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)))))
     :DOCUMENTATION
     "given a list of alists, (all with the same keys) convert them to a data-table")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PLISTS-TO-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "LIST-OF-PLISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
       ((:NAME "PLIST-KEYS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)
        ((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "LIST-OF-PLISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL)))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-TABLE-TO-PLISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DATA-TABLE-TO-ALISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "DT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "DATA-TABLE-TO-ALISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ASSUME-COLUMN-IS-STRING" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "NUMBER-OF-COLUMNS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "PLISTS-TO-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "OVERLAY-REGION" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "MAKE-SUB-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ENGLISH->MSSQL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "SELECT-COLUMNS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COERCE-DATA-TABLE-VALUES-FOR-OUTPUT!" :PACKAGE-NAME "DATA-TABLE"
     :EXTERNALP T)
    (:NAME "DATA-TABLE-TO-PLISTS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "SYMBOLIZE-COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ENSURE-TABLE-FOR-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
     T)
    (:NAME "DATA-TABLE-VALUE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ALISTS-TO-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "SQL-ESCAPE-COLUMN-NAMES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COLUMN-TYPES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ENSURE-POSTGRES-TABLE-FOR-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE"
     :EXTERNALP T)
    (:NAME "ADD-NUMERIC-SUFFIX" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ADD-NUMERIC-SUFFIX-TO-ALL" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "DATA-TABLE-DATA-COMPARE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COERCE-DATA-TABLE-OF-STRINGS-TO-TYPES" :PACKAGE-NAME "DATA-TABLE"
     :EXTERNALP T)
    (:NAME "NUMBER-OF-ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ENGLISH->POSTGRES" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ADD-COLUMN" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ENSURE-MSSQL-TABLE-FOR-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE"
     :EXTERNALP T)
    (:NAME "SQL-ESCAPE-COLUMN-NAMES!" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "BAD-TYPE-GUESS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COERCE-VALUE-FOR-OUTPUT" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "IMPORT-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "COERCE-DATA-TABLE-VALUES-FOR-OUTPUT" :PACKAGE-NAME "DATA-TABLE"
     :EXTERNALP T)
    (:NAME "DUPLICATE-COLUMN-NAME" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "ROWS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "FILL-IN-MISSING-CELLS" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "*GUESSING-TYPES-SAMPLE-SIZE*" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
     T)
    (:NAME "GET-DATA-TABLE" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP T)
    (:NAME "SYMBOLIZE-COLUMN-NAMES!" :PACKAGE-NAME "DATA-TABLE" :EXTERNALP
     T)))))
