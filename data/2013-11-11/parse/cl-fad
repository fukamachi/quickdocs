
(:TYPE :SYSTEM :NAME "cl-fad" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.7.2"
 :LICENCE NIL :DESCRIPTION "Portable pathname library" :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("SB-POSIX" "BORDEAUX-THREADS" "ALEXANDRIA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-FAD" :FULL-NAME "CL-FAD" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPONENT-PRESENT-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "VALUE" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Helper function for DIRECTORY-PATHNAME-P which checks whether VALUE
   is neither NIL nor the keyword :UNSPECIFIC.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTORY-PATHNAME-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHSPEC" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns NIL if PATHSPEC (a pathname designator) does not designate
a directory, PATHSPEC otherwise.  It is irrelevant whether file or
directory designated by PATHSPEC does actually exist.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-AS-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHSPEC" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts the non-wild pathname designator PATHSPEC to directory
form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTORY-WILDCARD" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "DIRNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a wild pathname designator that designates all files within
the directory named by the non-wild pathname designator DIRNAME.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIST-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIRNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FOLLOW-SYMLINKS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Returns a fresh list of pathnames corresponding to all files within
   the directory named by the non-wild pathname designator DIRNAME.
   The pathnames of sub-directories are returned in directory form -
   see PATHNAME-AS-DIRECTORY.

  If FOLLOW-SYMLINKS is true, then the returned list contains
truenames (symlinks will be resolved) which essentially means that it
might also return files from *outside* the directory.  This works on
all platforms.

  When FOLLOW-SYMLINKS is NIL, it should return the actual directory
contents, which might include symlinks.  Currently this works on SBCL
and CCL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-AS-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHSPEC" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts the non-wild pathname designator PATHSPEC to file form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILE-EXISTS-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHSPEC" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)) :DOCUMENTATION
     "Checks whether the file named by the pathname designator PATHSPEC
exists and returns its truename if this is the case, NIL otherwise.
The truename is returned in `canonical' form, i.e. the truename of a
directory is returned as if by PATHNAME-AS-DIRECTORY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTORY-EXISTS-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHSPEC" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Checks whether the file named by the pathname designator PATHSPEC
exists and if it is a directory.  Returns its truename if this is the
case, NIL otherwise.  The truename is returned in directory form as if
by PATHNAME-AS-DIRECTORY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WALK-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "DIRNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "FN" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIRECTORIES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      ((:NAME "IF-DOES-NOT-EXIST" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "ERROR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "TEST" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       ((:NAME "CONSTANTLY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "FOLLOW-SYMLINKS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Recursively applies the function FN to all files within the
directory named by the non-wild pathname designator DIRNAME and all of
its sub-directories.  FN will only be applied to files for which the
function TEST returns a true value.  If DIRECTORIES is not NIL, FN and
TEST are applied to directories as well.  If DIRECTORIES
is :DEPTH-FIRST, FN will be applied to the directory's contents first.
If DIRECTORIES is :BREADTH-FIRST and TEST returns NIL, the directory's
content will be skipped. IF-DOES-NOT-EXIST must be one of :ERROR
or :IGNORE where :ERROR means that an error will be signaled if the
directory DIRNAME does not exist.  If FOLLOW-SYMLINKS is T, then your
callback will receive truenames.  Otherwise you should get the actual
directory contents, which might include symlinks.  This might not be
supported on all platforms.  See LIST-DIRECTORY.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*STREAM-BUFFER-SIZE*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "8192")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-STREAM" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FROM" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "TO" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CHECKP" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Copies into TO (a stream) from FROM (also a stream) until the end
of FROM is reached, in blocks of *stream-buffer-size*.  The streams
should have the same element type.  If CHECKP is true, the streams are
checked for compatibility of their types.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FROM" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "TO" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OVERWRITE" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Copies the file designated by the non-wild pathname designator FROM
to the file designated by the non-wild pathname designator TO.  If
OVERWRITE is true overwrites the file designtated by TO if it exists.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELETE-DIRECTORY-AND-FILES" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIRNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "IF-DOES-NOT-EXIST" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "ERROR" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION
     "Recursively deletes all files and directories within the directory
designated by the non-wild pathname designator DIRNAME including
DIRNAME itself.  IF-DOES-NOT-EXIST must be one of :ERROR or :IGNORE
where :ERROR means that an error will be signaled if the directory
DIRNAME does not exist.

NOTE: this function is dangerous if the directory that you are
removing contains symlinks to files outside of it - the target files
might be removed instead!  This is currently fixed for SBCL and CCL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-DIRECTORY-PATHNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Returns a complete pathname representing the directory of
PATHNAME. If PATHNAME is already a directory pathname (name NIL, type
NIL) returns a pathname equal (as per pathname=) to it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-PARENT-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a pathname which would, by name at least, contain PATHNAME
as one of its direct children. Symlinks can make the parent/child
relationship a like opaque, but generally speaking the value returned
by this function is a directory name which contains PATHNAME.

The root directory, #P\"/\", is its own parent. The parent directory
of a filename is the parent of the filename's dirname.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CANONICAL-PATHNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Remove reduntant information from PATHNAME.

This simply walks down PATHNAME's pathname-directory and drops \".\"
directories, removes :back and its preceding element.

NB: This function does not access the filesystem, it only looks at the
values in the pathname and works on their known (or assumed)
meanings.

NB: Since this function does not access the filesystem it will only
remove :BACK elements from the path (not :UP elements). Since some
lisps, ccl/sbcl/clisp convert \"..\" in pathnames to :UP, and
not :BACK, the actual utility of the function is limited.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-PATHNAMES-AS-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATHNAMES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a list of, probably relative, pathnames returns a single
directory pathname containing the logical concatenation of them all.

The returned value is the current directory if one were to cd into
each of PATHNAMES in order. For this reason an absolute pathname will,
effectively, cancel the affect of any previous relative pathnames.

The returned value's defaults are taken from the first element of
PATHNAMES (host, version and device).

NB: Since this function only looks at directory names the name and
type of the elements of PATHNAMES are ignored. Make sure to properly
use either trailing #\\/s, or pathname-as-directory, to get the
expected results.

Examples:

    (merge-pathnames-as-directory #P\"foo/\" #P\"bar/\") == #P\"foo/bar/\"
    (merge-pathnames-as-directory #P\"foo/\" #P\"./bar/\") == #P\"foo/./bar/\"
    (merge-pathnames-as-directory #P\"foo/\" #P\"/bar/\") == #P\"/bar/\"
    (merge-pathnames-as-directory #P\"foo/\" #P\"/bar/\" #P'quux/file.txt) == #P\"/bar/quux/\"
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-PATHNAMES-AS-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATHNAMES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a list of, probably relative, pathnames returns a single
filename pathname containing the logical concatenation of them all.

The returned value's defaults are taken from the first element of
PATHNAMES (host, version and device). The returned values's name, type
and version are taken from the last element of PATHNAMES. The
intervening elements are used only for their pathname-directory
values.

Examples:

    (merge-pathnames-as-file #P\"foo/\" #P\"bar.txt\") == #P\"foo/bar.txt\"
    (merge-pathnames-as-file #P\"foo/\" #P\"./bar.txt\") == #P\"foo/./bar.txt\"
    (merge-pathnames-as-file #P\"foo/\" #P\"/bar/README\") == #P\"/bar/README\"
    (merge-pathnames-as-file #P\"/foo/\" #P\"/bar/\" #P'quux/file.txt) == #P\"/bar/quux/file.txt\"
")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-COMPONENT-TESTERS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "KEY" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-HOST-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-DEVICE-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-DIRECTORY-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-NAME-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-TYPE-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-VERSION-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns T if A and B represent the same pathname. This function
does not access the filesystem, it only looks at the components of the
two pathnames to test if they are the same (though by
passing both A and B to probe-file one can make this function test for file 'sameness'.

Equality is defined as:

  - strings that are string equal
  - symbol (including nil) or keywords which are eql
  - lists of the same length with equal (as per these rules) elements.

if any of these tree conditions is false for any of the components in
A and B then A and B are different, otherwise they are the same.

NB: This function does not convert name strings to pathnames. So
\"foo.txt\" and #P\"foo.txt\" are different pathnames.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-ABSOLUTE-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION "Returns true if A is an absolute pathname.

This simply tests if A's directory list starts with :ABSOLUTE")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-RELATIVE-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION "Returns true if A is a relative pathname.

This simply tests if A's directory starts with :RELATIVE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PATHNAME-ROOT-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)) :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*HYPERDOC-BASE-URI*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"http://weitz.de/cl-fad/\"")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HYPERDOC-LOOKUP" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFALIAS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "REALNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRNAME" :PACKAGE-NAME "PATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BASENAME" :PACKAGE-NAME "PATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "-E" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "-D" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DIRECTORY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CATFILE" :PACKAGE-NAME "PATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATHNAMES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "CATDIR" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PATHNAMES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "=" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ABSOLUTE-P" :PACKAGE-NAME "PATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RELATIVE-P" :PACKAGE-NAME "PATH" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "ROOT-P" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL (:NAME "RM-R" :PACKAGE-NAME "PATH" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "PATHNAME" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-TEMPLATE*" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE "\"TEMPORARY-FILES:TEMP-%\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MAX-TRIES*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL) :DOCUMENTATION
     NIL :INITIAL-VALUE "10000")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*NAME-RANDOM-STATE*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-RANDOM-STATE T)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETENV" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)) :DOCUMENTATION
     "Query the libc runtime environment. See getenv(3).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIRECTORY-FROM-ENVIRONMENT" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENVIRONMENT-VARIABLE-NAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DEFAULT-TEMPORARY-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP
      NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CREATE-FILE-NAME-LOCK*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(BORDEAUX-THREADS:MAKE-LOCK \"Temporary File Name Creation Lock\")")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FILE-NAME-LOCK-HELD" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-RANDOM-STRING" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE-RANDOM-PATHNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TEMPLATE" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "RANDOM-STRING-GENERATOR" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPEN-TEMPORARY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OPEN-ARGUMENTS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEMPLATE" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "*DEFAULT-TEMPLATE*" :PACKAGE-NAME "CL-FAD" :EXTERNALP T))
      ((:NAME "GENERATE-RANDOM-STRING" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "GENERATE-RANDOM-STRING" :PACKAGE-NAME "CL-FAD" :EXTERNALP
         NIL)))
      ((:NAME "MAX-TRIES" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "*MAX-TRIES*" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
      ((:NAME "DIRECTION" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "OUTPUT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Create a file with a randomly generated name and return the opened
   stream.  The resulting pathname is generated from TEMPLATE, which
   is a string representing a pathname template.  A percent sign (%)
   in that string is replaced by a randomly generated string to make
   the filename unique.  The default for TEMPLATE places temporary
   files in the TEMPORARY-FILES logical pathname host, which is
   automatically set up in a system specific manner.  The file name
   generated from TEMPLATE is merged with *DEFAULT-PATHNAME-DEFAULTS*,
   so random pathnames relative to that directory can be generated by
   not specifying a directory in TEMPLATE.

   GENERATE-RANDOM-STRING can be passed to override the default
   function that generates the random name component.  It should
   return a random string consisting of characters that are permitted
   in a pathname (logical or physical, depending on TEMPLATE).

   The name of the temporary file can be accessed calling the PATHNAME
   function on STREAM.  For convenience, the temporary file is opened
   on the physical pathname, i.e. if the TEMPLATE designate a logical
   pathname the translation to a physical pathname is performed before
   opening the stream.

   In order to create a unique file name, OPEN-TEMPORARY may loop
   internally up to MAX-TRIES times before giving up and signalling a
   CANNOT-CREATE-TEMPORARY-FILE condition.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-OUTPUT-TO-TEMPORARY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a temporary file using OPEN-TEMPORARY with ARGS and run BODY
  with STREAM bound to the temporary file stream.  Returns the
  pathname of the file that has been created.  See OPEN-TEMPORARY for
  permitted options.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-OPEN-TEMPORARY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARGS" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "KEEP" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL)
       (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CL-FAD" :EXTERNALP NIL))
     :DOCUMENTATION
     "Create a temporary file using OPEN-TEMPORARY with ARGS and run BODY
  with STREAM bound to the temporary file stream.  Returns the values
  returned by BODY.  By default, the file is deleted when BODY is
  exited. If a true value is passed in KEEP, the file is not deleted
  when the body is exited.  See OPEN-TEMPORARY for more permitted
  options."))
   :EXTERNAL-SYMBOLS
   ((:NAME "COPY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-ABSOLUTE-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "FILE-EXISTS-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-ROOT-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "DELETE-DIRECTORY-AND-FILES" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "OPEN-TEMPORARY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "CANONICAL-PATHNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "COPY-STREAM" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-AS-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "MERGE-PATHNAMES-AS-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "MERGE-PATHNAMES-AS-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "INVALID-TEMPORARY-PATHNAME-TEMPLATE" :PACKAGE-NAME "CL-FAD"
     :EXTERNALP T)
    (:NAME "WITH-OPEN-TEMPORARY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "DIRECTORY-EXISTS-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "CANNOT-CREATE-TEMPORARY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "DIRECTORY-PATHNAME-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-EQUAL" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "LIST-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-DIRECTORY-PATHNAME" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "WALK-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-AS-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-RELATIVE-P" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "WITH-OUTPUT-TO-TEMPORARY-FILE" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "*DEFAULT-TEMPLATE*" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)
    (:NAME "PATHNAME-PARENT-DIRECTORY" :PACKAGE-NAME "CL-FAD" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "PATH" :FULL-NAME "PATH" :DOCUMENTATION
   "Rexporting certain functions from the cl-fad package with shorter names.

This package provides no functionality, it serves only to make file
system intensive code easier to read (for unix people at least)."
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "-E" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "DIRNAME" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "ABSOLUTE-P" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "=" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "BASENAME" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "CATFILE" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "RELATIVE-P" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "ROOT-P" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "CATDIR" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "RM-R" :PACKAGE-NAME "PATH" :EXTERNALP T)
    (:NAME "-D" :PACKAGE-NAME "PATH" :EXTERNALP T)))))
