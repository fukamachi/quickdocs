
(:TYPE :SYSTEM :NAME "array-operations" :AUTHOR
 "Tamas K. Papp <tkpapp@gmail.com>" :MAINTAINER NIL :VERSION NIL :LICENCE
 "Boost Software License - Version 1.0" :DESCRIPTION
 "Simple array operations library for Common Lisp." :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("ALEXANDRIA" "ANAPHORA" "LET-PLUS" "OPTIMA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "ARRAY-OPERATIONS" :FULL-NAME "ARRAY-OPERATIONS"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "PRODUCT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Product of elements in the argument.  NOT EXPORTED.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MULTF" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PLACE" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "VALUES" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION "Multiply by the arguments")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAME-DIMENSIONS?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Test if arguments have the same dimensions.  NOT EXPORTED.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return a list of dimensions corresponding to OBJECT.  Positive integers are
treated as dimensions of rank 1, lists are returned as they are, and arrays
are queried for their dimensions.

OBJECTS accepted by this function as valid dimensions are called `dimension
specifications' in this library.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WALK-SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         "POSITION")))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Iterate over the subscripts of an array with given DIMENSIONS.  SUBSCRIPTS
contains the current subscripts as a vector of fixnums, POSITION has the
row-major index.  Consequences are undefined if either POSITION or SUBSCRIPTS
is modified.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WALK-SUBSCRIPTS-LIST" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         "POSITION")))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like WALK-SUBSCRIPTS, but SUBSCRIPTS is a newly created list for each
position that does not share structure and can be freely used/modified/kept
etc.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return the contents of OBJECT as an array.  Exact semantics depends on OBJECT, but generally objects which contain elements in a rectilinear coordinate system should have a natural mapping to arrays.

When the second value is T, the array itself does not share structure with OBJECT, but its elements may.  Otherwise, it is indeterminate whether the two objects share structure, and consequences of modifying the result are not defined.  Methods are encouraged but not required to return a second value.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return TYPE such that

1. all elements of ARRAY are guaranteed to be a subtype of TYPE,

2. if applicable, elements of ARRAY can be set to values which are of a type that is a subtype of TYPE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Return a list of dimensions.

For non-array objects, SIZE, DIM, NROW and NCOL use this method by default, so it is enough to define it (unless efficiency is a concern).

When DIMS is not defined for an object, it falls back to as-array, which may be very inefficient for objects which need to be consed.  It is always advisable to define DIMS.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "&DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&WHOLE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "WHOLE98" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Dimensions of array-like object.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "LET+-EXPANSION-FOR-LIST" :PACKAGE-NAME "LET-PLUS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FIRST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "&DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))))
      (:NAME "ARGUMENTS97" :PACKAGE-NAME NIL :EXTERNALP NIL)
      (:NAME "VALUE-VAR" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "BODY-VAR" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Return the total number of elements in array.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Return the rank of ARRAY.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Return specificed dimension of ARRAY.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Number of rows.  Will signal an error if ARRAY is not a matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Number of columns.  Will signal an error if ARRAY is not a matrix.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "ARRAY-MATRIX" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATRIX?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Test if MATRIX has rank 2.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SQUARE-MATRIX?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "MATRIX" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Test if MATRIX has two dimensions and that they are equal.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-ARRAY-LIKE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
        (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
        (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "INITIAL-ELEMENT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "INITIAL-ELEMENT?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
        NIL)))
     :DOCUMENTATION
     "Create an array with the same dimensions and element-type as ARRAY (which can be an array-like object that has the appropriate methods defined).  Each attribute can be overriden.  When INITIAL-ELEMENT is given, it is coerced to ELEMENT-TYPE and used as the initial element.

The array returned is always a simple-array and shares no structure with anything else.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DISPLACE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Shorthand function for displacing an array.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FLATTEN" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return ARRAY flattened to a vector.  Will share structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :DOCUMENTATION
     "Return an array of subarrays, split off at RANK.  All subarrays are
displaced and share structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUB-LOCATION%" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return (values OFFSET REMAINING-DIMENSIONS) that can be used to displace a
row-major subarray starting at SUBSCRIPTS in an array with the given
DIMENSIONS.  NOT EXPORTED.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUB" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a partial list of subscripts, return the subarray that starts there,
with all the other subscripts set to 0, dimensions inferred from the original.
If no subscripts are given, the original array is returned.  Implemented by
displacing, may share structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-INTO" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TARGET" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Copy SOURCE into TARGET, for array arguments of compatible
dimensions (checked).  Return TARGET, making the implementation of the
semantics of SETF easy.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUB" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARTITION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "ARRAY-DIMENSION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0)))
     :DOCUMENTATION
     "Return a subset of the array, on the first indexes between START and END.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARTITION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "ARRAY-DIMENSION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) 0)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMBINE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :DOCUMENTATION
     "The opposite of SUBARRAYS.  If ELEMENT-TYPE is not given, it is inferred
from the first element of array, which also determines the dimensions.  If
that element is not an array, the original ARRAY is returned as it is.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBVEC" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Displaced vector between START and END.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SUBVEC" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "END" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FILL-IN-DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :DOCUMENTATION
     "If one of the dimensions is missing (indicated with T), replace it with a
dimension so that the total product equals SIZE.  If that's not possible,
signal an error.  If there are no missing dimensions, just check that the
product equals size.  Also accepts other dimension specifications (integer,
array).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESHAPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OFFSET" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL) 0))
     :DOCUMENTATION "Reshape ARRAY using DIMENSIONS (which can also be dimension
specifications).  If DIMENSIONS is a list, it may contain a single element T
which will be calculated to match the total size of the resulting array.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESHAPE-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Array reshaped as an Nx1 matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESHAPE-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Array reshaped as an 1xN matrix.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COERCING" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Return a function composed of a univariate function that coerces to ELEMENT-TYPE and function.  When FUNCTION is not given, return a closure that coerces to ELEMENT-TYPE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Return an array with given DIMENSIONS and ELEMENT-TYPE, with elements
generated by calling FUNCTION with

 - no arguments, when ARGUMENTS is nil
 - the position (= row major index), when ARGUMENTS is :POSITION
 - a list of subscripts, when ARGUMENTS is :SUBSCRIPTS
 - both when ARGUMENTS is :POSITION-AND-SUBSCRIPTS

The traversal order is unspecified and may be nonlinear.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GENERATE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DIMENSIONS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like GENERATE*, with ELEMENT-TYPE T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERMUTATION-FLAGS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
         NIL))))
     :DOCUMENTATION
     "Make a bit vector of flags with indexes from PERMUTATION, signalling errors
for invalid and repeated indices.  NOT EXPORTED.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHECK-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
       (:NAME "RANK?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)))
     :DOCUMENTATION
     "Check if PERMUTATION is a valid permutation (of the given RANK), and signal
an error if necessary.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPLEMENT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :DOCUMENTATION
     "Return a list of increasing indices that complement PERMUTATION, ie form a
permutation when appended.  Atoms are accepted and treated as lists of a
single element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPLETE-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T))
     :DOCUMENTATION
     "Return a completed version of permutation, appending it to its complement.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INVERT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Invert a permutation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IDENTITY-PERMUTATION?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
         NIL))))
     :DOCUMENTATION
     "Test if PERMUTATION is the identity permutation, ie a sequence of
consecutive integers starting at 0.  Note that permutation is otherwise not
checked, ie it may not be a permutation.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PERMUTE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Return ARRAY with the axes permuted by PERMUTATION, which is a sequence of
indexes.  Specifically, an array A is transformed to B, where

  B[b_1,...,b_n] = A[a_1,...,a_n] with b_i=a_{P[i]}

P is the permutation.

Array element type is preserved.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EACH*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Apply function to the array arguments elementwise, and return the result as
an array with the given ELEMENT-TYPE.  Arguments are checked for dimension
compatibility.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EACH" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OTHER-ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like EACH*, with ELEMENT-TYPE T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MARGIN*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INNER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "COMPLEMENT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS"
         :EXTERNALP T)
        (:NAME "INNER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
        ((:NAME "ARRAY-RANK" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION
     "PERMUTE ARRAY with `(,@OUTER ,@INNER), split the inner subarrays, apply
FUNCTION to each, return the results in an array of dimensions OUTER, with the
given ELEMENT-TYPE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MARGIN" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INNER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "OUTER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "COMPLEMENT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS"
         :EXTERNALP T)
        (:NAME "INNER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
        ((:NAME "ARRAY-RANK" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))))
     :DOCUMENTATION "Like MARGIN*, with ELEMENT-TYPE T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RECYCLE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INNER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "OUTER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
       ((:NAME "IF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "ARRAYP" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
        ((:NAME "ARRAY-ELEMENT-TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "OBJECT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
        (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Recycle elements of object, extending the dimensions by outer (repeating
OBJECT) and inner (repeating each element of OBJECT).  When both INNER and
OUTER are nil, the OBJECT is returned as is.  Non-array objects are intepreted
as rank 0 arrays, following the usual semantics.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OUTER*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Generalized outer product of ARRAYS with FUNCTION.  The resulting array has the concatenated dimensions of ARRAYS, and the given ELEMENT-TYPE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OUTER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like OUTER, with ELEMENT-TYPE t.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-ROW-MAJOR-BLOCK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "SOURCE-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
       NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SOURCE-START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       0)
      ((:NAME "SOURCE-END" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       ((:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
        (:NAME "SOURCE-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
         NIL)))
      ((:NAME "DESTINATION-START" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
        NIL)
       0))
     :DOCUMENTATION
     "Copy elements with row major indexes between the given start and end from SOURCE to DESTINATION, respectively.  Elements are coerced to ELEMENT-TYPE when necessary.  Return no values.

This function should be used to implement copying of contiguous row-major blocks of elements, most optimizations should happen here.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Method used to implement the copying of objects in STACK-ROW*, by copying the elements of SOURCE to DESTINATION, starting with the row index START-ROW in the latter.  Elements are coerced to ELEMENT-TYPE.

This method is only called when (DIMS SOURCE) was non-nil.  It is assumed that it onlychanges elements in DESTINATION which are supposed to be copies of SOURCE.  DESTINATION is always a matrix with element-type upgraded from ELEMENT-TYPE, and its NCOL should match the relevant dimension of SOURCE.

All objects have a fallback method, defined using AS-ARRAY.  The only reason for definining a method is efficiency.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK-ROWS*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Stack OBJECTS row-wise into an array of the given ELEMENT-TYPE, coercing if necessary.  Always return a simple array of rank 2.

How objects are used depends on their dimensions, queried by DIMS:

- when the object has 0 dimensions, fill a row with the element.

- when the object has 1 dimension, use it as a row.

- when the object has 2 dimensions, use it as a matrix.

When applicable, compatibility of dimensions is checked, and the result is used to determine the number of columns.  When all objects have 0 dimensions, the result has one column.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK-ROWS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like STACK-ROWS*, with ELEMENT-TYPE T.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Method used to implement the copying of objects in STACK-COL*, by copying the elements of SOURCE to DESTINATION, starting with the column index START-COL in the latter.  Elements are coerced to ELEMENT-TYPE.

This method is only called when (DIMS SOURCE) was non-nil.  It is assumed that it only changes elements in DESTINATION which are supposed to be copies of SOURCE.  DESTINATION is always a matrix with element-type upgraded from ELEMENT-TYPE, and its NROW should match the relevant dimension of SOURCE.

All objects have a fallback method, defined using AS-ARRAY.  The only reason for definining a method is efficiency.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
       (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "START-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK-COLS*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Stack OBJECTS column-wise into an array of the given ELEMENT-TYPE, coercing if necessary.  Always return a simple array of rank 2.

How objects are used depends on their dimensions, queried by DIMS:

- when the object has 0 dimensions, fill a column with the element.

- when the object has 1 dimension, use it as a column.

- when the object has 2 dimensions, use it as a matrix.

When applicable, compatibility of dimensions is checked, and the result is used to determine the number of rows.  When all objects have 0 dimensions, the result has one row.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK-COLS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OBJECTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like STACK-COLS*, with ELEMENT-TYPE T.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK*0" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Stack arrays along the 0 axis, returning an array with given ELEMENT-TYPE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
      (:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Stack array arguments along AXIS.  ELEMENT-TYPE determines the element-type
of the result.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STACK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "AXIS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL)
      (:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARRAYS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP NIL))
     :DOCUMENTATION "Like STACK*, with element-type T."))
   :EXTERNAL-SYMBOLS
   ((:NAME "RESHAPE-ROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "NROW" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "PERMUTATION-INVALID-INDEX" :PACKAGE-NAME "ARRAY-OPERATIONS"
     :EXTERNALP T)
    (:NAME "COMPLETE-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
     T)
    (:NAME "MATRIX?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "MARGIN*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "PERMUTE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "OUTER" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "RECYCLE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "COERCING" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "IDENTITY-PERMUTATION?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
     T)
    (:NAME "DIM" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-COLS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "RESHAPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "COMPLEMENT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
     T)
    (:NAME "EACH*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "AS-ARRAY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-ROWS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "GENERATE*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "GENERATE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "MARGIN" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "RESHAPE-COL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "NCOL" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "COPY-INTO" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "PERMUTATION-INCOMPATIBLE-RANK" :PACKAGE-NAME "ARRAY-OPERATIONS"
     :EXTERNALP T)
    (:NAME "MAKE-ARRAY-LIKE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "VALID-PERMUTATION?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "PERMUTATION-REPEATED-INDEX" :PACKAGE-NAME "ARRAY-OPERATIONS"
     :EXTERNALP T)
    (:NAME "SUBVEC" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-ROWS*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-COLS-COPY" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "&DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "DISPLACE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "WALK-SUBSCRIPTS-LIST" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
     T)
    (:NAME "COPY-ROW-MAJOR-BLOCK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP
     T)
    (:NAME "DIMS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "COMBINE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-COLS*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "OUTER*" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "SIZE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "EACH" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "RANK" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "ARRAY-MATRIX" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "SQUARE-MATRIX?" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "WALK-SUBSCRIPTS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "INVERT-PERMUTATION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "PARTITION" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "SUB" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "SPLIT" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "STACK-ROWS" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)
    (:NAME "FLATTEN" :PACKAGE-NAME "ARRAY-OPERATIONS" :EXTERNALP T)))))
