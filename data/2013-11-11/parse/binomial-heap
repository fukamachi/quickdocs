
(:TYPE :SYSTEM :NAME "binomial-heap" :AUTHOR
 "Volkan YAZICI <volkan.yazici@gmail.com>" :MAINTAINER NIL :VERSION NIL
 :LICENCE "BSD" :DESCRIPTION "A compact binomial heap implementation."
 :LONG-DESCRIPTION NIL :DEPENDS-ON NIL :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "BINOMIAL-HEAP" :FULL-NAME "BINOMIAL-HEAP"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "BINOMIAL-HEAP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Binomial heap container." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HEAD" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "HEAD-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TEST" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "TEST-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "BINOMIAL-TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION "Binomial tree container." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "PARENT" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "PARENT-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "DEGREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "DEGREE-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CHILD" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "CHILD-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SIBLING" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "SIBLING-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "KEY-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
       (:NAME "BINOMIAL-TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WHEN-LET" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
       (:NAME "VAL" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PROG1-LET" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
       (:NAME "VAL" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEXP->TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "SEXP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts supplied `SEXP' of `(KEY &KEY SIBLING CHILD)' form into appropriate
`BINOMIAL-TREE' instance.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TREE->SEXP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Converts supplied `BINOMIAL-TREE' into `(KEY &KEY SIBLING CHILD)' compound
form.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Utility function to print binomial tree in a human-readable(?) format.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINK-SIBLINGS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TREES" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Constructs `SIBLING' slots of given list of `BINOMIAL-TREE's to provide given
order.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIBLING-LIST" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "TREE" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns reversed list of child and its consequent siblings of supplied `TREE'
of type `BINOMIAL-TREE'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MERGE-SIBLINGS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Merges given two `BINOMIAL-TREE's and their related siblings into a single
`BINOMIAL-TREE' sibling list.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LINK-TREES" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION "Makes `X' the child of `Y'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNITE-ROOT-LISTS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Unites given `X' and `Y' `BINOMIAL-TREE's and their related siblings into a
single `BINOMIAL-TREE'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNSAFE-UNITE-ROOT-LISTS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "TEST" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Identical to `UNITE-ROOT-LISTS' except that this function doesn't handle Case
2 condition and break the loop in Case 1. (Case 1 & 2 are redundant while adding
a single node to a root list.)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INSERT-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "HEAP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Creates a new `BINOMIAL-TREE' for `KEY' and inserts this node to the
`BINOMIAL-HEAP' pointed by `HEAP'. Function returns the `KEY'.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-PRIOR-TO-EXTREMUM" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "HEAD" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "TEST" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Finds the `BINOMIAL-TREE' prior to the extremum in the sibling list pointed
by `HEAD'. Function returns `NIL' in case of no extremum or extremum at the
beginning.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-EXTREMUM-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "HEAP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Finds the `BINOMIAL-TREE' with the extremum value and its `KEY'
field. Function returns `NIL' in case of no items found.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXTRACT-EXTREMUM-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "HEAP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Extracts the extremum value from the `BINOMIAL-HEAP' pointed by
`HEAP'. Function returns the `KEY' field of the extracted `BINOMIAL-TREE'
instance.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UNITE-HEAPS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL)
      (:NAME "Y" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP NIL))
     :DOCUMENTATION
     "Unites given two heaps of type `BINOMIAL-HEAP' into a single one. (Assuming
`TEST' functions of each heap are equivalent.)"))
   :EXTERNAL-SYMBOLS
   ((:NAME "UNITE-HEAPS" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
    (:NAME "EXTRACT-EXTREMUM-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
    (:NAME "BINOMIAL-HEAP" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
    (:NAME "TEST-OF" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
    (:NAME "INSERT-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)
    (:NAME "GET-EXTREMUM-KEY" :PACKAGE-NAME "BINOMIAL-HEAP" :EXTERNALP T)))))
