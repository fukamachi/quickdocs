
(:TYPE :SYSTEM :NAME "cl-webdav" :AUTHOR NIL :MAINTAINER NIL :VERSION "0.2.0"
 :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("HUNCHENTOOT" "CXML" "CL-FAD") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CL-WEBDAV" :FULL-NAME "CL-WEBDAV" :DOCUMENTATION NIL
   :SYMBOL-LIST
   ((:TYPE :MACRO :SYMBOL
     (:NAME "DEFCONSTANT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Make sure VALUE is evaluated only once (to appease SBCL).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONSTANTLY-NIL" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Does the same as the result of (CONSTANTLY NIL).")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+DAV-PROPERTY-ALIST+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :DOCUMENTATION "An alist mapping the (names of the) standard DAV properties
to functions handling them."
     :INITIAL-VALUE "(IF (BOUNDP 'CL-WEBDAV::+DAV-PROPERTY-ALIST+)
    (SYMBOL-VALUE 'CL-WEBDAV::+DAV-PROPERTY-ALIST+)
    '((\"creationdate\" . CL-WEBDAV::CREATION-DATE)
      (\"displayname\" . CL-WEBDAV:RESOURCE-DISPLAY-NAME)
      (\"getcontentlength\" . CL-WEBDAV::GET-CONTENT-LENGTH)
      (\"getcontenttype\" . CL-WEBDAV::GET-CONTENT-TYPE)
      (\"getetag\" . CL-WEBDAV:RESOURCE-ETAG)
      (\"getlastmodified\" . CL-WEBDAV::GET-LAST-MODIFIED)
      (\"getcontentlanguage\" . CL-WEBDAV:RESOURCE-CONTENT-LANGUAGE)
      (\"resourcetype\" . CL-WEBDAV:RESOURCE-TYPE)
      (\"source\" . CL-WEBDAV:RESOURCE-SOURCE)
      (\"lockdiscovery\" . CL-WEBDAV::CONSTANTLY-NIL)
      (\"supportedlock\" . CL-WEBDAV::CONSTANTLY-NIL)))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DAV-COMPLIANCE-CLASSES*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :DOCUMENTATION "A /sorted/ list of DAV compliance classes reported in the
`DAV' header when answering OPTIONS requests.  It doesn't make
much sense to have more then class 1 in here as long as there's
no lock support."
     :INITIAL-VALUE "'(1)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*ALLOWED-METHODS*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :DOCUMENTATION "The list of methods (as keywords) returned by the `Allow'
header in case of OPTIONS requests (and also utilized by the
handler for MKCOL).  Can be adapted to allow for more methods,
but for a WebDAV server at least the methods above should be
listed."
     :INITIAL-VALUE
     "'(:OPTIONS :GET :HEAD :DELETE :PROPFIND :PROPPATCH :PUT :COPY :MOVE :MKCOL)")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*RESOURCE-CLASS*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :DOCUMENTATION
     "Whenever a DAV handler is executed, this variable should be bound
to the resource class which is to be used.  If you're using
CREATE-DAV-DISPATCHER, this will already be taken care of for you."
     :INITIAL-VALUE "'CL-WEBDAV:FILE-RESOURCE")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FILE-RESOURCE-BASE-URI*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :DOCUMENTATION
     "The value of this variable is the return value of the default
method for FILE-RESOURCE-BASE-URI.  It should be a string which starts
with a slash if it's not empty and does /not/ end with a slash and is
/not/ URL-encoded."
     :INITIAL-VALUE "\"\"")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*FILE-RESOURCE-BASE-PATH-NAMESTRING*" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :DOCUMENTATION
     "The value of this variable is the return value of the default
method for FILE-RESOURCE-BASE-PATH-NAMESTRING.  It should be the
namestring of the truename of an absolute pathname denoting a
directory, specifically it must return a string starting and
ending with slashes.  (Note: This should work on Windows as
well.)"
     :INITIAL-VALUE
     "(NAMESTRING (TRUENAME (ENSURE-DIRECTORIES-EXIST \"/tmp/\")))")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+BUFFER-LENGTH+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :DOCUMENTATION "Length of buffers used for internal purposes."
     :INITIAL-VALUE "(IF (BOUNDP 'CL-WEBDAV::+BUFFER-LENGTH+)
    (SYMBOL-VALUE 'CL-WEBDAV::+BUFFER-LENGTH+)
    8192)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+LATIN-1+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :DOCUMENTATION "A FLEXI-STREAMS external format for ISO-8859-1."
     :INITIAL-VALUE "(IF (BOUNDP 'CL-WEBDAV::+LATIN-1+)
    (SYMBOL-VALUE 'CL-WEBDAV::+LATIN-1+)
    (FLEXI-STREAMS:MAKE-EXTERNAL-FORMAT :LATIN-1 :EOL-STYLE :LF))")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+UTF-8+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :DOCUMENTATION
     "A FLEXI-STREAMS external format for UTF-8." :INITIAL-VALUE
     "(IF (BOUNDP 'CL-WEBDAV::+UTF-8+)
    (SYMBOL-VALUE 'CL-WEBDAV::+UTF-8+)
    (FLEXI-STREAMS:MAKE-EXTERNAL-FORMAT :UTF-8 :EOL-STYLE :LF))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PROPERTY-HASH*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :DOCUMENTATION "The hash table that by default is used to store dead
properties in RAM."
     :INITIAL-VALUE "(MAKE-HASH-TABLE :TEST #'EQUAL)")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+WEBDAV-DTD+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :DOCUMENTATION
     "This is used to validate incoming XML.  Obviously, this is not
a \"real\" DTD, but the idea should be clear."
     :INITIAL-VALUE "(IF (BOUNDP 'CL-WEBDAV::+WEBDAV-DTD+)
    (SYMBOL-VALUE 'CL-WEBDAV::+WEBDAV-DTD+)
    '((\"activelock\" \"lockscope\" \"locktype\" \"depth\" (CL-WEBDAV::? \"owner\")
       (CL-WEBDAV::? \"timeout\") (CL-WEBDAV::? \"locktoken\"))
      (\"allprop\" :EMPTY) (\"collection\" :EMPTY) (\"creationdate\" :PCDATA)
      (\"depth\" :PCDATA) (\"displayname\" :PCDATA) (\"dst\" :PCDATA)
      (\"exclusive\" :EMPTY) (\"getcontentlanguage\" :PCDATA)
      (\"getcontentlength\" :PCDATA) (\"getcontenttype\" :PCDATA)
      (\"getetag\" :PCDATA) (\"getlastmodified\" :PCDATA) (\"href\" :PCDATA)
      (\"keepalive\" (:CHOICE :PCDATA (+ \"href\"))) (\"link\" (+ \"src\") (+ \"dst\"))
      (\"lockdiscovery\" (* \"activelock\")) (\"lockentry\" \"lockscope\" \"locktype\")
      (\"lockinfo\" \"lockscope\" \"locktype\" (CL-WEBDAV::? \"owner\"))
      (\"lockscope\" (:CHOICE \"exclusive\" \"shared\")) (\"locktoken\" (+ \"href\"))
      (\"locktype\" \"write\")
      (\"multistatus\" (+ \"response\") (CL-WEBDAV::? \"responsedescription\"))
      (\"omit\" :EMPTY) (\"owner\" :ANY) (\"prop\" :ANY)
      (\"propertybehavior\" (:CHOICE \"omit\" \"keepalive\"))
      (\"propertyupdate\" (+ (:CHOICE \"remove\" \"set\")))
      (\"propfind\" (:CHOICE \"allprop\" \"propname\" \"prop\")) (\"propname\" :EMPTY)
      (\"propstat\" \"prop\" \"status\" (CL-WEBDAV::? \"responsedescription\"))
      (\"remove\" \"prop\") (\"resourcetype\" :ANY)
      (\"response\" \"href\" (:CHOICE ((* \"href\") \"status\") (+ \"propstat\"))
       (CL-WEBDAV::? \"responsedescription\"))
      (\"responsedescription\" :PCDATA) (\"set\" \"prop\") (\"shared\" :EMPTY)
      (\"source\" (* \"link\")) (\"src\" :PCDATA) (\"status\" :PCDATA)
      (\"supportedlock\" (* \"lockentry\")) (\"timeout\" :PCDATA) (\"write\" :EMPTY)))")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-RETURN-CODE-SHORTCUT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "RETURN-CODE" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION
     "Defines a function called NAME which just sets the HTTP return code
to RETURN-CODE and then ends the current handler by calling
ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOT-IMPLEMENTED" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-NOT-IMPLEMENTED+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BAD-REQUEST" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-BAD-REQUEST+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BAD-GATEWAY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-BAD-GATEWAY+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOT-FOUND" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-NOT-FOUND+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORBIDDEN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-FORBIDDEN+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONFLICT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-CONFLICT+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRECONDITION-FAILED" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-PRECONDITION-FAILED+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FAILED-DEPENDENCY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-FAILED-DEPENDENCY+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "METHOD-NOT-ALLOWED" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Sets RETURN-CODE to +HTTP-METHOD-NOT-ALLOWED+ and then calls ABORT-REQUEST-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STATUS-LINE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RETURN-CODE" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "Returns a full HTTP/1.1 status line corresponding to the
return code RETURN-CODE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STARTS-WITH-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEQ" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "PREFIX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "CHAR=" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION "Returns a true value if the sequence SEQ starts with the
sequence PREFIX whereby the elements are compared using TEST.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ISO-8601-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "UNIVERSAL-TIME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Returns a string representing the universal time
UNIVERSAL-TIME as an ISO-8601-formatted date.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WHITESPACE-STRING-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "THING" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns a true value if THING is a string consisting solely of
whitespace.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MD5-HEX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)) :DOCUMENTATION
     "Calculates the md5 sum of the string STRING and returns it as a hex string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "URL-DECODE*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Tries to URL-decode STRING with the UTF-8 external format first and
then uses LATIN-1 if that fails.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "DEFAULT-HANDLER" :PACKAGE-NAME "SAX" :EXTERNALP T))
     :DOCUMENTATION "This is like CXML's XMLS-BUILDER class, but
without attempting to be compatible with XMLS, so we can get
namespaces right."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-STACK" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "ELEMENT-STACK" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "Used to keep track of the stack
of \"open\" (encountered SAX:START-ELEMENT, but didn't see
SAX:END-ELEMENT yet) elements.")
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ROOT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "ROOT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)) :READERS NIL
       :WRITERS NIL :DOCUMENTATION "The root of the XML document.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Creates and returns an instance of the XMLS-BUILDER class.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "NAMESPACE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Creates and returns an XMLS node with the local name
LOCAL-NAME, the namespace URI NAMESPACE-URI, the attributes
ATTRIBUTES (a list of attributes) and the children CHILDREN
(also a list).  An XMLS node is a list with two or more elements
where the first element is the name, the second element is the
list of attributes, and all the following elements (if any) are
the children.  The name is either a string (if there is no
namespace), or a cons where the car is the local name and the cdr
is the namespace URI.

An attribute is a list of two elements where the first element is
the name and the second element is the value.  Attribute names
are structured like XMLS node names.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DAV-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Shortcut for MAKE-XMLS-NODE.  Returns an XMLS node with the
local name LOCAL-NAME, the namespace URI \"DAV:\", and the
children CHILDREN.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAMESPACE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "THING" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the namespace URI (which can be NIL) of the XMLS node
or attribute THING.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the local name of the XMLS node or attribute THING.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the list of attributes of the XMLS node XMLS-NODE.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the list of attributes of the XMLS node XMLS-NODE to
ATTRIBUTES.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NODE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the list of children of the XMLS node XMLS-NODE.")
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "NODE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :LAMBDA-LIST
     ((:NAME "CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Sets the list of children of the XMLS node XMLS-NODE to
CHILDREN.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-DOCUMENT" :PACKAGE-NAME "SAX" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)))
     :DOCUMENTATION "The last method to be called when parsing an XML document -
returns the root of the document.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "START-ELEMENT" :PACKAGE-NAME "SAX" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
      (:NAME "NAMESPACE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "QNAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "The method to be called when the SAX parser encounters the
start of an element.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-ELEMENT" :PACKAGE-NAME "SAX" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
      (:NAME "NAMESPACE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "QNAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "The method to be called when the SAX parser encounters the end
of an element.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CHARACTERS" :PACKAGE-NAME "SAX" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "XMLS-BUILDER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
      (:NAME "DATA" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "The method to be called when the SAX parser encounters
character content.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WALK-XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Helper function for SERIALIZE-XMLS-NODE.  Walks recursively
through the XMLS node XMLS-NODE and calls the SAX handler HANDLER
when appropriate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SERIALIZE-XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Serializes XMLS-NODE to a vector of octets which is returned.

This is kind of the inverse operation to PARSE-DAV and very
similar to CXML-XMLS:MAP-NODE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XMLS-NODE-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "THING" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)) :DOCUMENTATION
     "Checks whether THING is an XMLS node.  See the docstring of
MAKE-XMLS-NODE for a description of the structure of XMLS nodes.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns an XMLS node which has the same name and attributes as
the XMLS node XMLS-NODE but an empty body.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)) :DOCUMENTATION
     "Returns the corresponding \"spec\" from +WEBDAV-DTD+ if NODE
is a DAV node in XMLS format.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Validates the node NODE against the spec (see
function SPEC) SPEC.  SPEC can be a string (denoting the local
name of a DAV node), one of the symbols :ANY, :EMPTY, or :PCDATA,
a two element list beginning with * or ?, a list beginning
with :CHOICE, or any other list denoting a sequence.  If POS is
NIL, SPEC must be a string and the node itself is validated to
conform to SPEC and a true value is returned iff that's the case.
Otherwise, POS should be a non-negative integer N, and the Nth
child of NODE will be validated.  The true value returned in this
case (i.e. if the Nth child is valid) will be another integer
denoting the next child which has to be validated.  Furthermore,
whitespace is removed from elements which can only have element
content.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      ((:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Validates NODE or the child at position POS to conform to the
spec for the DAV node named SPEC.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      ((:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "ANY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Always succeeds and eats up all remaining children of NODE.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      ((:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EMPTY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Succeeds (with a return value of 1) iff there are no
children.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      ((:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "PCDATA" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Succeeds (and this increments POS by 1) if the child at
position POS is not an XMLS node (i.e. if it's character data).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "VALIDATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      ((:NAME "SPEC" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "POS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Compound validation for choices, repetitions, and sequences -
dispatces on the first element of SPEC.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "IGNORE-NON-DAV-ELEMENTS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Helper function which recursively walks the XMLS node NODE and
returns an equivalent node with all non-DAV elements removed
(except for those in :ANY positions).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-DAV" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "OCTETS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ROOT-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Accepts an array OCTETS of octets representing a DAV XML node and
converts it into the corresponding XMLS node.  According to the WebDAV
RFC, non-DAV elements are skipped unless they appear in positions
(like in a \"prop\" element) where arbitrary elements are allowed.
If ROOT-NAME is given, it should be the local name (a string) of a
DAV node.  In this case, the XML is validated.  This function is
expected to be called from within a Hunchentoot request and throws to
the HANDLER-DONE tag with a return code of +HTTP-BAD-REQUEST+ if a
parsing error occurs or if the XML is invalid.

This is kind of the inverse operation to SERIALIZE-XMLS-NODE.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "This is the base class you'll have to subclass
if you want to create your own custom DAV server.  Each object of
this class represents one resource on the server and most of the
time these objects are created by the server using only
the :SCRIPT-NAME initarg.  If you need more initialization to
happen, write an :AFTER method for INITIALIZE-INSTANCE.

See the file `file-resources.lisp' for an example of a subclass
of RESOURCE."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
       :ACCESSORS
       ((:NAME "RESOURCE-SCRIPT-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION "This slot holds the script name
(see HUNCHENTOOT:SCRIPT-NAME) that was used to create the
resource.  For objects you create yourself, you must provide a
meaningful value that can be used to access the resource.")))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-EXISTS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a true value if the
resource RESOURCE exists on the server and NIL otherwise.  You
must specialize this generic function for your own classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a list of all
children of RESOURCE (which themselves are RESOURCE objects).
You must specialize this generic function for your own
classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-PARENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a RESOURCE object
which is the parent resource of RESOURCE or NIL if there is no
parent.  You must specialize this generic function for your own
classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-COLLECTION-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a true value if the
resource RESOURCE is a collection.  You must specialize this
generic function for your own classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-WRITE-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a universal time
denoting the time the resource RESOURCE was last modified.  You
must specialize this generic function for your own classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-LENGTH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return an integer denoting
the length of the resource RESOURCE in octets.  You must
specialize this generic function for your own classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-DISPLAY-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a string which,
according to the WebDAV RFC, \"provides a name for the resource
that is suitable for presentation to a user.\"  You must
specialize this generic function for your own classes.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SEND-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "This function is called for GET requests and
must send the complete contents of the (non-collection) resource
RESOURCE to the (flexi) stream STREAM.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "This function is called for PUT requests and
must read LENGTH octets of data from the (flexi) stream STREAM
and store them in a place appropriate for the resource
RESOURCE.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REMOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must completely remove the
resource RESOURCE.  It doesn't have to deal with dead properties,
and it can assume that RESOURCE doesn't have children in case
it's a collection.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must \"move\" the (contents of
the) resource SOURCE in such a way that it can in the future be
accessed as DESTINATION.  It doesn't have to deal with dead
properties, and it can assume that SOURCE doesn't have children
in case it's a collection.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COPY-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must \"copy\" the (contents of
the) resource SOURCE in such a way that the copy can in the
future be accessed as DESTINATION.  It doesn't have to deal with
dead properties, and it can assume that SOURCE doesn't have
children in case it's a collection.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CREATE-COLLECTION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must create a collection
resource that in the future can be accessed as RESOURCE.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "This must be a function which accepts a
Hunchentoot request object REQUEST and returns a generalized
boolean denoting whether REQUEST denotes a resource the DAV
server wants to handle.  Usually, you'll want to look at the
script name of the request or something like that - see the class
FILE-RESOURCE for an example.

Note that you specialize this function on the resource /class/
and not on the resource.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-CREATION-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a universal time
denoting the time the resource RESOURCE was created.  There's a
default method which returns RESOURCE-WRITE-DATE, but most likely
you'll want to specialize this for you own classes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CREATION-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CREATION-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a string denoting
the MIME type of the resource RESOURCE.  It will only be called
if RESOURCE is /not/ a collection.  There's a default method
which always returns \"application/octet-stream\", but most
likely you'll want to specialize this for your own classes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-CONTENT-LANGUAGE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function should return either NIL or a
language tag as defined in section 14.13 of RFC 2068.  If the
value returned by this function is not NIL, it will also be used
as the `Content-Language' header returned for GET requests.
There's a default method which always returns NIL.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CONTENT-LANGUAGE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CONTENT-LANGUAGE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function should return either NIL or a
DAV \"source\" XML node (structured as an XMLS node) that,
according to the WebDAV RFC, \"identifies the resource that
contains the unprocessed source of the link's source.\" There's a
default method which always returns NIL.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-ETAG" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function should return an ETag for the
resource RESOURCE or NIL.  If the value returned by this function
is not NIL, it will also be used as the `ETag' header returned
for GET requests.  There's a default method which synthesizes a
value based on the script name and the write date of the
resource, and in most cases you probably don't need to specialize
this function.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-ETAG" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-ETAG" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function should return either NIL or a
DAV \"resourcetype\" XML node (structured as an XMLS node) that,
according to the WebDAV RFC, \"specifies the nature of the
resource.\"  There's a default method which returns something
fitting for collections and NIL otherwise, and in most cases you
probably don't need to specialize this function.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "RESOURCE-URI-PREFIX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return a string which is
the part of a resource's HTTP or HTTPS URI that comprises the
scheme, the host, and the port and ends with a slash - something
like \"http://localhost:4242/\" or \"https://www.lisp.org/\".

The default method synthesizes this from the information
Hunchentoot provides and usually you only have to write your own
method if you're sitting behind a proxy.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-URI-PREFIX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-URI-PREFIX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GET-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must return all dead properties
of the resource RESOURCE as a list of XML elements structured as
XMLS nodes.  There's a default method but you should definitely
specialize this for production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must remove the currently stored
dead property designated by PROPERTY (an XMLS node) of the
resource RESOURCE.  There's a default method but you should
definitely specialize this for production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "SET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must replace the currently
stored dead property designated by PROPERTY (an XMLS node) of
the resource RESOURCE with PROPERTY, i.e. PROPERTY doubles as the
property itself and as the property designator.  There's a
default method but you should definitely specialize this for
production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This function must remove all dead properties
of the resource RESOURCE.  There's a default method but you
should definitely specialize this for production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must move all dead properties of
the resource SOURCE to the resource DESTINATION.  There's a
default method but you should definitely specialize this for
production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "COPY-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This function must copy all dead properties of
the resource SOURCE to the resource DESTINATION.  There's a
default method but you should definitely specialize this for
production servers.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOURCE-HREF" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION
     "Returns a URL-encoded version of the resource's script name for use
in HREF elements in property XML.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOURCE-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION
     "Retrieves and returns the \"name part\" of the script name of
RESOURCE, i.e. the last non-empty string behind a slash.  Note
that the result can be NIL.  This is a bit similar to
CL:FILE-NAMESTRING.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-LAST-MODIFIED" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This is the function that is called for the
\"getlastmodified\" property.  It returns the result of
RESOURCE-WRITE-DATE as an RFC 1123 string within a DAV XML node.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CREATION-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION
     "This is the function that is called for the \"creationdate\"
property.  It returns the result of RESOURCE-CREATION-DATE as an
ISO 8601 string within a DAV XML node.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CONTENT-LENGTH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "This is the function that is called for the
\"getcontentlength\" property.  It simply returns the result of
RESOURCE-LENGTH as a string.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION
     "This is the function that is called for the \"getcontenttype\"
property.  It simply returns the result of RESOURCE-CONTENT-TYPE
for non-collections and \"httpd/unix-directory\" for
collections.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-RESOURCE*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION
     "Removes the resource RESOURCE and (if necessary) its children
using REMOVE-RESOURCE.  Returns a list of conses where the car is
an HTTP return code and the cdr is the corresponding resource for
exceptional situations encountered during the process.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-OR-MOVE-RESOURCE*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "MOVEP" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "DEPTH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Copies or moves (depending on the generalized boolean MOVEP)
the resource denoted by SOURCE to (the resource denoted by)
DESTINATION.  If DEPTH is NIL, recurses down to the children (if
any) as well.  Returns a list of conses where the car is an HTTP
return code and the cdr is the corresponding (source) resource
for exceptional situations encountered during the process.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CREATE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "Creates and returns an object of type
RESOURCE-CLASS (a subclass of RESOURCE) corresponding to the script
name SCRIPT-NAME (which is already URL-decoded).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
       ((:NAME "URL-DECODE*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
        ((:NAME "SCRIPT-NAME*" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)))))
     :DOCUMENTATION "Creates and returns an object of the type stored in
*RESOURCE-CLASS* corresponding to the script name SCRIPT-NAME.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESOURCE-CREATED" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "Utility function which sets up Hunchentoot's *REPLY* object
for a +HTTP-CREATED+ response corresponding to the newly-created
resource RESOURCE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPERTY-EQUAL" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROPERTY1" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "PROPERTY2" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Two (XMLS nodes denoting) properties are equal iff they have
the same local name and the same namespace URI.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DAV-PROPERTY-FUNCTION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the function which is responsible to retrieve the DAV
\"live\" property PROPERTY, where PROPERTY can either be an XMLS
node or a string denoting the local name of the corresponding
node.  If PROPERTY doesn't denote a DAV property, this function
returns NIL.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY-DESIGNATOR" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Returns the dead property denoted by the XMLS node
PROPERTY-DESIGNATOR of the resource RESOURCE or +HTTP-NOT-FOUND+
if such a property doesn't exist.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY-DESIGNATOR" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Returns the (live or dead) property denoted by the XMLS node
PROPERTY-DESIGNATOR of the resource RESOURCE or +HTTP-NOT-FOUND+
if such a property doesn't exist.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPSTAT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY-DESIGNATOR" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "SHOW-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Uses GET-PROPERTY to try to retrieve the property designated
by PROPERTY-DESIGNATOR from the resource RESOURCE.  Returns as
its first value an HTTP return code (with +HTTP-OK+ denoting
that the property was found) and as its second value the property
designator or (if SHOW-CONTENT is true and the property was
found) the property itself.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-DEAD-PROPERTY-DESIGNATORS" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "Returns a list of XMLS nodes which are designators for all
dead properties for the resource RESOURCE.")
    (:TYPE :CONSTANT :SYMBOL
     (:NAME "+DAV-PROPERTY-DESIGNATORS+" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
      NIL)
     :DOCUMENTATION "A list of XMLS nodes which are property designators for all
DAV (live) properties defined by the WebDAV RFC.  Computed at
load time from +DAV-PROPERTY-ALIST+."
     :INITIAL-VALUE "(IF (BOUNDP 'CL-WEBDAV::+DAV-PROPERTY-DESIGNATORS+)
    (SYMBOL-VALUE 'CL-WEBDAV::+DAV-PROPERTY-DESIGNATORS+)
    (LOAD-TIME-VALUE
     (LOOP CL-WEBDAV::FOR (CL-WEBDAV::NAME) CL-WEBDAV::IN CL-WEBDAV::+DAV-PROPERTY-ALIST+
           CL-WEBDAV::COLLECT (CL-WEBDAV:DAV-NODE CL-WEBDAV::NAME))))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALL-PROPERTY-DESIGNATORS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
      NIL)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "Returns a list of XMLS nodes which are designators for all
(dead and live) properties for the resource RESOURCE.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COLLECT-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
      (:NAME "PROPERTY-DESIGNATORS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "SHOW-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Tries to collect all properties of the resource RESOURCE which
are in the list PROPERTY-DESIGNATORS (which can also be the
symbol T which means \"all dead an live properties\".
SHOW-CONTENT is interpreted as in PROPSTAT.  Returns the
corresponding \"response\" DAV node as an XMLS node.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-PROPFIND" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "OCTETS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Helper function for PROPFIND-HANDLER which parses the XML
stored in OCTETS (an array of octets) which is supposed to be
either empty or the body of a PROPFIND request.  Returns as its
first value a list of the requested properties (as XMLS nodes)
or T (denoting all properties) and as its second value a boolean
which is T iff the client wants only property names.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RETRIEVE-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Retrieves the properties stored under the (EQUAL) key KEY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STORE-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Stores PROPERTIES under the (EQUAL) key KEY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REMOVE-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Removes any properties stored under the (EQUAL) key KEY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MOVE-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FROM-KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "TO-KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Moves properties stored under the (EQUAL) key FROM-KEY (if
any) to the key TO-KEY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "FROM-KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "TO-KEY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "Copies (using COPY-TREE) properties stored under the (EQUAL)
key FROM-KEY (if any) to the key TO-KEY.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "*RESOURCE-CLASS*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION "A generic Hunchentoot dispatcher (corresponding to the
resource class RESOURCE-CLASS) for all DAV methods.  The handler
which is returned will have *RESOURCE-CLASS* bound to
RESOURCE-CLASS.  In theory, you could use this as your dispatcher
(which doesn't call ACCEPT-REQUEST-P first), but it's not
exported and only used internally by CREATE-DAV-DISPATCHER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTIONS-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION
     "A dispatcher which'll dispatch to OPTIONS-HANDLER in case of
an OPTIONS request and decline otherwise.  This is only useful if
you want to cater to Microsoft DAV clients which always
unconditionally send OPTIONS requests to the \"/\" root
resource.  Sigh...")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "Creates and returns a dispatcher for the class
RESOURCE-CLASS which must be a subclass of RESOURCE.  If
MS-WORKAROUND-P is true (which is the default), OPTIONS requests are
always handled irrespective of the results of ACCEPT-REQUEST-P - this
is needed to work around problems with some Microsoft DAV clients.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPTIONS-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for OPTIONS requests.  Output is basically
determined by *ALLOWED-METHODS* and *DAV-COMPLIANCE-CLASSES*.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPFIND-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for PROPFIND requests.  Parses the request's
content body (if there is one) and returns a corresponding
\"multistatus\" XML element using the methods for live and dead
properties.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PROPPATCH-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for PROPPATCH requests.  Parses the request's
content body, modifies the dead properties as specified and
returns a corresponding \"multistatus\" XML element.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GET-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "HEAD-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "The handler for GET requests.  Serves the contents of the
resource using SEND-CONTENT and sets up the HTTP headers
correctly.  Also doubles as handler for HEAD requests if
HEAD-REQUEST-P is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HEAD-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for HEAD requests - the actual work is done by
GET-HANDLER.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MULTI-STATUS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESULTS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "DEFAULT-RETURN-CODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "+HTTP-NO-CONTENT+" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T)))
     :DOCUMENTATION
     "Utility function which returns a MULTISTATUS response to the
HTTP client which is based on RESULTS.  RESULTS must be a list of
conses where the cdr is the resource and the car is the
corresponding status code.  If RESULTS is NIL, not MUTILSTATUS
response will be generated and DEFAULT-RETURN-CODE will be used
instead.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DELETE-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "The handler for DELETE requests.  Uses REMOVE-RESOURCE* to do
the actual work.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PUT-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for PUT requests.  Uses GET-CONTENT to create a
new resource from the contents sent by the client.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MOVEP" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "The handler for COPY requests which internally uses
COPY-OR-MOVE-RESOURCE* to do the actual work.  Also doubles as a
handler for MOVE requests if MOVEP is true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MOVE-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "The handler for MOVE requests.  Calls COPY-HANDLER to do the
actual work.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MKCOL-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "The handler for MKCOL requests which uses CREATE-COLLECTION
internally.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)) :DOCUMENTATION
     "A subclass of RESOURCE representing resources
which are mapped to a subtree of the local file system."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REAL-PATH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL) :ACCESSORS
       ((:NAME "REAL-PATH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)) :READERS
       NIL :WRITERS NIL :DOCUMENTATION "The pathname of the resource within
the local file system.")))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPUTE-REAL-PATH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SCRIPT-NAME" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "Computes the \"real path\" of a file resource from the
request's script name.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "When a file resource is created, either the real path or the
script name is known.  This :AFTER method sets the other slot.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-EXISTS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "A file resource exists iff the corresponding file exists.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-COLLECTION-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "A file resource is a collection iff the corresponding file is
a directory.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "The children of a (collection) file resource are the contents
of the corresponding directory in the file system.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-PARENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "To determine the parent of a file resource we \"walk up\" the
script name and map the result to a pathname in the file system.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-WRITE-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION "As the write date of a resource we return the write date of
the corresponding file (or the current time in case we can't
determine the file's write date).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-LENGTH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION "The length of a file resource is the length of the
corresponding file in octets.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION "We use Hunchentoot's MIME-TYPE function to determine the
resource's content type based on the type component of its
pathname.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "RESOURCE-DISPLAY-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "The display name is basically the real path with the base path
stripped off.  But we also make sure to convert Windows backslashes to
Unix slashes.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEND-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "To implement this method, we simply open the corresponding
file for reading and send its contents (as chunks of octets) to
the stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "To implement this method, we simply open the corresponding
file for writing and read its contents (as chunks of octets)
from the stream.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "A file resource is removed by removing the corresponding file
in the file system.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      ((:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION
     "A file resource is moved by moving its counterpart in the file
system (using the Common Lisp function RENAME-FILE).")
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      ((:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION "A file resource is moved by copying its counterpart in the
file system (using CL-FAD's function COPY-FILE).  Collections
(directories) are \"copied\" simply by creating a new directory
with the same name in the destination location.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-COLLECTION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "A collection is created by creating the corresponding
directory in the file system (using the Common Lisp function
ENSURE-DIRECTORIES-EXIST.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))))
      (:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "A request is accepted if it starts with the base URI.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This generic function is called for subclasses of
FILE-RESOURCE to determine the base URI that's currently being used,
i.e. the prefix the script name of a resource's URI must have in order
to be valid.  (In other words: this URI represents the top-level
collection of the DAV server.)  The function must return a string
which starts with a slash and does /not/ end with a slash and is
correctly URL-encoded.  You can specialize this function (either on
the class or on the name of the class) if you want.

The default method returns the current value of
*FILE-RESOURCE-BASE-URI*.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION "This generic function is called for subclasses of
FILE-RESOURCE to determine the base pathname that's currently being
used, i.e. the part of the filesystem where the files served by the
DAV server are stored.  The function must return the namestring of the
truename of an absolute pathname denoting a directory, specifically it
must return a string starting and ending with slashes.  (Note: This
should work on Windows as well.)  You can specialize this function
(either on the class or on the name of the class) if you want.

The default method returns the current value of
*FILE-RESOURCE-BASE-PATH-NAMESTRING*.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "SYMBOL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "STANDARD-CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GET-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      (:NAME "PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "REMOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      ((:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "COPY-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
      ((:NAME "DESTINATION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "AUTHORIZED-FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T))
     :DOCUMENTATION "A subclass of FILE-RESOURCE representing file
resources which are associated with a certain user."
     :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "AUTHORIZED-FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
          T))))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MS-WORKAROUND-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL))
     :DOCUMENTATION
     "This :AROUND method wraps the normal DAV dispatcher with one
that checks basic HTTP authentication first.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "AUTHORIZED-FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
          T)))))
     :DOCUMENTATION
     "We compute the base path by attaching the downcased user name
to the base path returned for plain file resources.  We also
create the directory if necessary.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "RESOURCE-CLASS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP NIL)
       ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         (:NAME "AUTHORIZED-FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP
          T))))
      (:NAME "REQUEST" :PACKAGE-NAME "HUNCHENTOOT" :EXTERNALP T))
     :DOCUMENTATION "We just use the method for FILE-RESOURCE."))
   :EXTERNAL-SYMBOLS
   ((:NAME "RESOURCE-EXISTS" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "AUTHORIZED-FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "CREATE-COLLECTION" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "ACCEPT-REQUEST-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "*ALLOWED-METHODS*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-CONTENT-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-SCRIPT-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "REMOVE-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "OPTIONS-HANDLER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-ETAG" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-COLLECTION-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-LENGTH" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "NODE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "CREATE-DAV-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "COPY-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "*FILE-RESOURCE-BASE-URI*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "OPTIONS-DISPATCHER" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "COPY-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-TYPE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "REMOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "LOCAL-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "FILE-RESOURCE-BASE-PATH-NAMESTRING" :PACKAGE-NAME "CL-WEBDAV"
     :EXTERNALP T)
    (:NAME "NAMESPACE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "SERIALIZE-XMLS-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "GET-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-CREATION-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-URI-PREFIX" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "PARSE-DAV" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "GET-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "*RESOURCE-CLASS*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "*DAV-COMPLIANCE-CLASSES*" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-PARENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-CONTENT-LANGUAGE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "*FILE-RESOURCE-BASE-PATH-NAMESTRING*" :PACKAGE-NAME "CL-WEBDAV"
     :EXTERNALP T)
    (:NAME "MOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "FILE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "SET-DEAD-PROPERTY" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "FILE-RESOURCE-BASE-URI" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "NODE-ATTRIBUTES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "MOVE-RESOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "REMOVE-DEAD-PROPERTIES" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-CHILDREN" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "SEND-CONTENT" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-WRITE-DATE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "DAV-NODE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "XMLS-NODE-P" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-DISPLAY-NAME" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)
    (:NAME "RESOURCE-SOURCE" :PACKAGE-NAME "CL-WEBDAV" :EXTERNALP T)))))
