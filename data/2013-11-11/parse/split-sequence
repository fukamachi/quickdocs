
(:TYPE :SYSTEM :NAME "split-sequence" :AUTHOR NIL :MAINTAINER
 "Sharp Lispers <sharplispers@googlegroups.com>" :VERSION "1.1" :LICENCE NIL
 :DESCRIPTION "Splits a sequence into a list of subsequences
  delimited by objects satisfying a test."
 :LONG-DESCRIPTION NIL :DEPENDS-ON NIL :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "SPLIT-SEQUENCE" :FULL-NAME "SPLIT-SEQUENCE"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-SEQUENCE" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "DELIMITER" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "FROM-END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "REMOVE-EMPTY-SUBSEQS" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "TEST" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST-NOT" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "KEY" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Return a list of subsequences in seq delimited by delimiter.

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE.  In particular, the
behaviour of :from-end is possibly different from other versions of
this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-SEQUENCE-IF" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "FROM-END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "REMOVE-EMPTY-SUBSEQS" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "KEY" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Return a list of subsequences in seq delimited by items satisfying
predicate.

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE-IF.  In particular, the
behaviour of :from-end is possibly different from other versions of
this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-SEQUENCE-IF-NOT" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "REMOVE-EMPTY-SUBSEQS" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "FROM-END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL) 0)
      ((:NAME "END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "KEY" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Return a list of subsequences in seq delimited by items satisfying
(CL:COMPLEMENT predicate).

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE-IF-NOT.  In particular,
the behaviour of :from-end is possibly different from other versions
of this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-FROM-END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POSITION-FN" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REMOVE-EMPTY-SUBSEQS" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SPLIT-FROM-START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "POSITION-FN" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "REMOVE-EMPTY-SUBSEQS" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "SPLIT-SEQUENCE-IF" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP T)
    (:NAME "SPLIT-SEQUENCE" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP T)
    (:NAME "SPLIT-SEQUENCE-IF-NOT" :PACKAGE-NAME "SPLIT-SEQUENCE" :EXTERNALP
     T)))))
