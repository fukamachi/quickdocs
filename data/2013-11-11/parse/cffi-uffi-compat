
(:TYPE :SYSTEM :NAME "cffi-uffi-compat" :AUTHOR
 "James Bielman  <jamesjb@jamesjb.com>" :MAINTAINER NIL :VERSION NIL :LICENCE
 NIL :DESCRIPTION "UFFI Compatibility Layer for CFFI" :LONG-DESCRIPTION NIL
 :DEPENDS-ON ("CFFI") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "CFFI-UFFI-COMPAT" :FULL-NAME "CFFI-UFFI-COMPAT"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-UFFI-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "UFFI-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert a UFFI primitive type to a CFFI type.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "UFFI-ARRAY-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "ENHANCED-FOREIGN-TYPE" :PACKAGE-NAME "CFFI" :EXTERNALP NIL))
     :DOCUMENTATION "UFFI's :array type." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ELEMENT-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "ELEMENT-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NELEMS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "NELEMS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "FOREIGN-TYPE-SIZE" :PACKAGE-NAME "CFFI" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UFFI-ARRAY-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "AGGREGATEP" :PACKAGE-NAME "CFFI" :EXTERNALP NIL) :LAMBDA-LIST
     (((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "UFFI-ARRAY-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Define a Common Lisp type NAME for UFFI type TYPE.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-FOREIGN-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Define a new foreign type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-CONSTANT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "EXPORT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Define a constant and conditionally export it.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "NULL-CHAR-P" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAL" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Return true if character is null.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-ENUM" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ENUM-NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SEPARATOR-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
        NIL)
       "#"))
     :DOCUMENTATION "Creates a constants for a C type enum list, symbols are
created in the created in the current package. The symbol is the
concatenation of the enum-name name, separator-string, and
field-name")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-STRUCT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELDS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Define a C structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "%FOREIGN-SLOT-VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELD" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "%FOREIGN-SLOT-VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
       NIL))
     :LAMBDA-LIST
     ((:NAME "VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELD" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "GET-SLOT-VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELD" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Access a slot value from a structure.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "GET-SLOT-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELD" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Access a pointer slot value from a structure.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-ARRAY-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Define a foreign array type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEREF-ARRAY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ARRAY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Dereference an array.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-UNION" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FIELDS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Define a foreign union type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ALLOCATE-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SIZE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL) 1))
     :DOCUMENTATION "Allocate one or more instance of a foreign type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "FREE-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION
     "Free a foreign object allocated by ALLOCATE-FOREIGN-OBJECT.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Wrap the allocation of a foreign object around BODY.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FOREIGN-OBJECTS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "BINDINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SIZE-OF-FOREIGN-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Return the size in bytes of a foreign type.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "POINTER-ADDRESS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Return the address of a pointer.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEREF-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Dereference a pointer.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENSURE-CHAR-CHARACTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert OBJ to a character if it is an integer.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENSURE-CHAR-INTEGER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&ENVIRONMENT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENV" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert OBJ to an integer if it is a character.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "ENSURE-CHAR-STORABLE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Ensure OBJ is storable as a character.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAKE-NULL-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Create a NULL pointer.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MAKE-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "ADDRESS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Create a pointer to ADDRESS.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "NULL-POINTER-P" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Return true if PTR is a null pointer.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "+NULL-CSTRING-POINTER+" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :DOCUMENTATION "A constant NULL string pointer." :INITIAL-VALUE
     "(CFFI-SYS:NULL-POINTER)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CHAR-ARRAY-TO-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CAST-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Cast a pointer, does nothing in CFFI.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-FOREIGN-VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "TYPE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODULE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Define a symbol macro to access a foreign variable.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-POINTER-VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DOC" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CONVERT-FROM-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST ((:NAME "S" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert a cstring to a Lisp string.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CONVERT-TO-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Convert a Lisp string to a cstring.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "FREE-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PTR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Free a cstring.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "LISP-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Binds a newly creating string.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-CSTRINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BINDINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-FUNCTION" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "ARGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODULE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      ((:NAME "RETURNING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "VOID" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)))
     :DOCUMENTATION "Define a foreign function.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*LOADED-LIBRARIES*" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      NIL)
     :DOCUMENTATION
     "List of foreign libraries loaded. Used to prevent reloading a library"
     :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DEFAULT-FOREIGN-LIBRARY-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Returns string naming default library type for platform")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FOREIGN-LIBRARY-TYPES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Returns list of string naming possible library types for platform,
sorted by preference")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-FOREIGN-LIBRARY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NAMES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "DIRECTORIES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TYPES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "DRIVE-LETTERS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Looks for a foreign library. directories can be a single
string or a list of strings of candidate directories. Use default
library type if type is not specified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-SUPPORTING-LIBRARIES-TO-STRING" :PACKAGE-NAME
      "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "LIBS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOAD-FOREIGN-LIBRARY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "FILENAME" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MODULE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "SUPPORTING-LIBRARIES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
       NIL)
      (:NAME "FORCE-LOAD" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GETENV" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Return the value of the environment variable.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RUN-SHELL-COMMAND" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTROL-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "OUTPUT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION "Interpolate ARGS into CONTROL-STRING as if by FORMAT, and
synchronously execute the result using a Bourne-compatible shell, with
output to *trace-output*.  Returns the shell's exit code.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CONVERT-FROM-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LOCALE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "DEFAULT" :PACKAGE-NAME "KEYWORD" :EXTERNALP T))
      ((:NAME "ENCODING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "*DEFAULT-FOREIGN-ENCODING*" :PACKAGE-NAME "CFFI" :EXTERNALP
         T)))
      ((:NAME "NULL-TERMINATED-P" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CONVERT-TO-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "ENCODING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "*DEFAULT-FOREIGN-ENCODING*" :PACKAGE-NAME "CFFI" :EXTERNALP
         T))))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "ALLOCATE-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SIZE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "UNSIGNED" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     (((:NAME "FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
       (:NAME "LISP-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-FOREIGN-STRINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "BINDINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FOREIGN-STRING-LENGTH" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONVERT-FROM-FOREIGN-USB8" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "S" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "LEN" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "STRING-TO-OCTETS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENCODING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "NULL-TERMINATE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "OCTETS-TO-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "OCTETS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENCODING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FOREIGN-ENCODED-OCTET-COUNT" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ENCODING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "CONVERT-FROM-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "MAKE-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "CONVERT-FROM-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "DEF-FUNCTION" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEF-CONSTANT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "FOREIGN-LIBRARY-TYPES" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "CONVERT-FROM-FOREIGN-USB8" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "GET-SLOT-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "FREE-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "WITH-CSTRINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "GETENV" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "ENSURE-CHAR-INTEGER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "FREE-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEF-FOREIGN-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "FIND-FOREIGN-LIBRARY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "NULL-CHAR-P" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "POINTER-ADDRESS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "GET-SLOT-VALUE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "STRING-TO-OCTETS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "WITH-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEREF-ARRAY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEF-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "WITH-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "NULL-POINTER-P" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "+NULL-CSTRING-POINTER+" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "WITH-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "ALLOCATE-FOREIGN-OBJECT" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "DEF-FOREIGN-VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "CONVERT-TO-CSTRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "WITH-CAST-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEFAULT-FOREIGN-LIBRARY-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "ENSURE-CHAR-STORABLE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "DEF-ENUM" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "RUN-SHELL-COMMAND" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "CONVERT-TO-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "DEREF-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEF-STRUCT" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "DEF-UNION" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "ENSURE-CHAR-CHARACTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "DEF-ARRAY-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "SIZE-OF-FOREIGN-TYPE" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "DEF-POINTER-VAR" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "LOAD-FOREIGN-LIBRARY" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "WITH-FOREIGN-OBJECTS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "WITH-FOREIGN-STRINGS" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "ALLOCATE-FOREIGN-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "CHAR-ARRAY-TO-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)
    (:NAME "OCTETS-TO-STRING" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "MAKE-NULL-POINTER" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP T)
    (:NAME "FOREIGN-ENCODED-OCTET-COUNT" :PACKAGE-NAME "CFFI-UFFI-COMPAT"
     :EXTERNALP T)
    (:NAME "FOREIGN-STRING-LENGTH" :PACKAGE-NAME "CFFI-UFFI-COMPAT" :EXTERNALP
     T)))))
