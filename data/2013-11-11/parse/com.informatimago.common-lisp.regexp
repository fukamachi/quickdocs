
(:TYPE :SYSTEM :NAME "com.informatimago.common-lisp.regexp" :AUTHOR
 "Pascal J. Bourguignon <pjb@informatimago.com>" :MAINTAINER
 "Pascal J. Bourguignon <pjb@informatimago.com>" :VERSION "1.2.1" :LICENCE
 "AGPL3" :DESCRIPTION "INCOMPLETE. Regular expressions with various syntaxes."
 :LONG-DESCRIPTION "INCOMPLETE. Do not use yet." :DEPENDS-ON
 ("COM.INFORMATIMAGO.COMMON-LISP.CESARUM"
  "COM.INFORMATIMAGO.COMMON-LISP.PICTURE")
 :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME ".REGEXP-EMACS" :FULL-NAME
   "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :DOCUMENTATION "
NOT COMPLETE YET.

This package implement REGEXP in COMMON-LISP, which is interesting
because then it's available on any COMMON-LISP platform whether the
external C regexp library is available or not, and moreover, it's the
same (that is, it's compatible) on all COMMON-LIST platforms.


Posix Regexp implemented in Common-Lisp.

See specifications at:
http://www.opengroup.org/onlinepubs/007904975/basedefs/xbd_chap09.html

This is a strict implementation that will work both in clisp
(Common-Lisp) and emacs (with cl and pjb-cl Common-Lisp extensions).

This implementation is entirely in lisp, contrarily to what regexp
packages are available under clisp or emacs.  Thus it as the advantage
of portability and availability (you don't have to compile or link
a lisp system written in some barbarous language, and you get the same
regexp features in all programs including this module).



License:

    AGPL3
    
    Copyright Pascal J. Bourguignon 2002 - 2012
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.
    
    You should have received a copy of the GNU Affero General Public License
    along with this program.
    If not, see <http://www.gnu.org/licenses/>

"
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SPLIT-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEPARATORS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:         Splits STRING into substrings where there are matches
            for SEPARATORS.
RETURNS:    A list of substrings.
separators: A regexp matching the sub-string separators.
            Defaults to \"[ ftnrv]+\".
NOTE:       Current implementation only accepts as separators
            a literal string containing only one character.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SC" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The string being scanned.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-POSITION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The current position.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-CURR-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The current character, or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-NEXT-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The next character, or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-ADVANCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
PRE:     (= p      (sc-position sc))
POST:    (= (1+ p) (sc-position sc))
RETURN:  The character at position 1+p.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-SCAN-TO-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "CHAR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "
RETURN:  the substring of (sc-string sc) starting from current position
         to the position just before the first character equal to `char'
         found from this position.

PRE:     (= p      (sc-position sc))
POST:    (and (<=  p (sc-position sc))
              (or (and (< (sc-position sc) (length (sc-string sc)))
                       (char= char (sc-curr-char sc)))
                  (= (sc-position sc) (length (sc-string sc))))
              (forall i between p and (1- (sc-position sc))
                  (char/= char (char (sc-string sc) i))))
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-SIMPLE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses a regexp simple.
RETURN: A parse tree.

simple ::= '\\('   regexp '\\)' .    (:group     regexp)
simple ::= '\\(?:' regexp '\\)' .    (:shy-group regexp)
simple ::= '\\0' |'\\1' |'\\2' |'\\3' | '\\4'
          |'\\5' |'\\6' |'\\7' |'\\8' | '\\9' .
                                   (:reference number)
simple ::= regular-character .     regular-character
simple ::= '.' | '\\w' | '\\W' | '\\sC' | '\\SC' | '\\cC' | '\\CC' .
                                   :any-character
                                   :any-word-character
                                   :any-not-word-character
                                   (:any-syntax-class     class)
                                   (:any-not-syntax-class class)
                                   (:any-category         category)
                                   (:any-not-category     category)

simple ::= '\\=' | '\\b' | '\\B' | '\\<' | '\\>' .
                                   :empty-at-point    NEVER MATCH IN STRING!
                                   :empty-at-limit-of-word
                                   :empty-not-at-limit-of-word
                                   :empty-at-beginning-of-word
                                   :empty-at-end-of-word

simple ::= '^' | '\\`' .
                                   :empty-at-beginning-of-line
                                   :empty-at-beginning-of-string
simple ::= '$' | '\\'' .
                                   :empty-at-end-of-line
                                   :empty-at-end-of-string

simple ::= '\\$' | '\\^' | '\\.' | '\\*' | '\\+'
         | '\\?' | '\\[' | '\\]' | '\\\\' .
                                   regular-character

simple ::= '[' '^' character-set ']' .
                                   (:inverse-char-set char-or-char-interval )
simple ::= '['     character-set ']' .
                                   (:char-set         char-or-char-interval )
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-ELEMENT" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a regexp element.
RETURNS: A parse tree.

element ::= simple .               simple
element ::= simple '*' .           (:zero-or-more simple)
element ::= simple '+' .           (:one-or-more  simple)
element ::= simple '?' .           (:optional     simple)

element ::= simple '*?' .          (:non-greedy-zero-or-more simple)
element ::= simple '+?' .          (:non-greedy-one-or-more  simple)
element ::= simple '??' .          (:non-greedy-optional     simple)

element ::= simple '{' number '}' .
                                   (:repeat-exact   simple number)
element ::= simple '{' number ',' [ number ] '}' .
                                   (:repeat-between simple number [number])
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-COLLAPSE-STRINGS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURNS: A new list where all sequences of characters are collapsed
         into strings. Signle characters are not collapsed.
NOTE:    Does not works recursively because recursive sequences are built
         bottom-up.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-SEQUENCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a regexp sequence.
RETURNS: A parse tree.

sequence ::= element sequence  .  (:sequence element element ...)
sequence ::= element .             element
sequence ::= .                     nil
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-REGEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a regexp.
RETURNS: A parse tree.
NOTE:    The result may contain the symbol :error followed by a string.

regexp ::= sequence '|' regexp .   (:alternative sequence sequence...)
regexp ::= sequence .               sequence
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-WHOLE-REGEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "PJB-RE-NEW-LINE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :DOCUMENTATION "A new-line." :INITIAL-VALUE "(CODE-CHAR 10)")
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-NODE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-BEGIN" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-END" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-TRY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-PRIVATE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-SLOT-CHILDREN" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-INIT" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "PJB-RE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-CHARACTER-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a character.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-STRING-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a string.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-NULL-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a null.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ALTERNATIVE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a alternative.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-CATEGORY-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-category.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-CHARACTER-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-character.  That is, anything but a NEW-LINE!
RETURNS: nil when no match,
         or the next unmatched position when there's a match.

A period ( '.' ), when used outside a bracket expression, is a BRE
that shall match any character in the supported character set except
NUL.

")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-NOT-CATEGORY-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-not-category.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-NOT-SYNTAX-CLASS-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-not-syntax-class.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-NOT-WORD-CHARACTER-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-not-word-character.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-SYNTAX-CLASS-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-syntax-class.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ANY-WORD-CHARACTER-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a any-word-character.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-CHAR-SET-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a char-set.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-BEGINNING-OF-LINE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-beginning-of-line.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-BEGINNING-OF-STRING-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-beginning-of-string.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-BEGINNING-OF-WORD-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-beginning-of-word.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-END-OF-LINE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-end-of-line.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-END-OF-STRING-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-end-of-string.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-END-OF-WORD-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-end-of-word.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-LIMIT-OF-WORD-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-limit-of-word.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-AT-POINT-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-at-point.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-EMPTY-NOT-AT-LIMIT-OF-WORD-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a empty-not-at-limit-of-word.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ERROR-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a error.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-GROUP-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a group.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-INVERSE-CHAR-SET-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a inverse-char-set.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-NON-GREEDY-ONE-OR-MORE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a non-greedy-one-or-more.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-NON-GREEDY-OPTIONAL-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a non-greedy-optional.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-NON-GREEDY-ZERO-OR-MORE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a non-greedy-zero-or-more.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-OPTIONAL-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a optional.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ONE-OR-MORE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a one-or-more.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-REFERENCE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a reference.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-REPEAT-BETWEEN-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a repeat-between.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-REPEAT-EXACT-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a repeat-exact.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SEQUENCE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a sequence.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SHY-GROUP-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a shy-group.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-ZERO-OR-MORE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "Matches a zero-or-more.
RETURNS: nil when no match,
         or the next unmatched position when there's a match.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-MAKE-PJB-RE-SYMBOL" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "KEY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "EXT" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:     A symbol corresponding to one of the pjb-re-*-{init,match} 
            functions defined here.
ext:        A string, either \"init\" or \"match\".
key:        A keyword, one of those used in the regexp syntactic trees.

NOTE:
                                       emacs      Common-Lisp
            ----------------------  ------------  ------------
            (symbol-name 'key)        ''key''        ''KEY''
            (symbol-name :key)        '':key''       ''KEY''
            (eq 'key 'KEY)              nil             T
URL:        <http://www.informatimago.com/local/lisp/HyperSpec/Body/02_cd.htm>
            <http://www.informatimago.com/local/lisp/HyperSpec/Body/f_intern.htm#intern>
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-DECORATE-TREE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "TREE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "
RETURN:  A decorated tree that can be used for the matching the string.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-COLLECT-GROUPS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "DEC-TREE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "GROUPS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This structure stores a (start,end) couple specifying the range matched
by a group (or the whole regexp)."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "START" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "END" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "START" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1223" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "END" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM1224" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATCH" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T))
     :DOCUMENTATION
     "Extracts the substring of STRING corresponding to a given pair of
start and end indices. The result is shared with STRING.
If you want a freshly consed string, use copy-string
or (coerce (match-string ...) 'simple-string).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REGEXP-QUOTE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Common-Lisp: This function returns as first value a match structure
containing the indices of the start and end of the first match for the
regular expression REGEXP in STRING, or nil if there is no match.
If START is non-nil, the search starts at that index in STRING.
If END is non-nil, only (subseq STRING START END) is considered.
The next values are match structures for every '(...)' construct in REGEXP,
in the order that the open parentheses appear in REGEXP.


start:   the first character of STRING to be considered (defaults to 0)
end:     the after last character of STRING to be considered
         (defaults to (length string)).
RETURN:  index of start of first match for REGEXP in STRING, nor nil.
"))
   :EXTERNAL-SYMBOLS
   ((:NAME "MATCH-STRING" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
    (:NAME "REGEXP-MATCH" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
    (:NAME "REGEXP-QUOTE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
    (:NAME "MATCH" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
    (:NAME "MATCH-START" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)
    (:NAME "MATCH-END" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-EMACS" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".REGEXP-POSIX" :FULL-NAME
   "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :DOCUMENTATION "

NOT COMPLETE YET.

This package implement POSIX Regular Expressions in Common-Lisp.
This is interesting because it's available on any Common-Lisp platform
while external C regexp libraries or internals are available or not,
and not always implement these same syntax or semantic.


Posix Regexp implemented in Common-Lisp.

See specifications at:
http://www.opengroup.org/onlinepubs/007904975/basedefs/xbd_chap09.html

This is a strict implementation that will work both in clisp
(Common-Lisp) and emacs (with cl and pjb-cl Common-Lisp extensions).

This implementation is entirely in lisp, contrarily to what regexp
packages are available under clisp or emacs.  Thus it has the advantage
of portability and availability (you don't have to compile or link
a lisp system written in some barbarous language, and you get the same
regexp features in all programs including this module).


License:

    AGPL3
    
    Copyright Pascal J. Bourguignon 2002 - 2012
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.
    
    You should have received a copy of the GNU Affero General Public License
    along with this program.
    If not, see <http://www.gnu.org/licenses/>

"
   :SYMBOL-LIST
   ((:TYPE :FUNCTION :SYMBOL
     (:NAME "LESSP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "A" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "B" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "IF^2" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "C1" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "C2" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "TT" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "TF" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "FT" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "FF" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TOP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STACK" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "INVARIANT" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONDITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SPLIT-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SEPARATORS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DOES:       Splits STRING into substrings where there are matches
            for SEPARATORS.
RETURNS:    A list of substrings.
separators: A regexp matching the sub-string separators.
            Defaults to \"[ ftnrv]+\".
NOTE:       Current implementation only accepts as separators
            a literal string containing only one character.
")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "SC" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BRACKET-POSITION" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EXPRESSION-START" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-SC" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "STRING" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM58" :PACKAGE-NAME NIL :EXTERNALP NIL))
       "")
      (((:NAME "POSITION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM59" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "BRACKET-POSITION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM60" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "EXPRESSION-START" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM61" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-LENGTH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-EOS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-CURR-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The current character, or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-NEXT-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The next character, or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-AFTER-NEXT-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  The after next character, or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-ADVANCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INCREMENT" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       1))
     :DOCUMENTATION "
PRE:     (= p (sc-position sc))
POST:    (= (min (sc-length sc) (+ p increment)) (sc-position sc))
RETURN:  The character at position p+increment or nil if EOS.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-LOOKING-AT" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "SUBSTRING" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SC-SCAN-TO" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "SUBSTRING" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  the substring of (sc-string sc) starting from current position
         to the position just before the first occurence of the substring
         found from this position.

PRE:     (= p      (sc-position sc))
POST:    (and (<=  p (sc-position sc))
              (or (and (< (sc-position sc) (length (sc-string sc)))
                       (string= substring (substring (sc-string sc)
                                                      p (sc-position sc))))
                  (= (sc-position sc) (length (sc-string sc))))
              (forall i between p and (1- (sc-position sc))
                  (string/= substring (substring (sc-string sc)
                                          i (+ i (length substring))))))
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LENGTH>1" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST ((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERRORP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "EXPR" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RE-INTEGER" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses an integer.
RETURN: The integer, or NIL.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-COLLATING-SYMBOL" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses a collating-symbol.
RETURN: (rk:collating-symbol coll-elem)
        or (:error message)
        or nil if not looking at '[='.
NOTE:
   collating_symbol : Open_dot COLL_ELEM_SINGLE Dot_close
                    | Open_dot COLL_ELEM_MULTI Dot_close
                    | Open_dot META_CHAR Dot_close ;
   COLL_ELEM_SINGLE and META_CHAR form a partition of all characters.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-EQUIVALENCE-CLASS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses an equivalence class.
RETURN: (rk:equivalence-class coll-elem)
        or (:error message)
        or nil if not looking at '[='.
NOTE:
   equivalence_class : Open_equal COLL_ELEM_SINGLE Equal_close
                     | Open_equal COLL_ELEM_MULTI Equal_close ;

   META_CHAR
    One of the characters:
    ^   When found first in a bracket expression
    -   When found anywhere but first (after an initial '^' , if any)
        or last in a bracket expression, or as the ending range point
        in a range expression
    ]   When found anywhere but first (after an initial '^' , if any)
        in a bracket expression

   Inside an equivalence-class:
   ^ is not first in a bracket expression             ==> ^ is not meta-char
   ] is not first in a bracket expression                 ==> ] is meta-char
   - isn't first, shouldn't be last, isn't ending a range ==> - is meta-char
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-CHARACTER-CLASS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses a character class
RETURN: (rk:character-class class-name)
        or (:error message)
        or nil if not looking at '[:'.
NOTES:
   character_class : Open_colon class_name Colon_close ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-END-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses an end-range.
RETURN: character or (rk:collating-symbol coll-elem)
NOTES:
   end_range      : COLL_ELEM_SINGLE
                  | collating_symbol ;
   COLL_ELEM_SINGLE
    Any single-character collating element, unless it is a META_CHAR.
   META_CHAR
    One of the characters:
    ^   When found first in a bracket expression
    -   When found anywhere but first (after an initial '^' , if any)
        or last in a bracket expression, or as the ending range point
        in a range expression
    ]   When found anywhere but first (after an initial '^' , if any)
        in a bracket expression
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-START-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses a start-range.
RETURN: character or (rk:collating-symbol coll-elem)
        or nil if not looking at a start-range.
NOTES:
   start_range    : end_range '-' ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-RANGE-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parses a range-expression.
RETURN: (rk:range start end) or nil of not looking at a range-expression.
NOTES:
   range_expression : start_range end_range
                    | start_range '-' ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-SINGLE-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a single-expression.
RETURN:  (or (rk:equivalence-class ec) (rk:character-class cc)
             (rk:collating-symbol cs)  character
             nil)
NOTES:
   single_expression : end_range
                     | character_class
                     | equivalence_class ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-EXPRESSION-TERM" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:
RETURN:  (or (rk:equivalence-class ec) (rk:character-class cc)
             (rk:collating-symbol cs)  character
             (rk:range start end)
             nil)
NOTES:
   expression_term : single_expression
                   | range_expression ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-FOLLOW-LIST" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:
RETURN:  (:follow-list expression...)
         or (:error message)
         or  nil
   follow_list    :             expression_term
                  | follow_list expression_term  ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-BRACKET-LIST" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a bracket-list.
RETURN:  (:follow-list expression...) or nil.
NOTES:
   bracket_list   : follow_list
                  | follow_list '-' ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BE-BRACKET-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses a bracket-expression.
RETURN:  (rk:matching expression...) or (rk:non-matching expression...)
         or (:error message) or nil.
NOTES:
   bracket_expression : '[' matching_list ']'
                      | '[' nonmatching_list ']' ;
   matching_list  : bracket_list  ;
   nonmatching_list : '^' bracket_list ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-DUPL-SYMBOL" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parse
RETURN: (rk:repeat min max) with min,max in (or rk:infinity (integer 0))
        or (:error message)
        or nil if not looking at a re-dupl-symbol.
NOTES:
RE_dupl_symbol : '*'
               | Back_open_brace DUP_COUNT               Back_close_brace
               | Back_open_brace DUP_COUNT ','           Back_close_brace
               | Back_open_brace DUP_COUNT ',' DUP_COUNT Back_close_brace ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-ONE-CHAR-OR-COLL-ELEM" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses s single character or a coll-elem regexp.
RETURN:  (or (rk:matching ...) (rk:non-matching ...) rk:any character)
NOTES:
one_char_or_coll_elem_RE : ORD_CHAR
               | QUOTED_CHAR
               | '.'
               | bracket_expression ;
QUOTED_CHAR     ^    .   *    [    $    \\
ORD_CHAR        any but SPEC_CHAR
SPEC_CHAR
    For basic regular expressions, one of the following special characters:
    .    Anywhere outside bracket expressions
        Anywhere outside bracket expressions
    [    Anywhere outside bracket expressions
    ^    When used as an anchor (see BRE Expression Anchoring )
         or when first in a bracket expression
    $    When used as an anchor
    *    Anywhere except first in an entire RE,
         anywhere in a bracket expression, directly following '(' ,
         directly following an anchoring '^'.
   ==> ORD_CHAR excludes .  [ and * but when first of the expression.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-NONDUPL-RE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
nondupl_RE     : one_char_or_coll_elem_RE
               | Back_open_paren RE_expression Back_close_paren
               | BACKREF ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-SIMPLE-RE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
simple_RE      : nondupl_RE
               | nondupl_RE RE_dupl_symbol ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RE_expression  :               simple_RE
               | RE_expression simple_RE ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRE-BASIC-REG-EXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
basic_reg_exp  :          RE_expression
               | L_ANCHOR
               |                        R_ANCHOR
               | L_ANCHOR               R_ANCHOR
               | L_ANCHOR RE_expression
               |          RE_expression R_ANCHOR
               | L_ANCHOR RE_expression R_ANCHOR
               ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERE-DUPL-SYMBOL" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:     Parse
RETURN: (rk:repeat min max) with min,max in (or rk:infinity (integer 0))
        or (:error message)
        or nil if not looking at a re-dupl-symbol.
NOTES:
ERE_dupl_symbol    : '*'
                   | '+'
                   | '?'
                   | '{' DUP_COUNT               '}'
                   | '{' DUP_COUNT ','           '}'
                   | '{' DUP_COUNT ',' DUP_COUNT '}'  ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERE-ONE-CHAR-OR-COLL-ELEM" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:      Parses s single character or a coll-elem regexp.
RETURN:  (or (rk:matching ...) (rk:non-matching ...) rk:any character)
NOTES:
one_char_or_coll_elem_ERE  : ORD_CHAR
                   | QUOTED_CHAR
                   | '.'
                   | bracket_expression ;
QUOTED_CHAR     ^    .    [    $    (    )    |
                *    +    ?    {    \\
ORD_CHAR        any but SPEC_CHAR
SPEC_CHAR
    For basic regular expressions, one of the following special characters:
    .    Anywhere outside bracket expressions
        Anywhere outside bracket expressions
    [    Anywhere outside bracket expressions
    ^    When used as an anchor (see BRE Expression Anchoring )
         or when first in a bracket expression
    $    When used as an anchor
    *    Anywhere except first in an entire RE,
         anywhere in a bracket expression, directly following '(' ,
         directly following an anchoring '^'.

    ^    .    [    $    (    )    |    *    +    ?    {    


   ==> ORD_CHAR excludes .  [ and * but when first of the expression.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERE-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
ERE_expression     : one_char_or_coll_elem_ERE
                   | '^'
                   | '$'
                   | '(' extended_reg_exp ')'
                   | ERE_expression ERE_dupl_symbol ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERE-BRANCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
ERE_branch         :            ERE_expression
                   | ERE_branch ERE_expression ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ERE-EXTENDED-REG-EXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
extended_reg_exp   :                      ERE_branch
                   | extended_reg_exp '|' ERE_branch ;
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-BASIC-RE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESTRING" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-EXTENDED-RE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RESTRING" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHARACTER-CLASSES*" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(LIST (LIST \"alnum\" #'ALPHANUMERICP) (LIST \"alpha\" #'ALPHA-CHAR-P)
      (LIST \"blank\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (OR
               (CHAR= (CODE-CHAR 32)
                      COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
               (CHAR= (CODE-CHAR 9)
                      COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH))))
      (LIST \"cntrl\" (COMPLEMENT #'GRAPHIC-CHAR-P))
      (LIST \"digit\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (DIGIT-CHAR-P
               COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH 10)))
      (LIST \"graph\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (AND
               (GRAPHIC-CHAR-P
                COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
               (NOT
                (CHAR= (CODE-CHAR 32)
                       COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)))))
      (LIST \"lower\" #'LOWER-CASE-P) (LIST \"print\" #'GRAPHIC-CHAR-P)
      (LIST \"punct\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (AND
               (GRAPHIC-CHAR-P
                COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
               (NOT
                (ALPHANUMERICP
                 COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)))))
      (LIST \"space\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (MEMBER
               (CHAR-CODE
                COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
               '(32 9 10 11 12 13))))
      (LIST \"upper\" #'UPPER-CASE-P)
      (LIST \"xdigit\"
            (LAMBDA (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH)
              (DIGIT-CHAR-P
               COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::CH 16))))")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CHARSET" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "An abstract class for a character set.
This class defines the interface to whatever charset implementation."
     :SLOT-LIST NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CHARSET" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "
RETURN:  An instance of a subclass of charset, selected according to
         the value of char-code-limit.
")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CHAR-MIN" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CHAR-MAX" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "ADD-CLASS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CHAR-CLASS-NAME" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "INVERSE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTAINS-CHAR-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "A character set representation based on bit array.
This is representation may be used when char-code-limit is 'small'."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BITS" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "BITS" :PACKAGE-NAME
         "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CH" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-CLASS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CHAR-CLASS-NAME" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INVERSE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)))
     :DOCUMENTATION "
DO:     complements the set.
")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTAINS-CHAR-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-BITMAP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CH" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "MIN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM2410" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "MAX" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM2411" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-AFTER-LAST" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RANGE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-CONTAINS-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RANGE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RANGE-SET" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RANGE-LIST" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-GUARD-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-SEEK" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN: The last cons whose cdr+1 is >= n.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-ADD-NUMBER" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-COPY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COPY" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-UNION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RSA" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "RSB" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "UNION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TEST-RANGE-SET-UNION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RANGE-SET-CONTAINS-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "N" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RANGE-SET-VECTOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "CHARSET-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CHARSET" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION
     "A character set representation based on binary trees of ranges
and additional list of character classes.
This is representation may be used when char-code-limit is 'big'."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RANGE-SET" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "RANGE-SET" :PACKAGE-NAME
         "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "RANGE-VECTOR" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "RANGE-VECTOR" :PACKAGE-NAME
         "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CHAR-CLASSES" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CHAR-CLASSES" :PACKAGE-NAME
         "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMPLEMENTED" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "COMPLEMENTED" :PACKAGE-NAME
         "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RCCOMPARE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "RANGE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "CC" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-CHAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-RANGE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CH" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-RANGE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-RANGE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "ADD-CLASS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-RANGE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CHAR-CLASS-NAME" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INVERSE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-RANGE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)))
     :DOCUMENTATION "
DO:     complements the set.
")
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTAINS-CHAR-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "SELF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARSET-RANGE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      ((:NAME "CH" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LIGHTEN" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "OBJ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PRINT-RNODE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LEVEL" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RNODE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "A rnode represent a compiled regexp node" :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "MATCHF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TOKEN" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CHILDREN" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RNODE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "MATCHF" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3035" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "TOKEN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3036" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "CHILDREN" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3037" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT3038" :PACKAGE-NAME NIL :EXTERNALP NIL)
       (:NAME "RNODE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      (:NAME "STREAM3039" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RNODE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "RNODE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RNODE-WALK" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "FUN" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RSTATE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "State data used when matching a rnode." :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TRY" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "START" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "END" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RSTATE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "TRY" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3133" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "START" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3134" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "END" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3135" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PRINT-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "OBJECT3136" :PACKAGE-NAME NIL :EXTERNALP NIL)
       (:NAME "RSTATE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
      (:NAME "STREAM3137" :PACKAGE-NAME NIL :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RSTATE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RSTATE-RETRY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRY-ONCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "TRY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CLAUSES" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
SYNTAX:  (try (initially [sexp|(immediately-then)]...)
              (then sexp...))
")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "RENV" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "An renv gather the environment (variables) used to run a compiled
regexp matched, ie. rnode."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EQUALF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NEWLINEPF" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS NIL
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUBEXPS" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "REGEXP" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "BOL" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EOL" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NEWLINE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RENV" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "EQUALF" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3291" :PACKAGE-NAME NIL :EXTERNALP NIL))
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQUAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      (((:NAME "NEWLINEPF" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3292" :PACKAGE-NAME NIL :EXTERNALP NIL))
       ((:NAME "COMPILE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        ((:NAME "LAMBDA" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
         ((:NAME "CH" :PACKAGE-NAME
           "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
         ((:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) #\Newline
          (:NAME "CH" :PACKAGE-NAME
           "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP
           NIL)))))
      (((:NAME "SEQUENCE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3293" :PACKAGE-NAME NIL :EXTERNALP NIL))
       "")
      (((:NAME "LENGTH" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3294" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "POSITION" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3295" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "SUBEXPS" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3296" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "REGEXP" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3297" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "BOL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3298" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "EOL" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3299" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "NEWLINE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM3300" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RENV" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SUBEXP-FILLED-P" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUBEXP-CLEAR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUBEXP-SET" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "START" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUBEXP-START" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "SUBEXP-END" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SUBEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RENV-SET-SEQUENCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "NEW-SEQ" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RENV-SET-REGEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RENS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-B-ANCHOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
Beginning of string anchor.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-E-ANCHOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
End of string anchor.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-L-ANCHOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
Beginning of line anchor.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-R-ANCHOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
End of line anchor.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-ANY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-ITEM" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-SEQUENCE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-REPEAT-SHY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:    match min to max repeatition, smallest first.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-REPEAT-GREEDY" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
DO:    match min to max repeatition, greatest first.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-ALTERNATIVE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-SUBEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-BACKREF" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-MATCHING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RMATCH-NON-MATCHING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STATE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "ENV" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MATCH-FUNCTION-ALIST*" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "`((COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:B-ANCHOR
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-B-ANCHOR)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:E-ANCHOR
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-E-ANCHOR)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:L-ANCHOR
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-L-ANCHOR)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:R-ANCHOR
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-R-ANCHOR)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:ANY
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-ANY)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:ITEM
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-ITEM)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:SEQUENCE
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-SEQUENCE)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:REPEAT
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-REPEAT-GREEDY)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:REPEAT-SHY
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-REPEAT-SHY)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:ALTERNATIVE
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-ALTERNATIVE)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:SUBEXP
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-SUBEXP)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:BACKREF
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-BACKREF)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:MATCHING
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-MATCHING)
  (COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD:NON-MATCHING
   ,@#'COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX::RMATCH-NON-MATCHING))")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-MATCH-FUNCTION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-BRACKET-EXPRESSION" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN: The charset described by the regex, either a rk:matching
        or a rk:non-matching. The charset is not complemented for
        rk:non-matching, this should be done by match function.

regexp --> (or (rk:matching     mexpr...)
               (rk:non-matching mexpr...)
mexpr --> (or
           character
           (rk:collating-symbol  string/collating-element)
           (rk:equivalence-class string/equivalence-class)
           (rk:character-class   string/class-name)
           (rk:range (or coll-elem-single collating-symbol)/start
                     (or coll-elem-single collating-symbol)/end))
NOTE: We don't compile bracket expressions for other atoms than characters!
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COMPILE-REGEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN:  A rnode representing the compiled regexp.
regexp --> (or character
              rk:any
              rk:l-anchor
              rk:r-anchor
              (rk:matching mexpr...)
              (rk:non-matching mexpr...)
              (rk:backref  integer)
              (rk:subexp   regex)
              (rk:sequence regex...)
              (rk:repeat  integer (or integer rk:infinity) bexp)
              (rk:alternative regex...))
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COUNT-SUBEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION "
RETURN: The number of subexp found in regexp
")
    (:TYPE :STRUCT :SYMBOL
     (:NAME "MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "This structure stores a (start,end) couple specifying the range matched
by a group (or the whole regexp)."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "START" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "END" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "START" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4299" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "END" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4300" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH-STRING" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MATCH" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T))
     :DOCUMENTATION
     "Extracts the substring of STRING corresponding to a given pair of
start and end indices. The result is shared with STRING.
If you want a freshly consed string, use copy-string
or (coerce (match-string ...) 'simple-string).")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REGEXP-QUOTE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-RANGE-VECTOR" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-PARSE-WHOLE-REGEXP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-DECORATE-TREE" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-COLLECT-GROUPS" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-INIT" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SLOT-BEGIN" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PJB-RE-SLOT-END" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MATCH" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REGEXP" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "START" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "END" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL))
     :DOCUMENTATION
     "Common-Lisp: This function returns as first value a match structure
containing the indices of the start and end of the first match for the
regular expression REGEXP in STRING, or nil if there is no match.
If START is non-nil, the search starts at that index in STRING.
If END is non-nil, only (subseq STRING START END) is considered.
The next values are match structures for every '(...)' construct in REGEXP,
in the order that the open parentheses appear in REGEXP.


start:   the first character of STRING to be considered (defaults to 0)
end:     the after last character of STRING to be considered
         (defaults to (length string)).
RETURN:  index of start of first match for REGEXP in STRING, nor nil.
")
    (:TYPE :TYPE :SYMBOL
     (:NAME "SIZE-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :TYPE :SYMBOL
     (:NAME "REGOFF-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "REGEX-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "
NSUB:  Number of parenthesized subexpressions.
"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NSUB" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "ENV" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EXTENDED" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "IGNORE-CASE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NOSUB" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "NEWLINE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REGEX-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "NSUB" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4441" :PACKAGE-NAME NIL :EXTERNALP NIL))
       0)
      (((:NAME "ENV" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4442" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "EXTENDED" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4443" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "IGNORE-CASE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4444" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "NOSUB" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4445" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (((:NAME "NEWLINE" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4446" :PACKAGE-NAME NIL :EXTERNALP NIL))
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :STRUCT :SYMBOL
     (:NAME "REGMATCH-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "STRUCTURE-OBJECT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "
SO:  Byte offset from start of string to start of substring.
EO:  Byte offset from start of string of the first character
     after the end of substring.
"
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SO" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EO" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       :ACCESSORS NIL :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-REGMATCH-T" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (((:NAME "SO" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4571" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1)
      (((:NAME "EO" :PACKAGE-NAME "KEYWORD" :EXTERNALP T)
        (:NAME "DUM4572" :PACKAGE-NAME NIL :EXTERNALP NIL))
       -1))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REGCOMP" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PATTERN" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "EXTENDED" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "IGNORE-CASE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "NOSUB" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "NEWLINE" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "
RETURN:  A regex-t representing the compiled regular expression PATTERN.
RAISE:   An ERROR condition, in case of syntax error.
")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "REGEXEC" :PACKAGE-NAME
      "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "REGEX" :PACKAGE-NAME
       "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "NMATCH" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "BOL" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "EOL" :PACKAGE-NAME
        "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "
RETURN:  match ;
         (or (not match) (null nmatch) (zerop nmatch) (re-nosub regex)) ==> nil
         (eq t nmatch) ==> A vector of regmatch-t with (1+ (re-nsub regex))
                           items
         (numberp nmatch) ==> A vector of regmatch-t with nmatch items.
WARNING: Entry #0 of the result vector is always the start and end of the
         whole expression.  To get the start and end of the last subexpression
         you need to pass :nmatch (1+ (re-nsub regex)) [or T].
"))
   :EXTERNAL-SYMBOLS
   ((:NAME "REGMATCH-T" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "SIZE-T" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "MATCH-START" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGCOMP" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "MATCH-END" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "RE-NSUB" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGEXP-QUOTE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "MATCH" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "MATCH-STRING" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "RM-SO" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGOFF-T" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "RM-EO" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGEXEC" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGEXP-MATCH" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)
    (:NAME "REGEX-T" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME ".REGEXP-POSIX.KEYWORD" :FULL-NAME
   "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :DOCUMENTATION "
This package gathers and exports regexp keywords.

    ALTERNATIVE
    ANY
    BACKREF
    B-ANCHOR
    CHARACTER-CLASS
    COLLATING-SYMBOL
    E-ANCHOR
    EQUIVALENCE-CLASS
    INFINITY
    ITEM
    L-ANCHOR
    MATCHING
    NON-MATCHING
    R-ANCHOR
    RANGE
    REPEAT
    REPEAT-SHY
    SEQUENCE
    SET-SEQUENCE
    SUBEXP


License:

    AGPL3
    
    Copyright Pascal J. Bourguignon 2002 - 2012
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.
    
    You should have received a copy of the GNU Affero General Public License
    along with this program.
    If not, see <http://www.gnu.org/licenses/>


"
   :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "BACKREF" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "COLLATING-SYMBOL" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "ANY" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "SUBEXP" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "ALTERNATIVE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "NON-MATCHING" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "SEQUENCE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "B-ANCHOR" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "CHARACTER-CLASS" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "E-ANCHOR" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "L-ANCHOR" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "SET-SEQUENCE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "REPEAT" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "REPEAT-SHY" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "R-ANCHOR" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "MATCHING" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "RANGE" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "EQUIVALENCE-CLASS" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "INFINITY" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP T)
    (:NAME "ITEM" :PACKAGE-NAME
     "COM.INFORMATIMAGO.COMMON-LISP.REGEXP.REGEXP-POSIX.KEYWORD" :EXTERNALP
     T)))))
