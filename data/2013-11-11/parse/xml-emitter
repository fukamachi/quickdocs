
(:TYPE :SYSTEM :NAME "xml-emitter" :AUTHOR "Peter Scott" :MAINTAINER NIL
 :VERSION NIL :LICENCE NIL :DESCRIPTION NIL :LONG-DESCRIPTION NIL :DEPENDS-ON
 ("CL-UTILITIES") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "XML-EMITTER" :FULL-NAME "XML-EMITTER" :DOCUMENTATION
   NIL :SYMBOL-LIST
   ((:TYPE :VARIABLE :SYMBOL
     (:NAME "*ENTITIES*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "#((\"lt;\" #\\<) (\"gt;\" #\\>) (\"amp;\" #\\&) (\"apos;\" #\\') (\"quot;\" #\\\"))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*WHITESPACE*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE
     "(REMOVE-DUPLICATES '(#\\Newline #\\  #\\Tab #\\Return #\\Newline))")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CHAR-ESCAPES*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(LET ((XML-EMITTER::TABLE
       (MAKE-ARRAY 256 :ELEMENT-TYPE 'STRING :INITIAL-ELEMENT \"\")))
  (DECLARE (TYPE VECTOR XML-EMITTER::*ENTITIES*))
  (LOOP XML-EMITTER::FOR XML-EMITTER::CODE XML-EMITTER::FROM 0 XML-EMITTER::TO 255
        XML-EMITTER::FOR CHAR = (CODE-CHAR XML-EMITTER::CODE)
        XML-EMITTER::FOR XML-EMITTER::ENTITY = (FIRST
                                                (FIND CHAR
                                                      XML-EMITTER::*ENTITIES*
                                                      :TEST #'CHAR= :KEY
                                                      #'SECOND))
        DO (SETF (SVREF XML-EMITTER::TABLE XML-EMITTER::CODE)
                   (COND
                    (XML-EMITTER::ENTITY
                     (CONCATENATE 'STRING \"&\" XML-EMITTER::ENTITY))
                    ((AND
                      (OR (< XML-EMITTER::CODE 32) (> XML-EMITTER::CODE 126))
                      (NOT (= XML-EMITTER::CODE 10))
                      (NOT (= XML-EMITTER::CODE 9)))
                     (FORMAT NIL \"&#x~x;\" XML-EMITTER::CODE))
                    (T (FORMAT NIL \"~x\" CHAR))))
        XML-EMITTER::FINALLY (RETURN XML-EMITTER::TABLE))
  XML-EMITTER::TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WRITE-ESCAPED" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Writes string to stream with all character entities escaped.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*XML-OUTPUT-STREAM*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :DOCUMENTATION "The stream to write XML to" :INITIAL-VALUE
     "*STANDARD-OUTPUT*")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*INDENT*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :DOCUMENTATION "Number of spaces to indent each line of XML output"
     :INITIAL-VALUE "0")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INDENT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "SPACES" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "*INDENT*" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)))
     :DOCUMENTATION "Indent a given number of spaces")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-INDENT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "SPACES" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL) 4))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION "Increase the indentation level in BODY by SPACES")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-OUT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDENT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Write X to XML output, escaped and optionally indented")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "XML-AS-IS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "X" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "INDENT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Write X to XML output, unescaped and optionally indented")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "START-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTRS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "NAMESPACE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION "Write a start tag to XML output")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "END-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)) :DOCUMENTATION
     "Write en ending tag to XML output")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ATTRS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "NAMESPACE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION
     "Wrap BODY in a tag. BODY is indented, and linebreaks are added.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-SIMPLE-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "NAME" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "ATTRS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
       (:NAME "NAMESPACE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION "Like WITH-TAG, but without the linebreaks.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-XML-OUTPUT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "ENCODING" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
        "ISO-8859-1"))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION
     "Wrap XML output on STREAM with the necessary XML heading information")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SIMPLE-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "CONTENT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ATTRS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "NAMESPACE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION "Emit a simple tag with given content")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EMIT-SIMPLE-TAGS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TAGS-PLIST" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION
     "Given a plist mapping tag names to values (or nil), emit tags in
the order given, skipping ones with nil values. Tag names are
downcased unless they're passed as strings.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RSS-CHANNEL-HEADER" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TITLE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "LINK" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      ((:NAME "LANGUAGE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL) "en-us")
      (:NAME "IMAGE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "IMAGE-TITLE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "IMAGE-LINK" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RSS-ITEM" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "TITLE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "LINK" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "DESCRIPTION" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "AUTHOR" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "CATEGORY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "COMMENTS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "GUID" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "PUBDATE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
      (:NAME "SOURCE" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-RSS2" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T) :LAMBDA-LIST
     (((:NAME "STREAM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       ((:NAME "ENCODING" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL)
        "ISO-8859-1"))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP NIL))
     :DOCUMENTATION NIL))
   :EXTERNAL-SYMBOLS
   ((:NAME "RSS-CHANNEL-HEADER" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "RSS-ITEM" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "WITH-XML-OUTPUT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "EMIT-SIMPLE-TAGS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "WITH-SIMPLE-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "XML-AS-IS" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "SIMPLE-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "XML-OUT" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "WITH-RSS2" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)
    (:NAME "WITH-TAG" :PACKAGE-NAME "XML-EMITTER" :EXTERNALP T)))))
