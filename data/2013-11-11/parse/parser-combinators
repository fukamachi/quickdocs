
(:TYPE :SYSTEM :NAME "parser-combinators" :AUTHOR
 "Jakub Higersberger <ramarren@gmail.com>" :MAINTAINER
 "Jakub Higersberger <ramarren@gmail.com>" :VERSION "0" :LICENCE "BSD-style"
 :DESCRIPTION "An implementation of parser combinators for Common Lisp"
 :LONG-DESCRIPTION NIL :DEPENDS-ON ("ITERATE" "ALEXANDRIA") :PACKAGE-LIST
 ((:TYPE :PACKAGE :NAME "PARSER-COMBINATORS" :FULL-NAME "PARSER-COMBINATORS"
   :DOCUMENTATION NIL :SYMBOL-LIST
   ((:TYPE :CLASS :SYMBOL
     (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "HEAD" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "HEAD-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TAIL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TAIL-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SIZE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "SIZE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITIAL-CONTENTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Return top element without removing it")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "EMPTY-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "True if collection is empty")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PUSH-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Push value to the front")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "POP-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Remove and return value from the front")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PUSH-BACK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Push value to the back")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "PEEK-BACK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "COLLECTION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Return value from the back without removing it")
    (:TYPE :METHOD :SYMBOL
     (:NAME "EMPTY-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PEEK-BACK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PUSH-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POP-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "PUSH-BACK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUEUE-TO-LIST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "QUEUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*TAG-STACK*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTEXT-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CONTEXT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TAGS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TAGS-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTEXT-COMMON" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "LENGTH-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "FRONT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CACHE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CACHE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SEEN-POSTIONS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       :ACCESSORS
       ((:NAME "SEEN-POSTIONS-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COMMON" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "COMMON-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "POSITION-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "CACHE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "LENGTH-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "FRONT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "SEEN-POSITIONS-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     ((:NAME "SETF" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FRONT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :LAMBDA-LIST
     ((:NAME "NEW-VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "POSITION-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "CONTEXT-FRONT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "COPY-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "CLASS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ADDITIONAL-ARGUMENTS" :PACKAGE-NAME "PARSER-COMBINATORS"
       :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NOTE-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "POSN" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTEXT-PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-CONTEXT-AT-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "BASE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONTEXT-AT-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTEXT-NEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-NEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-NEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTEXT-EQUAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-EQUAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-EQUAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTEXT-GREATER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-GREATER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-GREATER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "UPDATE-FRONT-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-FRONT-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "UPDATE-FRONT-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-NEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "LIST-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORAGE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "STORAGE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONTEXT-AT-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BASE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "LIST-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL))
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "LIST-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-CONTEXT-COMMON" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "CONTEXT-COMMON" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORAGE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "STORAGE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :SUPER-CLASS-LIST
     ((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL :SLOT-LIST NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STORAGE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONTEXT-AT-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "BASE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "POSITION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-PEEK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      ((:NAME "CONTEXT2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*DEFAULT-CONTEXT-CACHE*" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :DOCUMENTATION NIL :INITIAL-VALUE ":VECTOR")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-CACHE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CACHE-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "LENGTH" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :GENERIC :SYMBOL
     (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "CACHE-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CACHE-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "*DEFAULT-CONTEXT-CACHE*" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "INITIALIZE-INSTANCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "INITARGS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&ALLOW-OTHER-KEYS" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "CACHE-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "*DEFAULT-CONTEXT-CACHE*" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :CLASS :SYMBOL
     (:NAME "PROMISE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "THUNK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "THUNK-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "VALUE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "VALUE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :MACRO :SYMBOL
     (:NAME "DELAY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORCE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PROMISE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*PARSER-CACHE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DROP-PARSER-CACHE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "CACHED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "LABEL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser modifier macro: cache parser as label in global cache.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-CACHED-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Define cached parser of no arguments.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CACHED-ARGUMENTS?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "LABEL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser modifier macro: cache parser as label with argument list equal under equal in global cache.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEF-CACHED-ARG-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ARGUMENTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Define cached parser with arguments.")
    (:TYPE :CLASS :SYMBOL
     (:NAME "PARSER-POSSIBILITY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "TREE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "TREE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUFFIX" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "SUFFIX-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Track a set of parse results, of which COUNTER are already computed and placed in STORAGE,
   and an unknown remainder is to be realised by repetitively calling CONTINUATION."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORAGE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "STORAGE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COUNTER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "COUNTER-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CONTINUATION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CONTINUATION-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
         NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :CLASS :SYMBOL
     (:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST NIL :DOCUMENTATION
     "Represent a set of parse results, as tracked by STORE, with one of them deemed CURRENT."
     :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "STORE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "STORE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "CURRENT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "CURRENT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :GENERIC :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Attempt to realise all results within PARSE-RESULT-STORE upto and including the N-th one,
   and return that upon success.  Otherwise return NIL.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)
       (:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)
       (:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "NTH-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "N" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      ((:NAME "PARSE-RESULT-STORE" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)
       (:NAME "NULL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MAKE-PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "CONTINUATION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Document all potential results of CONTINUATION as a PARSE-RESULT object.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CURRENT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NEXT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GATHER-RESULTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Obtain all of the results within PARSE-RESULT, starting with the current one, potentially
realising the non-realised ones in the backing store.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "COPY-PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      NIL)
     :LAMBDA-LIST
     ((:NAME "PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DO-NOTATION" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "MONAD-SEQUENCE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL)
      (:NAME "BIND" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "IGNORE-GENSYM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "MDO" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPEC" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Combinator: use do-like notation to sequentially link parsers. (<- name parser) allows capturing of return values.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*MEMO-TABLE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "(MAKE-HASH-TABLE)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-SEQUENCE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Parse a sequence (where a sequence is any object which implementes CONTEXT interface), return a
PARSE-RESULT object. All returned values may share structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-STRING" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Synonym for parse-sequence. Parse a string, return a PARSE-RESULT object. All returned values may share structure.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-SEQUENCE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COMPLETE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Parse a sequence (where a sequence is any object which implementes CONTEXT interface) and
return as multiple values the first result, whether the parse was incomplete, whether it was
successful, the context front and the position frequency table.  The context front is an object
containing the context which most advances the input sequence and a list of lists of parser
tags which were current at that point, which allows approximate error reporting.  It will be
NIL if the parse is successful and complete.  The position frequency table serves profiling
needs and maps sequence positions to the number of times a new context was created at that
position -- which should provide a rough hint at how problematic that particular spot is.

 If COMPLETE is T, return the first parse to consume the input
completely. If COMPLETE is :FIRST return the first result only when it the whole input was consumed,
or immediately return nil.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PARSE-STRING*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "COMPLETE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Synonym for parse-sequence*.  Parse a string and return as multiple values the first result,
whether the parse was incomplete, whether it was successful, the context front, and the
position frequency table.  The context front is an object containing the context which most
advances the input sequence and a list of lists of parser tags which were current at that
point, which allows approximate error reporting.  It will be NIL if the parse is successful and
complete.  The position frequency table serves profiling needs and maps sequence positions to
the number of times a new context was created at that position -- which should provide a rough
hint at how problematic that particular spot is.

 If COMPLETE is T, return the first parse to consume the input
completely. If COMPLETE is :FIRST return the first result only when it the whole input was consumed,
or immediately return nil.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DEFINE-ONESHOT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "IS-UNREAD" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SAT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T) :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: return a token satisfying a predicate.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Parser: accept token eql to argument")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAR-EQUAL?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "CHARACTER" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION "Parser: accept token char-equal to argument")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Implementation of string? specialized on context type. Returns as multiple
  values result and new context or nil on failure.")
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "VECTOR" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "STRING?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "STRING" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Non-backtracking parser: accept a sequence of elements with equality tested by TEST.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ENSURE-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "WITH-PARSERS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     (((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "PARSERS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXECUTE-BIND" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-GENERATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BIND" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-GENERATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXECUTE-CHOICE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "INP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOICE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Combinator: all alternatives from two parsers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOICE1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER2" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Combinator: one alternative from two parsers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOICES" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSER-LIST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Combinator: all alternatives from multiple parsers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOICES1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSER-LIST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Combinator: one alternative from multiple parsers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "V" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Primitive parser: return v, leaves input unmodified.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ZERO" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Primitive parser: parsing failure")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Primitive parser: consume item from input and return it.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FORCE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser modifier: fully realize result from parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser modifier: discard all results but the first")
    (:TYPE :MACRO :SYMBOL
     (:NAME "DELAYED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser modifier macro: parser will be built when called. This is necessary for left-recursive parsers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-LIST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSERS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: Return a list of results of PARSERS.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "%NAMED-SEQ?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "SEQUENCE-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSER-DESCRIPTIONS" :PACKAGE-NAME "PARSER-COMBINATORS"
       :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :MACRO :SYMBOL
     (:NAME "NAMED-SEQ?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSER-DESCRIPTIONS" :PACKAGE-NAME "PARSER-COMBINATORS"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: This is similar to MDO, except that constructed parsers cannot depend on the results of
previous ones and the final form is not used as a parser, but is automatically used to construct the
result. All names bound using the (<- name parser) construct are only available in that final form.

This parser generator is useful when full generality of MDO is not necessary, as it is implemented
non-recursively and has better memory performance.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CUT-TAG*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TAG?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "FORMAT-CONTROL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT-ARGUMENTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Parser modifier: add formatted string to tag stack for given parser.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CUT-TAG?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "FORMAT-CONTROL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL)
      (:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "FORMAT-ARGUMENTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Parser modifier: add formatted string to tag stack for given parser, suppressing all lower level
parsers.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CONTEXT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION
     "Parser: return current context without consuming any input")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "END?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: matches end of input, returns t")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BETWEEN?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser: accept between min and max expressions accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MANY?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: accept zero or more repetitions of expression accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MANY1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: accept one or more of expression accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMES?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Parser: accept exactly count expressions accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATLEAST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Parser: accept at least count expressions accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATMOST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Parser: accept at most count expressions accepted by parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEPBY1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER-ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-SEPARATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Parser: accept at least one of parser-item separated by parser-separator")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BRACKET?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER-OPEN" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-CENTER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-CLOSE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: accept parser-center bracketed by parser-open and parser-close")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEPBY?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER-ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-SEPARATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Parser: accept zero or more of parser-item separated by parser-separator")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEPBY1-CONS?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: as sepby1, but returns a list of a result of p and pairs (op p). Mainly a component parser for chains")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINL1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: accept one or more p reduced by result of op with left associativity")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINR1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: accept one or more p reduced by result of op with right associativity")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINL?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: like chainl1?, but will return v if no p can be parsed")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINR?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: like chainr1?, but will return v if no p can be parsed")
    (:TYPE :CLASS :SYMBOL
     (:NAME "RESULT-NODE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :SUPER-CLASS-LIST
     ((:NAME "PARSER-POSSIBILITY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       T))
     :DOCUMENTATION NIL :SLOT-LIST
     ((:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "EMIT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "EMIT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "UP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "UP-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T) :ACCESSORS
       ((:NAME "COUNT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)
      (:TYPE :CLASS-SLOT :SYMBOL
       (:NAME "SUFFIX-CONTINUATION" :PACKAGE-NAME "PARSER-COMBINATORS"
        :EXTERNALP NIL)
       :ACCESSORS
       ((:NAME "SUFFIX-CONTINUATION-OF" :PACKAGE-NAME "PARSER-COMBINATORS"
         :EXTERNALP NIL))
       :READERS NIL :WRITERS NIL :DOCUMENTATION NIL)))
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GATHER-NODES" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "NODE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BREADTH?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser: like between? but breadth first (shortest matches first)")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-AFTER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser: Find q after some sequence of p, earliest matches first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-BEFORE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser: Find a sequence of p terminated by q, doesn't consume q.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-AFTER-COLLECT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser: Find q after some sequence of p, earliest match first. Return cons of list of p-results and q")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: Find q, earliest match first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "HOOK?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: apply function to result of p")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOOK?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
      (:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: return result if p matches")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHOOKAHEAD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
      (:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: return result if p matches, but do no advance")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: result of p or nil")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "VALIDATE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "VALIDATION-FUNCTION" :PACKAGE-NAME "PARSER-COMBINATORS"
       :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "PRE-HOOK" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "IDENTITY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser: call validation-function on result of (funcall pre-hook p), fail if it returns nil,
otherwhise return it as a result")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXCEPT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser: match p unless q matches.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "NAMED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser macro: give BODY a NAME, so it can refer to itself without causing generator recursion.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NESTED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "BRACKET-LEFT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       #\()
      ((:NAME "BRACKET-RIGHT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       #\)))
     :DOCUMENTATION
     "Parser: parse a sequence of p, like between?, but with p possibly nested in brackets.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPRESSION?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TERM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OPERATORS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BRACKET-LEFT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "BRACKET-RIGHT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Parser: Reduce a sequence of terms with unary/binary operators with precedence.
 OPERATORS is a list of (op-parser :left/:right/:unary), where OP-PARSER is a parser consuming
 an operator and returning a reduction function. Highest precedence first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MEMOIZE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "LABEL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "GENSYM" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Parser modifier: memoizes the parser, which if called again at a given position it will return a result
immediately. LABEL is used for memoization key, use explicit one if the parser is used in multiple places.")
    (:TYPE :VARIABLE :SYMBOL
     (:NAME "*CURTAIL*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :DOCUMENTATION NIL :INITIAL-VALUE "NIL")
    (:TYPE :MACRO :SYMBOL
     (:NAME "CURTAIL?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "NAME" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "BODY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Parser modifier: add recursion curtailing to PARSER, naming the curtailed parser NAME. Left
recursive parser parser will only be nested once per remaining length of the input string. Note:
this is only necessary for a limited class of left recursive parsers. Non-left recursive parsers
should be implemented using just `named?`, and most left-recursive parsers using that in combination
with `chainl1?`. Also see `expression?`.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEQ-LIST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSERS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: Return a list of result of PARSERS.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "NAMED-SEQ*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&REST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "PARSER-DESCRIPTIONS" :PACKAGE-NAME "PARSER-COMBINATORS"
       :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: This is similar to MDO, except that constructed parsers cannot depend on
the results of previous ones and the final form is not used as a parser, but is automatically used
to construct the result. All names bound using the (<- name parser) construct are only available in
that final form.

This parser generator is useful when full generality of MDO is not necessary, as it is implemented
non-recursively and has better memory performance.")
    (:TYPE :MACRO :SYMBOL
     (:NAME "MDO*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&BODY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "SPEC" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Like NAMED-SEQ*, but with MDO syntax: the last element must be a parser.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BETWEEN*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "MIN" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "MAX" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Non-backtracking parser: find the first, longest chain of expression accepted by parser of length between min and max")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MANY*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: collect as many of first result of parser as possible")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "MANY1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible, and at least one, of parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATLEAST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible and at least count of parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ATMOST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible but at most count of parser")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEPBY1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER-ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-SEPARATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible of parser-item separated by parser-separator, but at least one.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "SEPBY*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PARSER-ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PARSER-SEPARATOR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
       NIL))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible of parser-item separated by parser-separator.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINL1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible, but at least one of p, reduced by result of op with left associativity")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WHITESPACE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Non-backtracking parser: accept a sequence of whitespace characters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WORD*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept a string of alphanumeric characters")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PURE-WORD*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept a string of alphabetic characters")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIX" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL) 10))
     :DOCUMENTATION
     "Non-backtracking parser: accept natural number, consuming as many digits as possible")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIX" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL) 10))
     :DOCUMENTATION
     "Non-backtracking parser: accept integer, consuming as many digits as possible")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINR1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: accept as many as possible, but at least one of p, reduced by result of op with right associativity")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINL*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: like chainl1*, but will return v if no p can be parsed")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "CHAINR*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OP" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "V" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: like chainr1*, but will return v if no p can be parsed")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "TIMES*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "COUNT" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
     :DOCUMENTATION
     "Non-backtracking parser: accept exactly count expressions accepted by parser, without backtracking.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-AFTER*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: Find first q after some sequence of p.")
    (:TYPE :GENERIC :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Parser gather-if-not* specialized on context type")
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        T))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :METHOD :SYMBOL
     (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     (((:NAME "INPUT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T))
      (:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION NIL)
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GATHER-IF-NOT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Non-backtracking parser: Find a sequence of tokens terminated by one for which predicate returns true, which is not consumed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GATHER-IF*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
     :LAMBDA-LIST
     ((:NAME "PREDICATE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Non-backtracking parser: Find a sequence of tokens for which predicate returns true.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "GATHER-BEFORE-TOKEN*" :PACKAGE-NAME "PARSER-COMBINATORS"
      :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TOKEN" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "ACCEPT-END" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Non-backtracking parser: Find a sequence of tokens terminated by single token, which is not consumed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-BEFORE-TOKEN*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "TOKEN" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
      ((:NAME "TEST" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "FUNCTION" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "EQL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Non-backtracking parser: Find a sequence of p terminated by single token q, which is not consumed.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-BEFORE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Non-backtracking parser: Find a sequence of p terminated by q, doesn't consume q.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND-AFTER-COLLECT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
      T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       ((:NAME "QUOTE" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
        (:NAME "LIST" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))))
     :DOCUMENTATION
     "Non-backtracking parser: Find first q after some sequence of p. Return cons of list of p-results and q")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "BEFORE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION
     "Non-backtracking parser: Find a p before q, doesn't consume q.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "FIND*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "Q" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Non-backtracking parser: Find first q")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "OPT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL))
     :DOCUMENTATION "Non-backtracking parser: result of p or nil")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "EXPRESSION*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "TERM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "OPERATORS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
      (:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "BRACKET-LEFT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "BRACKET-RIGHT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Non-backtracking parser: Reduce a sequence of terms with unary/binary operators with precedence.
 OPERATORS is a list of (op-parser :left/:right/:unary), where OP-PARSER is a parser consuming
 an operator and returning a reduction function. Highest precedence first.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "DIGIT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept digit character")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LOWER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept lowercase character")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "UPPER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept uppercase character")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "LETTER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept alphabetic character")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "ALPHANUM?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept alphanumeric character")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WHITESPACE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RESULT-TYPE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ACCEPT-EMPTY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION "Parser: accept a sequence of whitespace characters.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "WORD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept a string of alphanumeric characters")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "PURE-WORD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
     :DOCUMENTATION "Parser: accept a string of alphabetic characters")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "NAT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIX" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL) 10))
     :DOCUMENTATION "Parser: accept natural numbers")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "INT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&OPTIONAL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "RADIX" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL) 10))
     :DOCUMENTATION "Parser: accept an integer, return as integer.")
    (:TYPE :FUNCTION :SYMBOL
     (:NAME "QUOTED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
     :LAMBDA-LIST
     ((:NAME "&KEY" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)
      ((:NAME "QUOTE-CHAR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       #\")
      ((:NAME "LEFT-QUOTE-CHAR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "RIGHT-QUOTE-CHAR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "NIL" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T))
      ((:NAME "ESCAPE-CHAR" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP NIL)
       #\\)
      ((:NAME "INCLUDE-QUOTES" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
        NIL)
       (:NAME "T" :PACKAGE-NAME "COMMON-LISP" :EXTERNALP T)))
     :DOCUMENTATION
     "Parser: accept a string delimited with quote-char, possibly escaped by escape-char, possibly including quotation chars."))
   :EXTERNAL-SYMBOLS
   ((:NAME "CHOICES1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEPBY1-CONS?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "VALIDATE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-AFTER-COLLECT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
     T)
    (:NAME "WHITESPACE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "EXCEPT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEPBY?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "POSITION-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "COMMON-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MANY?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "LETTER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NAMED-SEQ*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEQ-LIST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHOOK?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DELAYED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "GATHER-RESULTS" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINR?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ATLEAST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MDO" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CONTEXT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "COPY-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NAT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ITEM" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "END-CONTEXT-P" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "EXPRESSION*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEPBY*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-AFTER*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "STRING?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "INT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ATMOST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ATLEAST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PURE-WORD*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MANY*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NAMED-SEQ?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MDO*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "<-" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHOICE1" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NAMED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MAKE-PARSE-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ALPHANUM?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PARSE-SEQUENCE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "GATHER-BEFORE-TOKEN*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
     T)
    (:NAME "MANY1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MANY1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PURE-WORD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "BETWEEN*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ATMOST?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SUFFIX-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MAKE-CONTEXT-AT-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "EXPRESSION?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NAT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINR1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAR?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PARSE-SEQUENCE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "OPT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "HOOK?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "STORAGE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "WHITESPACE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "LOWER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MAKE-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "BRACKET?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-BEFORE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "TREE-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEQ-LIST*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINR*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "BETWEEN?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DROP-PARSER-CACHE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DEF-CACHED-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "QUOTED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-AFTER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CUT-TAG?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "*DEFAULT-CONTEXT-CACHE*" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "GATHER-IF-NOT*-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "CHAINL1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "END?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "ZERO" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CONTEXT-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DEFINE-ONESHOT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "FIND*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CACHED-ARGUMENTS?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "STRING?-USING-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "NEXT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINL*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHOICES" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINL?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "WORD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-AFTER-COLLECT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
     T)
    (:NAME "CHAINR1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "TAGS-OF" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "BEFORE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "NESTED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHOICE" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FORCE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DEF-CACHED-ARG-PARSER" :PACKAGE-NAME "PARSER-COMBINATORS"
     :EXTERNALP T)
    (:NAME "VECTOR-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "DIGIT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CURTAIL?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "BREADTH?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CACHED?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "OPT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEPBY1*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "TAG?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-BEFORE-TOKEN*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
     T)
    (:NAME "CACHE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "TIMES?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "MEMOIZE?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHOOKAHEAD?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CHAINL1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "UPPER?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "INT?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "WORD*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CONTEXT-INTERVAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CURRENT-RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PARSE-STRING*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PARSE-STRING" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "END-CONTEXT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "CONTEXT-EQUAL" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SAT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "RESULT" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "PARSER-POSSIBILITY" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP
     T)
    (:NAME "GATHER-IF-NOT*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "FIND-BEFORE*" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)
    (:NAME "SEPBY1?" :PACKAGE-NAME "PARSER-COMBINATORS" :EXTERNALP T)))
  (:TYPE :PACKAGE :NAME "-DEBUG" :FULL-NAME "PARSER-COMBINATORS-DEBUG"
   :DOCUMENTATION NIL :SYMBOL-LIST NIL :EXTERNAL-SYMBOLS
   ((:NAME "C?" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG" :EXTERNALP T)
    (:NAME "FORMAT?" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG" :EXTERNALP T)
    (:NAME "STRING-POSITION" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG"
     :EXTERNALP T)
    (:NAME "*DEBUG-PRINT-RESULT*" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG"
     :EXTERNALP T)
    (:NAME "CHECK?" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG" :EXTERNALP T)
    (:NAME "WITH-POSN-INFO?" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG"
     :EXTERNALP T)
    (:NAME "*DEBUG-MODE*" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG" :EXTERNALP
     T)
    (:NAME "*PARSER-DEBUG-STREAM*" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG"
     :EXTERNALP T)
    (:NAME "WITH-POSITION-CACHE" :PACKAGE-NAME "PARSER-COMBINATORS-DEBUG"
     :EXTERNALP T)))))
